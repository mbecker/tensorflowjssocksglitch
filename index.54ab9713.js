function e(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function n(e,t){return Object.keys(t).forEach((function(n){"default"===n||"__esModule"===n||e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})})),e}var r={},s={},a=t.parcelRequire67dd;null==a&&((a=function(e){if(e in r)return r[e].exports;if(e in s){var t=s[e];delete s[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){s[e]=t},t.parcelRequire67dd=a),a.register("6vIWz",(function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)})),a.register("iUmep",(function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}})),a.register("4l3gu",(function(e,t){e.exports=!a("ercJj")((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))})),a.register("ercJj",(function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}})),a.register("3a5AV",(function(e,t){var n=a("6vIWz"),r=a("2vhAw"),s=a("j1MEY"),i=a("60QGC"),o=a("4aCBJ"),u=function(e,t,a){var l,c,h,p,d=e&u.F,f=e&u.G,m=e&u.S,g=e&u.P,y=e&u.B,b=f?n:m?n[t]||(n[t]={}):(n[t]||{}).prototype,x=f?r:r[t]||(r[t]={}),v=x.prototype||(x.prototype={});for(l in f&&(a=t),a)h=((c=!d&&b&&void 0!==b[l])?b:a)[l],p=y&&c?o(h,n):g&&"function"==typeof h?o(Function.call,h):h,b&&i(b,l,h,e&u.U),x[l]!=h&&s(x,l,p),g&&v[l]!=h&&(v[l]=h)};n.core=r,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u})),a.register("2vhAw",(function(e,t){var n=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=n)})),a.register("j1MEY",(function(e,t){var n=a("eTRJI"),r=a("8vCAc");e.exports=a("4l3gu")?function(e,t,s){return n.f(e,t,r(1,s))}:function(e,t,n){return e[t]=n,e}})),a.register("eTRJI",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e));var s=a("52eom"),i=a("iPD9T"),o=a("57V9s"),u=Object.defineProperty;r=a("4l3gu")?Object.defineProperty:function(e,t,n){if(s(e),t=o(t,!0),s(n),i)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}})),a.register("52eom",(function(e,t){var n=a("9eXBq");e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}})),a.register("9eXBq",(function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}})),a.register("iPD9T",(function(e,t){e.exports=!a("4l3gu")&&!a("ercJj")((function(){return 7!=Object.defineProperty(a("25GHC")("div"),"a",{get:function(){return 7}}).a}))})),a.register("25GHC",(function(e,t){var n=a("9eXBq"),r=a("6vIWz").document,s=n(r)&&n(r.createElement);e.exports=function(e){return s?r.createElement(e):{}}})),a.register("57V9s",(function(e,t){var n=a("9eXBq");e.exports=function(e,t){if(!n(e))return e;var r,s;if(t&&"function"==typeof(r=e.toString)&&!n(s=r.call(e)))return s;if("function"==typeof(r=e.valueOf)&&!n(s=r.call(e)))return s;if(!t&&"function"==typeof(r=e.toString)&&!n(s=r.call(e)))return s;throw TypeError("Can't convert object to primitive value")}})),a.register("8vCAc",(function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}})),a.register("60QGC",(function(e,t){var n=a("6vIWz"),r=a("j1MEY"),s=a("iUmep"),i=a("5BG6r")("src"),o=a("9CVVL"),u="toString",l=(""+o).split(u);a("2vhAw").inspectSource=function(e){return o.call(e)},(e.exports=function(e,t,a,o){var u="function"==typeof a;u&&(s(a,"name")||r(a,"name",t)),e[t]!==a&&(u&&(s(a,i)||r(a,i,e[t]?""+e[t]:l.join(String(t)))),e===n?e[t]=a:o?e[t]?e[t]=a:r(e,t,a):(delete e[t],r(e,t,a)))})(Function.prototype,u,(function(){return"function"==typeof this&&this[i]||o.call(this)}))})),a.register("5BG6r",(function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}})),a.register("9CVVL",(function(e,t){e.exports=a("7im85")("native-function-to-string",Function.toString)})),a.register("7im85",(function(e,t){var n=a("2vhAw"),r=a("6vIWz"),s=r["__core-js_shared__"]||(r["__core-js_shared__"]={});(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:a("c7Fzt")?"pure":"global",copyright:"Â© 2020 Denis Pushkarev (zloirock.ru)"})})),a.register("c7Fzt",(function(e,t){e.exports=!1})),a.register("4aCBJ",(function(e,t){var n=a("4RUEZ");e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,s){return e.call(t,n,r,s)}}return function(){return e.apply(t,arguments)}}})),a.register("4RUEZ",(function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}})),a.register("lisGC",(function(e,t){var n=a("eTRJI").f,r=a("iUmep"),s=a("hsIix")("toStringTag");e.exports=function(e,t,a){e&&!r(e=a?e:e.prototype,s)&&n(e,s,{configurable:!0,value:t})}})),a.register("hsIix",(function(e,t){var n=a("7im85")("wks"),r=a("5BG6r"),s=a("6vIWz").Symbol,i="function"==typeof s;(e.exports=function(e){return n[e]||(n[e]=i&&s[e]||(i?s:r)("Symbol."+e))}).store=n})),a.register("a1nqk",(function(e,t){var n=a("6vIWz"),r=a("2vhAw"),s=a("c7Fzt"),i=a("9NXjJ"),o=a("eTRJI").f;e.exports=function(e){var t=r.Symbol||(r.Symbol=s?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||o(t,e,{value:i.f(e)})}})),a.register("9NXjJ",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e)),r=a("hsIix")})),a.register("g0aA7",(function(e,t){var n=a("5dTGa");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}})),a.register("5dTGa",(function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}})),a.register("DLRHg",(function(e,t){var n=a("bljSd"),r=a("jUiLD"),s=a("kwjQj");e.exports=function(e){return function(t,a,i){var o,u=n(t),l=r(u.length),c=s(i,l);if(e&&a!=a){for(;l>c;)if((o=u[c++])!=o)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===a)return e||c||0;return!e&&-1}}})),a.register("bljSd",(function(e,t){var n=a("g0aA7"),r=a("6pFJL");e.exports=function(e){return n(r(e))}})),a.register("6pFJL",(function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}})),a.register("jUiLD",(function(e,t){var n=a("ataXq"),r=Math.min;e.exports=function(e){return e>0?r(n(e),9007199254740991):0}})),a.register("ataXq",(function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}})),a.register("kwjQj",(function(e,t){var n=a("ataXq"),r=Math.max,s=Math.min;e.exports=function(e,t){return(e=n(e))<0?r(e+t,0):s(e,t)}})),a.register("2mJzy",(function(e,t){var n=a("7im85")("keys"),r=a("5BG6r");e.exports=function(e){return n[e]||(n[e]=r(e))}})),a.register("aYPyv",(function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")})),a.register("2DlDA",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e)),r={}.propertyIsEnumerable})),a.register("5pz70",(function(e,t){var n=a("5dTGa");e.exports=Array.isArray||function(e){return"Array"==n(e)}})),a.register("a3UiQ",(function(e,t){var n=a("6pFJL");e.exports=function(e){return Object(n(e))}})),a.register("i2Md9",(function(e,t){var n=a("52eom"),r=a("2Albj"),s=a("aYPyv"),i=a("2mJzy")("IE_PROTO"),o=function(){},u=function(){var e,t=a("25GHC")("iframe"),n=s.length;for(t.style.display="none",a("d85Ru").appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[s[n]];return u()};e.exports=Object.create||function(e,t){var s;return null!==e?(o.prototype=n(e),s=new o,o.prototype=null,s[i]=e):s=u(),void 0===t?s:r(s,t)}})),a.register("2Albj",(function(e,t){var n=a("eTRJI"),r=a("52eom"),s=a("5YwqL");e.exports=a("4l3gu")?Object.defineProperties:function(e,t){r(e);for(var a,i=s(t),o=i.length,u=0;o>u;)n.f(e,a=i[u++],t[a]);return e}})),a.register("5YwqL",(function(e,t){var n=a("5U2GK"),r=a("aYPyv");e.exports=Object.keys||function(e){return n(e,r)}})),a.register("5U2GK",(function(e,t){var n=a("iUmep"),r=a("bljSd"),s=a("DLRHg")(!1),i=a("2mJzy")("IE_PROTO");e.exports=function(e,t){var a,o=r(e),u=0,l=[];for(a in o)a!=i&&n(o,a)&&l.push(a);for(;t.length>u;)n(o,a=t[u++])&&(~s(l,a)||l.push(a));return l}})),a.register("d85Ru",(function(e,t){var n=a("6vIWz").document;e.exports=n&&n.documentElement})),a.register("1l8wh",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e));var s=a("bljSd"),i=a("gqsXq").f,o={}.toString,u="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];r=function(e){return u&&"[object Window]"==o.call(e)?function(e){try{return i(e)}catch(e){return u.slice()}}(e):i(s(e))}})),a.register("gqsXq",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e));var s=a("5U2GK"),i=a("aYPyv").concat("length","prototype");r=Object.getOwnPropertyNames||function(e){return s(e,i)}})),a.register("3Q6hl",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e));var s=a("2DlDA"),i=a("8vCAc"),o=a("bljSd"),u=a("57V9s"),l=a("iUmep"),c=a("iPD9T"),h=Object.getOwnPropertyDescriptor;r=a("4l3gu")?h:function(e,t){if(e=o(e),t=u(t,!0),c)try{return h(e,t)}catch(e){}if(l(e,t))return i(!s.f.call(e,t),e[t])}})),a.register("47aXO",(function(e,t){var n=a("3a5AV"),r=a("2vhAw"),s=a("ercJj");e.exports=function(e,t){var a=(r.Object||{})[e]||Object[e],i={};i[e]=t(a),n(n.S+n.F*s((function(){a(1)})),"Object",i)}})),a.register("c22GO",(function(e,t){var n=a("iUmep"),r=a("a3UiQ"),s=a("2mJzy")("IE_PROTO"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}})),a.register("2QWQH",(function(e,t){var n=a("4l3gu"),r=a("5YwqL"),s=a("2RyWe"),i=a("2DlDA"),o=a("a3UiQ"),u=a("g0aA7"),l=Object.assign;e.exports=!l||a("ercJj")((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=r}))?function(e,t){for(var a=o(e),l=arguments.length,c=1,h=s.f,p=i.f;l>c;)for(var d,f=u(arguments[c++]),m=h?r(f).concat(h(f)):r(f),g=m.length,y=0;g>y;)d=m[y++],n&&!p.call(f,d)||(a[d]=f[d]);return a}:l})),a.register("2RyWe",(function(t,n){var r;e(t.exports,"f",(()=>r),(e=>r=e)),r=Object.getOwnPropertySymbols})),a.register("j4ZYG",(function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),a.register("k1Jzt",(function(e,t){var n=a("9eXBq"),r=a("52eom"),s=function(e,t){if(r(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=a("4aCBJ")(Function.call,a("3Q6hl").f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return s(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:s}})),a.register("cL3nP",(function(e,t){var n=a("5dTGa"),r=a("hsIix")("toStringTag"),s="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,a,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(a=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),r))?a:s?n(t):"Object"==(i=n(t))&&"function"==typeof t.callee?"Arguments":i}})),a.register("feq1U",(function(e,t){var n=a("4RUEZ"),r=a("9eXBq"),s=a("d0TSW"),i=[].slice,o={},u=function(e,t,n){if(!(t in o)){for(var r=[],s=0;s<t;s++)r[s]="a["+s+"]";o[t]=Function("F,a","return new F("+r.join(",")+")")}return o[t](e,n)};e.exports=Function.bind||function(e){var t=n(this),a=i.call(arguments,1),o=function(){var n=a.concat(i.call(arguments));return this instanceof o?u(t,n.length,n):s(t,n,e)};return r(t.prototype)&&(o.prototype=t.prototype),o}})),a.register("d0TSW",(function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}})),a.register("gSdVf",(function(e,t){var n=a("3a5AV"),r=a("6pFJL"),s=a("ercJj"),i=a("GFGMu"),o="["+i+"]",u=RegExp("^"+o+o+"*"),l=RegExp(o+o+"*$"),c=function(e,t,r){var a={},o=s((function(){return!!i[e]()||"âÂ"!="âÂ"[e]()})),u=a[e]=o?t(h):i[e];r&&(a[r]=u),n(n.P+n.F*o,"String",a)},h=c.trim=function(e,t){return e=String(r(e)),1&t&&(e=e.replace(u,"")),2&t&&(e=e.replace(l,"")),e};e.exports=c})),a.register("GFGMu",(function(e,t){e.exports="\t\n\v\f\r Â áá ââââââââââââ¯âã\u2028\u2029\ufeff"})),a.register("8pJpy",(function(e,t){var n=a("ataXq"),r=a("6pFJL");e.exports=function(e){var t=String(r(this)),s="",a=n(e);if(a<0||a==1/0)throw RangeError("Count can't be negative");for(;a>0;(a>>>=1)&&(t+=t))1&a&&(s+=t);return s}})),a.register("2H85W",(function(e,t){var n=a("9eXBq"),r=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&r(e)===e}})),a.register("kWbCT",(function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}})),a.register("6oSjH",(function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}})),a.register("7RvUW",(function(e,t){var n=a("6oSjH"),r=Math.pow,s=r(2,-52),i=r(2,-23),o=r(2,127)*(2-i),u=r(2,-126);e.exports=Math.fround||function(e){var t,r,a=Math.abs(e),l=n(e);return a<u?l*(a/u/i+1/s-1/s)*u*i:(r=(t=(1+i/s)*a)-(t-a))>o||r!=r?l*(1/0):l*r}})),a.register("6ASQY",(function(e,t){var n=a("ataXq"),r=a("6pFJL");e.exports=function(e){return function(t,s){var a,i,o=String(r(t)),u=n(s),l=o.length;return u<0||u>=l?e?"":void 0:(a=o.charCodeAt(u))<55296||a>56319||u+1===l||(i=o.charCodeAt(u+1))<56320||i>57343?e?o.charAt(u):a:e?o.slice(u,u+2):i-56320+(a-55296<<10)+65536}}})),a.register("k9IIO",(function(e,t){var n=a("c7Fzt"),r=a("3a5AV"),s=a("60QGC"),i=a("j1MEY"),o=a("gkdGW"),u=a("gITmU"),l=a("lisGC"),c=a("c22GO"),h=a("hsIix")("iterator"),p=!([].keys&&"next"in[].keys()),d="keys",f="values",m=function(){return this};e.exports=function(e,t,a,g,y,b,x){u(a,t,g);var v,w,k,I=function(e){if(!p&&e in C)return C[e];switch(e){case d:case f:return function(){return new a(this,e)}}return function(){return new a(this,e)}},S=t+" Iterator",N=y==f,T=!1,C=e.prototype,E=C[h]||C["@@iterator"]||y&&C[y],$=E||I(y),A=y?N?I("entries"):$:void 0,R="Array"==t&&C.entries||E;if(R&&(k=c(R.call(new e)))!==Object.prototype&&k.next&&(l(k,S,!0),n||"function"==typeof k[h]||i(k,h,m)),N&&E&&E.name!==f&&(T=!0,$=function(){return E.call(this)}),n&&!x||!p&&!T&&C[h]||i(C,h,$),o[t]=$,o[S]=m,y)if(v={values:N?$:I(f),keys:b?$:I(d),entries:A},x)for(w in v)w in C||s(C,w,v[w]);else r(r.P+r.F*(p||T),t,v);return v}})),a.register("gkdGW",(function(e,t){e.exports={}})),a.register("gITmU",(function(e,t){var n=a("i2Md9"),r=a("8vCAc"),s=a("lisGC"),i={};a("j1MEY")(i,a("hsIix")("iterator"),(function(){return this})),e.exports=function(e,t,a){e.prototype=n(i,{next:r(1,a)}),s(e,t+" Iterator")}})),a.register("3X79L",(function(e,t){var n=a("hsIix")("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,!"/./"[e](t)}catch(e){}}return!0}})),a.register("itBIn",(function(e,t){var n=a("3a5AV"),r=a("ercJj"),s=a("6pFJL"),i=/"/g,o=function(e,t,n,r){var a=String(s(e)),o="<"+t;return""!==n&&(o+=" "+n+'="'+String(r).replace(i,"&quot;")+'"'),o+">"+a+"</"+t+">"};e.exports=function(e,t){var s={};s[e]=t(o),n(n.P+n.F*r((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",s)}})),a.register("cuci0",(function(e,t){var n=a("52eom"),r=a("57V9s"),s="number";e.exports=function(e){if("string"!==e&&e!==s&&"default"!==e)throw TypeError("Incorrect hint");return r(n(this),e!=s)}})),a.register("8Q6II",(function(e,t){var n=a("gkdGW"),r=a("hsIix")("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||s[r]===e)}})),a.register("bSeTo",(function(e,t){var n=a("cL3nP"),r=a("hsIix")("iterator"),s=a("gkdGW");e.exports=a("2vhAw").getIteratorMethod=function(e){if(null!=e)return e[r]||e["@@iterator"]||s[n(e)]}})),a.register("k34jU",(function(e,t){var n=a("hsIix")("iterator"),r=!1;try{var s=[7][n]();s.return=function(){r=!0},Array.from(s,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var s=!1;try{var a=[7],i=a[n]();i.next=function(){return{done:s=!0}},a[n]=function(){return i},e(a)}catch(e){}return s}})),a.register("7sEb0",(function(e,t){var n=a("ercJj");e.exports=function(e,t){return!!e&&n((function(){t?e.call(null,(function(){}),1):e.call(null)}))}})),a.register("1VQ12",(function(e,t){var n=a("4aCBJ"),r=a("g0aA7"),s=a("a3UiQ"),i=a("jUiLD"),o=a("ljDs3");e.exports=function(e,t){var a=1==e,u=2==e,l=3==e,c=4==e,h=6==e,p=5==e||h,d=t||o;return function(t,o,f){for(var m,g,y=s(t),b=r(y),x=n(o,f,3),v=i(b.length),w=0,k=a?d(t,v):u?d(t,0):void 0;v>w;w++)if((p||w in b)&&(g=x(m=b[w],w,y),e))if(a)k[w]=g;else if(g)switch(e){case 3:return!0;case 5:return m;case 6:return w;case 2:k.push(m)}else if(c)return!1;return h?-1:l||c?c:k}}})),a.register("ljDs3",(function(e,t){var n=a("6CLjE");e.exports=function(e,t){return new(n(e))(t)}})),a.register("6CLjE",(function(e,t){var n=a("9eXBq"),r=a("5pz70"),s=a("hsIix")("species");e.exports=function(e){var t;return r(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!r(t.prototype)||(t=void 0),n(t)&&null===(t=t[s])&&(t=void 0)),void 0===t?Array:t}})),a.register("h18If",(function(e,t){var n=a("a3UiQ"),r=a("kwjQj"),s=a("jUiLD");e.exports=[].copyWithin||function(e,t){var a=n(this),i=s(a.length),o=r(e,i),u=r(t,i),l=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===l?i:r(l,i))-u,i-o),h=1;for(u<o&&o<u+c&&(h=-1,u+=c-1,o+=c-1);c-- >0;)u in a?a[o]=a[u]:delete a[o],o+=h,u+=h;return a}})),a.register("8Q0BT",(function(e,t){var n=a("hsIix")("unscopables"),r=Array.prototype;null==r[n]&&a("j1MEY")(r,n,{}),e.exports=function(e){r[n][e]=!0}})),a.register("fKaE8",(function(e,t){var n=a("a3UiQ"),r=a("kwjQj"),s=a("jUiLD");e.exports=function(e){for(var t=n(this),a=s(t.length),i=arguments.length,o=r(i>1?arguments[1]:void 0,a),u=i>2?arguments[2]:void 0,l=void 0===u?a:r(u,a);l>o;)t[o++]=e;return t}})),a.register("1wVk6",(function(e,t){var n=a("6vIWz"),r=a("eTRJI"),s=a("4l3gu"),i=a("hsIix")("species");e.exports=function(e){var t=n[e];s&&t&&!t[i]&&r.f(t,i,{configurable:!0,get:function(){return this}})}})),a.register("l7EPP",(function(e,t){var n=a("8Q0BT"),r=a("3gbLG"),s=a("gkdGW"),i=a("bljSd");e.exports=a("k9IIO")(Array,"Array",(function(e,t){this._t=i(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):r(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),s.Arguments=s.Array,n("keys"),n("values"),n("entries")})),a.register("3gbLG",(function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}})),a.register("hkqD6",(function(e,t){var n=a("52eom");e.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}})),a.register("kPbHP",(function(e,t){a("lR3nQ");var n=a("60QGC"),r=a("j1MEY"),s=a("ercJj"),i=a("6pFJL"),o=a("hsIix"),u=a("NJElK"),l=o("species"),c=!s((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),h=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,a){var p=o(e),d=!s((function(){var t={};return t[p]=function(){return 7},7!=""[e](t)})),f=d?!s((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[l]=function(){return n}),n[p](""),!t})):void 0;if(!d||!f||"replace"===e&&!c||"split"===e&&!h){var m=/./[p],g=a(i,p,""[e],(function(e,t,n,r,s){return t.exec===u?d&&!s?{done:!0,value:m.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),y=g[0],b=g[1];n(String.prototype,e,y),r(RegExp.prototype,p,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}}})),a.register("lR3nQ",(function(e,t){var n=a("NJElK");a("3a5AV")({target:"RegExp",proto:!0,forced:n!==/./.exec},{exec:n})})),a.register("NJElK",(function(e,t){var n,r,s=a("hkqD6"),i=RegExp.prototype.exec,o=String.prototype.replace,u=i,l=(n=/a/,r=/b*/g,i.call(n,"a"),i.call(r,"a"),0!==n.lastIndex||0!==r.lastIndex),c=void 0!==/()??/.exec("")[1];(l||c)&&(u=function(e){var t,n,r,a,u=this;return c&&(n=new RegExp("^"+u.source+"$(?!\\s)",s.call(u))),l&&(t=u.lastIndex),r=i.call(u,e),l&&r&&(u.lastIndex=u.global?r.index+r[0].length:t),c&&r&&r.length>1&&o.call(r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r}),e.exports=u})),a.register("CRV7g",(function(e,t){var n=a("52eom"),r=a("4RUEZ"),s=a("hsIix")("species");e.exports=function(e,t){var a,i=n(e).constructor;return void 0===i||null==(a=n(i)[s])?t:r(a)}})),a.register("1DTQX",(function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}})),a.register("fz0Hf",(function(e,t){var n=a("6vIWz"),r=a("cwxLd").set,s=n.MutationObserver||n.WebKitMutationObserver,i=n.process,o=n.Promise,u="process"==a("5dTGa")(i);e.exports=function(){var e,t,a,l=function(){var n,r;for(u&&(n=i.domain)&&n.exit();e;){r=e.fn,e=e.next;try{r()}catch(n){throw e?a():t=void 0,n}}t=void 0,n&&n.enter()};if(u)a=function(){i.nextTick(l)};else if(!s||n.navigator&&n.navigator.standalone)if(o&&o.resolve){var c=o.resolve(void 0);a=function(){c.then(l)}}else a=function(){r.call(n,l)};else{var h=!0,p=document.createTextNode("");new s(l).observe(p,{characterData:!0}),a=function(){p.data=h=!h}}return function(n){var r={fn:n,next:void 0};t&&(t.next=r),e||(e=r,a()),t=r}}})),a.register("cwxLd",(function(e,t){var n,r,s,i=a("4aCBJ"),o=a("d0TSW"),u=a("d85Ru"),l=a("25GHC"),c=a("6vIWz"),h=c.process,p=c.setImmediate,d=c.clearImmediate,f=c.MessageChannel,m=c.Dispatch,g=0,y={},b="onreadystatechange",x=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},v=function(e){x.call(e.data)};p&&d||(p=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return y[++g]=function(){o("function"==typeof e?e:Function(e),t)},n(g),g},d=function(e){delete y[e]},"process"==a("5dTGa")(h)?n=function(e){h.nextTick(i(x,e,1))}:m&&m.now?n=function(e){m.now(i(x,e,1))}:f?(s=(r=new f).port2,r.port1.onmessage=v,n=i(s.postMessage,s,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(n=function(e){c.postMessage(e+"","*")},c.addEventListener("message",v,!1)):n=b in l("script")?function(e){u.appendChild(l("script")).onreadystatechange=function(){u.removeChild(this),x.call(e)}}:function(e){setTimeout(i(x,e,1),0)}),e.exports={set:p,clear:d}})),a.register("cj219",(function(e,t){var n=a("60QGC");e.exports=function(e,t,r){for(var s in t)n(e,s,t[s],r);return e}})),a.register("cW0Cl",(function(e,t){var n=a("6vIWz"),r=a("3a5AV"),s=a("60QGC"),i=a("cj219"),o=a("98Nlg"),u=a("4wZDQ"),l=a("1DTQX"),c=a("9eXBq"),h=a("ercJj"),p=a("k34jU"),d=a("lisGC"),f=a("hNPOQ");e.exports=function(e,t,a,m,g,y){var b=n[e],x=b,v=g?"set":"add",w=x&&x.prototype,k={},I=function(e){var t=w[e];s(w,e,"delete"==e||"has"==e?function(e){return!(y&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return y&&!c(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof x&&(y||w.forEach&&!h((function(){(new x).entries().next()})))){var S=new x,N=S[v](y?{}:-0,1)!=S,T=h((function(){S.has(1)})),C=p((function(e){new x(e)})),E=!y&&h((function(){for(var e=new x,t=5;t--;)e[v](t,t);return!e.has(-0)}));C||((x=t((function(t,n){l(t,x,e);var r=f(new b,t,x);return null!=n&&u(n,g,r[v],r),r}))).prototype=w,w.constructor=x),(T||E)&&(I("delete"),I("has"),g&&I("get")),(E||N)&&I(v),y&&w.clear&&delete w.clear}else x=m.getConstructor(t,e,g,v),i(x.prototype,a),o.NEED=!0;return d(x,e),k[e]=x,r(r.G+r.W+r.F*(x!=b),k),y||m.setStrong(x,e,g),x}})),a.register("98Nlg",(function(e,t){var n=a("5BG6r")("meta"),r=a("9eXBq"),s=a("iUmep"),i=a("eTRJI").f,o=0,u=Object.isExtensible||function(){return!0},l=!a("ercJj")((function(){return u(Object.preventExtensions({}))})),c=function(e){i(e,n,{value:{i:"O"+ ++o,w:{}}})},h=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!r(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,n)){if(!u(e))return"F";if(!t)return"E";c(e)}return e[n].i},getWeak:function(e,t){if(!s(e,n)){if(!u(e))return!0;if(!t)return!1;c(e)}return e[n].w},onFreeze:function(e){return l&&h.NEED&&u(e)&&!s(e,n)&&c(e),e}}})),a.register("4wZDQ",(function(e,t){var n=a("4aCBJ"),r=a("86QZs"),s=a("8Q6II"),i=a("52eom"),o=a("jUiLD"),u=a("bSeTo"),l={},c={},h=e.exports=function(e,t,a,h,p){var d,f,m,g,y=p?function(){return e}:u(e),b=n(a,h,t?2:1),x=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(s(y)){for(d=o(e.length);d>x;x++)if((g=t?b(i(f=e[x])[0],f[1]):b(e[x]))===l||g===c)return g}else for(m=y.call(e);!(f=m.next()).done;)if((g=r(m,b,f.value,t))===l||g===c)return g};h.BREAK=l,h.RETURN=c})),a.register("86QZs",(function(e,t){var n=a("52eom");e.exports=function(e,t,r,s){try{return s?t(n(r)[0],r[1]):t(r)}catch(t){var a=e.return;throw void 0!==a&&n(a.call(e)),t}}})),a.register("hNPOQ",(function(e,t){var n=a("9eXBq"),r=a("k1Jzt").set;e.exports=function(e,t,s){var a,i=t.constructor;return i!==s&&"function"==typeof i&&(a=i.prototype)!==s.prototype&&n(a)&&r&&r(e,a),e}})),a.register("1g9tW",(function(e,t){var n,r=a("6vIWz"),s=a("1VQ12")(0),i=a("60QGC"),o=a("98Nlg"),u=a("2QWQH"),l=a("gcX5a"),c=a("9eXBq"),h=a("4dR6L"),p=(h=a("4dR6L"),!r.ActiveXObject&&"ActiveXObject"in r),d="WeakMap",f=o.getWeak,m=Object.isExtensible,g=l.ufstore,y=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(c(e)){var t=f(e);return!0===t?g(h(this,d)).get(e):t?t[this._i]:void 0}},set:function(e,t){return l.def(h(this,d),e,t)}},x=e.exports=a("cW0Cl")(d,y,b,l,!0,!0);h&&p&&(u((n=l.getConstructor(y,d)).prototype,b),o.NEED=!0,s(["delete","has","get","set"],(function(e){var t=x.prototype,r=t[e];i(t,e,(function(t,s){if(c(t)&&!m(t)){this._f||(this._f=new n);var a=this._f[e](t,s);return"set"==e?this:a}return r.call(this,t,s)}))})))})),a.register("gcX5a",(function(e,t){var n=a("cj219"),r=a("98Nlg").getWeak,s=a("52eom"),i=a("9eXBq"),o=a("1DTQX"),u=a("4wZDQ"),l=a("1VQ12"),c=a("iUmep"),h=a("4dR6L"),p=l(5),d=l(6),f=0,m=function(e){return e._l||(e._l=new g)},g=function(){this.a=[]},y=function(e,t){return p(e.a,(function(e){return e[0]===t}))};g.prototype={get:function(e){var t=y(this,e);if(t)return t[1]},has:function(e){return!!y(this,e)},set:function(e,t){var n=y(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=d(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,s,a){var l=e((function(e,n){o(e,l,t,"_i"),e._t=t,e._i=f++,e._l=void 0,null!=n&&u(n,s,e[a],e)}));return n(l.prototype,{delete:function(e){if(!i(e))return!1;var n=r(e);return!0===n?m(h(this,t)).delete(e):n&&c(n,this._i)&&delete n[this._i]},has:function(e){if(!i(e))return!1;var n=r(e);return!0===n?m(h(this,t)).has(e):n&&c(n,this._i)}}),l},def:function(e,t,n){var a=r(s(t),!0);return!0===a?m(e).set(t,n):a[e._i]=n,e},ufstore:m}})),a.register("4dR6L",(function(e,t){var n=a("9eXBq");e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}})),a.register("hpCKb",(function(e,t){for(var n,r=a("6vIWz"),s=a("j1MEY"),i=a("5BG6r"),o=i("typed_array"),u=i("view"),l=!(!r.ArrayBuffer||!r.DataView),c=l,h=0,p="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");h<9;)(n=r[p[h++]])?(s(n.prototype,o,!0),s(n.prototype,u,!0)):c=!1;e.exports={ABV:l,CONSTR:c,TYPED:o,VIEW:u}})),a.register("6uuyq",(function(e,t){var n=a("6vIWz"),r=a("4l3gu"),s=a("c7Fzt"),i=a("hpCKb"),o=a("j1MEY"),u=a("cj219"),l=a("ercJj"),c=a("1DTQX"),h=a("ataXq"),p=a("jUiLD"),d=a("irbWt"),f=a("gqsXq").f,m=a("eTRJI").f,g=a("fKaE8"),y=a("lisGC"),b="ArrayBuffer",x="DataView",v="Wrong index!",w=n.ArrayBuffer,k=n.DataView,I=n.Math,S=n.RangeError,N=n.Infinity,T=w,C=I.abs,E=I.pow,$=I.floor,A=I.log,R=I.LN2,F="buffer",D="byteLength",_="byteOffset",O=r?"_b":F,M=r?"_l":D,L=r?"_o":_;function z(e,t,n){var r,s,a,i=new Array(n),o=8*n-t-1,u=(1<<o)-1,l=u>>1,c=23===t?E(2,-24)-E(2,-77):0,h=0,p=e<0||0===e&&1/e<0?1:0;for((e=C(e))!=e||e===N?(s=e!=e?1:0,r=u):(r=$(A(e)/R),e*(a=E(2,-r))<1&&(r--,a*=2),(e+=r+l>=1?c/a:c*E(2,1-l))*a>=2&&(r++,a/=2),r+l>=u?(s=0,r=u):r+l>=1?(s=(e*a-1)*E(2,t),r+=l):(s=e*E(2,l-1)*E(2,t),r=0));t>=8;i[h++]=255&s,s/=256,t-=8);for(r=r<<t|s,o+=t;o>0;i[h++]=255&r,r/=256,o-=8);return i[--h]|=128*p,i}function P(e,t,n){var r,s=8*n-t-1,a=(1<<s)-1,i=a>>1,o=s-7,u=n-1,l=e[u--],c=127&l;for(l>>=7;o>0;c=256*c+e[u],u--,o-=8);for(r=c&(1<<-o)-1,c>>=-o,o+=t;o>0;r=256*r+e[u],u--,o-=8);if(0===c)c=1-i;else{if(c===a)return r?NaN:l?-N:N;r+=E(2,t),c-=i}return(l?-1:1)*r*E(2,c-t)}function B(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function V(e){return[255&e]}function W(e){return[255&e,e>>8&255]}function U(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function G(e){return z(e,52,8)}function j(e){return z(e,23,4)}function H(e,t,n){m(e.prototype,t,{get:function(){return this[n]}})}function q(e,t,n,r){var s=d(+n);if(s+t>e[M])throw S(v);var a=e[O]._b,i=s+e[L],o=a.slice(i,i+t);return r?o:o.reverse()}function K(e,t,n,r,s,a){var i=d(+n);if(i+t>e[M])throw S(v);for(var o=e[O]._b,u=i+e[L],l=r(+s),c=0;c<t;c++)o[u+c]=l[a?c:t-c-1]}if(i.ABV){if(!l((function(){w(1)}))||!l((function(){new w(-1)}))||l((function(){return new w,new w(1.5),new w(NaN),w.name!=b}))){for(var X,J=(w=function(e){return c(this,w),new T(d(e))}).prototype=T.prototype,Y=f(T),Q=0;Y.length>Q;)(X=Y[Q++])in w||o(w,X,T[X]);s||(J.constructor=w)}var Z=new k(new w(2)),ee=k.prototype.setInt8;Z.setInt8(0,2147483648),Z.setInt8(1,2147483649),!Z.getInt8(0)&&Z.getInt8(1)||u(k.prototype,{setInt8:function(e,t){ee.call(this,e,t<<24>>24)},setUint8:function(e,t){ee.call(this,e,t<<24>>24)}},!0)}else w=function(e){c(this,w,b);var t=d(e);this._b=g.call(new Array(t),0),this[M]=t},k=function(e,t,n){c(this,k,x),c(e,w,x);var r=e[M],s=h(t);if(s<0||s>r)throw S("Wrong offset!");if(s+(n=void 0===n?r-s:p(n))>r)throw S("Wrong length!");this[O]=e,this[L]=s,this[M]=n},r&&(H(w,D,"_l"),H(k,F,"_b"),H(k,D,"_l"),H(k,_,"_o")),u(k.prototype,{getInt8:function(e){return q(this,1,e)[0]<<24>>24},getUint8:function(e){return q(this,1,e)[0]},getInt16:function(e){var t=q(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=q(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return B(q(this,4,e,arguments[1]))},getUint32:function(e){return B(q(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return P(q(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return P(q(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){K(this,1,e,V,t)},setUint8:function(e,t){K(this,1,e,V,t)},setInt16:function(e,t){K(this,2,e,W,t,arguments[2])},setUint16:function(e,t){K(this,2,e,W,t,arguments[2])},setInt32:function(e,t){K(this,4,e,U,t,arguments[2])},setUint32:function(e,t){K(this,4,e,U,t,arguments[2])},setFloat32:function(e,t){K(this,4,e,j,t,arguments[2])},setFloat64:function(e,t){K(this,8,e,G,t,arguments[2])}});y(w,b),y(k,x),o(k.prototype,i.VIEW,!0),e.exports.ArrayBuffer=w,e.exports.DataView=k})),a.register("irbWt",(function(e,t){var n=a("ataXq"),r=a("jUiLD");e.exports=function(e){if(void 0===e)return 0;var t=n(e),s=r(t);if(t!==s)throw RangeError("Wrong length!");return s}})),a.register("819sR",(function(e,t){if(a("4l3gu")){var n=a("c7Fzt"),r=a("6vIWz"),s=a("ercJj"),i=a("3a5AV"),o=a("hpCKb"),u=a("6uuyq"),l=a("4aCBJ"),c=a("1DTQX"),h=a("8vCAc"),p=a("j1MEY"),d=a("cj219"),f=a("ataXq"),m=a("jUiLD"),g=a("irbWt"),y=a("kwjQj"),b=a("57V9s"),x=a("iUmep"),v=a("cL3nP"),w=a("9eXBq"),k=a("a3UiQ"),I=a("8Q6II"),S=a("i2Md9"),N=a("c22GO"),T=a("gqsXq").f,C=a("bSeTo"),E=a("5BG6r"),$=a("hsIix"),A=a("1VQ12"),R=a("DLRHg"),F=a("CRV7g"),D=a("l7EPP"),_=a("gkdGW"),O=a("k34jU"),M=a("1wVk6"),L=a("fKaE8"),z=a("h18If"),P=a("eTRJI"),B=a("3Q6hl"),V=P.f,W=B.f,U=r.RangeError,G=r.TypeError,j=r.Uint8Array,H="ArrayBuffer",q="SharedArrayBuffer",K="BYTES_PER_ELEMENT",X=Array.prototype,J=u.ArrayBuffer,Y=u.DataView,Q=A(0),Z=A(2),ee=A(3),te=A(4),ne=A(5),re=A(6),se=R(!0),ae=R(!1),ie=D.values,oe=D.keys,ue=D.entries,le=X.lastIndexOf,ce=X.reduce,he=X.reduceRight,pe=X.join,de=X.sort,fe=X.slice,me=X.toString,ge=X.toLocaleString,ye=$("iterator"),be=$("toStringTag"),xe=E("typed_constructor"),ve=E("def_constructor"),we=o.CONSTR,ke=o.TYPED,Ie=o.VIEW,Se="Wrong length!",Ne=A(1,(function(e,t){return Ae(F(e,e[ve]),t)})),Te=s((function(){return 1===new j(new Uint16Array([1]).buffer)[0]})),Ce=!!j&&!!j.prototype.set&&s((function(){new j(1).set({})})),Ee=function(e,t){var n=f(e);if(n<0||n%t)throw U("Wrong offset!");return n},$e=function(e){if(w(e)&&ke in e)return e;throw G(e+" is not a typed array!")},Ae=function(e,t){if(!w(e)||!(xe in e))throw G("It is not a typed array constructor!");return new e(t)},Re=function(e,t){return Fe(F(e,e[ve]),t)},Fe=function(e,t){for(var n=0,r=t.length,s=Ae(e,r);r>n;)s[n]=t[n++];return s},De=function(e,t,n){V(e,t,{get:function(){return this._d[n]}})},_e=function(e){var t,n,r,s,a,i,o=k(e),u=arguments.length,c=u>1?arguments[1]:void 0,h=void 0!==c,p=C(o);if(null!=p&&!I(p)){for(i=p.call(o),r=[],t=0;!(a=i.next()).done;t++)r.push(a.value);o=r}for(h&&u>2&&(c=l(c,arguments[2],2)),t=0,n=m(o.length),s=Ae(this,n);n>t;t++)s[t]=h?c(o[t],t):o[t];return s},Oe=function(){for(var e=0,t=arguments.length,n=Ae(this,t);t>e;)n[e]=arguments[e++];return n},Me=!!j&&s((function(){ge.call(new j(1))})),Le=function(){return ge.apply(Me?fe.call($e(this)):$e(this),arguments)},ze={copyWithin:function(e,t){return z.call($e(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return te($e(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return L.apply($e(this),arguments)},filter:function(e){return Re(this,Z($e(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return ne($e(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return re($e(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Q($e(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ae($e(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return se($e(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return pe.apply($e(this),arguments)},lastIndexOf:function(e){return le.apply($e(this),arguments)},map:function(e){return Ne($e(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return ce.apply($e(this),arguments)},reduceRight:function(e){return he.apply($e(this),arguments)},reverse:function(){for(var e,t=this,n=$e(t).length,r=Math.floor(n/2),s=0;s<r;)e=t[s],t[s++]=t[--n],t[n]=e;return t},some:function(e){return ee($e(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return de.call($e(this),e)},subarray:function(e,t){var n=$e(this),r=n.length,s=y(e,r);return new(F(n,n[ve]))(n.buffer,n.byteOffset+s*n.BYTES_PER_ELEMENT,m((void 0===t?r:y(t,r))-s))}},Pe=function(e,t){return Re(this,fe.call($e(this),e,t))},Be=function(e){$e(this);var t=Ee(arguments[1],1),n=this.length,r=k(e),s=m(r.length),a=0;if(s+t>n)throw U(Se);for(;a<s;)this[t+a]=r[a++]},Ve={entries:function(){return ue.call($e(this))},keys:function(){return oe.call($e(this))},values:function(){return ie.call($e(this))}},We=function(e,t){return w(e)&&e[ke]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Ue=function(e,t){return We(e,t=b(t,!0))?h(2,e[t]):W(e,t)},Ge=function(e,t,n){return!(We(e,t=b(t,!0))&&w(n)&&x(n,"value"))||x(n,"get")||x(n,"set")||n.configurable||x(n,"writable")&&!n.writable||x(n,"enumerable")&&!n.enumerable?V(e,t,n):(e[t]=n.value,e)};we||(B.f=Ue,P.f=Ge),i(i.S+i.F*!we,"Object",{getOwnPropertyDescriptor:Ue,defineProperty:Ge}),s((function(){me.call({})}))&&(me=ge=function(){return pe.call(this)});var je=d({},ze);d(je,Ve),p(je,ye,Ve.values),d(je,{slice:Pe,set:Be,constructor:function(){},toString:me,toLocaleString:Le}),De(je,"buffer","b"),De(je,"byteOffset","o"),De(je,"byteLength","l"),De(je,"length","e"),V(je,be,{get:function(){return this[ke]}}),e.exports=function(e,t,a,u){var l=e+((u=!!u)?"Clamped":"")+"Array",h="get"+e,d="set"+e,f=r[l],y=f||{},b=f&&N(f),x=!f||!o.ABV,k={},I=f&&f.prototype,C=function(e,n){V(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[h](n*t+r.o,Te)}(this,n)},set:function(e){return function(e,n,r){var s=e._d;u&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),s.v[d](n*t+s.o,r,Te)}(this,n,e)},enumerable:!0})};x?(f=a((function(e,n,r,s){c(e,f,l,"_d");var a,i,o,u,h=0,d=0;if(w(n)){if(!(n instanceof J||(u=v(n))==H||u==q))return ke in n?Fe(f,n):_e.call(f,n);a=n,d=Ee(r,t);var y=n.byteLength;if(void 0===s){if(y%t)throw U(Se);if((i=y-d)<0)throw U(Se)}else if((i=m(s)*t)+d>y)throw U(Se);o=i/t}else o=g(n),a=new J(i=o*t);for(p(e,"_d",{b:a,o:d,l:i,e:o,v:new Y(a)});h<o;)C(e,h++)})),I=f.prototype=S(je),p(I,"constructor",f)):s((function(){f(1)}))&&s((function(){new f(-1)}))&&O((function(e){new f,new f(null),new f(1.5),new f(e)}),!0)||(f=a((function(e,n,r,s){var a;return c(e,f,l),w(n)?n instanceof J||(a=v(n))==H||a==q?void 0!==s?new y(n,Ee(r,t),s):void 0!==r?new y(n,Ee(r,t)):new y(n):ke in n?Fe(f,n):_e.call(f,n):new y(g(n))})),Q(b!==Function.prototype?T(y).concat(T(b)):T(y),(function(e){e in f||p(f,e,y[e])})),f.prototype=I,n||(I.constructor=f));var E=I[ye],$=!!E&&("values"==E.name||null==E.name),A=Ve.values;p(f,xe,!0),p(I,ke,l),p(I,Ie,!0),p(I,ve,f),(u?new f(1)[be]==l:be in I)||V(I,be,{get:function(){return l}}),k[l]=f,i(i.G+i.W+i.F*(f!=y),k),i(i.S,l,{BYTES_PER_ELEMENT:t}),i(i.S+i.F*s((function(){y.of.call(f,1)})),l,{from:_e,of:Oe}),K in I||p(I,K,t),i(i.P,l,ze),M(l),i(i.P+i.F*Ce,l,{set:Be}),i(i.P+i.F*!$,l,Ve),n||I.toString==me||(I.toString=me),i(i.P+i.F*s((function(){new f(1).slice()})),l,{slice:Pe}),i(i.P+i.F*(s((function(){return[1,2].toLocaleString()!=new f([1,2]).toLocaleString()}))||!s((function(){I.toLocaleString.call([1,2])}))),l,{toLocaleString:Le}),_[l]=$?E:A,n||$||p(I,ye,A)}}else e.exports=function(){}})),a.register("1198I",(function(e,t){var n=a("gqsXq"),r=a("2RyWe"),s=a("52eom"),i=a("6vIWz").Reflect;e.exports=i&&i.ownKeys||function(e){var t=n.f(s(e)),a=r.f;return a?t.concat(a(e)):t}})),a.register("bcq8a",(function(e,t){var n=a("4l3gu"),r=a("5YwqL"),s=a("bljSd"),i=a("2DlDA").f;e.exports=function(e){return function(t){for(var a,o=s(t),u=r(o),l=u.length,c=0,h=[];l>c;)a=u[c++],n&&!i.call(o,a)||h.push(e?[a,o[a]]:o[a]);return h}}})),a.register("eJMy8",(function(e,t){e.exports=a("c7Fzt")||!a("ercJj")((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete a("6vIWz")[e]}))})),a.register("dBgtO",(function(e,t){var n=a("cL3nP"),r=a("gC7nQ");e.exports=function(e){return function(){if(n(this)!=e)throw TypeError(e+"#toJSON isn't generic");return r(this)}}})),a.register("gC7nQ",(function(e,t){var n=a("4wZDQ");e.exports=function(e,t){var r=[];return n(e,!1,r.push,r,t),r}})),a.register("4Ai5F",(function(e,t){var n=a("3a5AV");e.exports=function(e){n(n.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}})),a.register("fB75K",(function(e,t){var n=a("3a5AV"),r=a("4RUEZ"),s=a("4aCBJ"),i=a("4wZDQ");e.exports=function(e){n(n.S,e,{from:function(e){var t,n,a,o,u=arguments[1];return r(this),(t=void 0!==u)&&r(u),null==e?new this:(n=[],t?(a=0,o=s(u,arguments[2],2),i(e,!1,(function(e){n.push(o(e,a++))}))):i(e,!1,n.push,n),new this(n))}})}})),a.register("bLtSt",(function(e,t){e.exports=Math.scale||function(e,t,n,r,s){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||s!=s?NaN:e===1/0||e===-1/0?e:(e-t)*(s-r)/(n-t)+r}})),a.register("4pcIT",(function(e,t){e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}})),a.register("kjyEk",(function(e,t){})),a.register("cmoHh",(function(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var n=new r(e),a=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,e,"function"==typeof define&&define)})),a.register("euRi5",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,e,"function"==typeof define&&define)})),a.register("hDsEw",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,e,"function"==typeof define&&define)})),a.register("3J2Zm",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,e,"function"==typeof define&&define)})),a.register("6Px8M",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,e,"function"==typeof define&&define)})),a.register("lDm0S",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,e,"function"==typeof define&&define)}));var i,o=a("6vIWz"),u=a("iUmep"),l=a("4l3gu"),c=a("3a5AV"),h=a("60QGC"),p=a("98Nlg").KEY,d=a("ercJj"),f=a("7im85"),m=a("lisGC"),g=a("5BG6r"),y=a("hsIix"),b=a("9NXjJ"),x=a("a1nqk"),v=a("5YwqL"),w=a("2RyWe"),k=a("2DlDA");i=function(e){var t=v(e),n=w.f;if(n)for(var r,s=n(e),a=k.f,i=0;s.length>i;)a.call(e,r=s[i++])&&t.push(r);return t};var I=a("5pz70"),S=a("52eom"),N=a("9eXBq"),T=a("a3UiQ"),C=a("bljSd"),E=a("57V9s"),$=a("8vCAc"),A=a("i2Md9"),R=a("1l8wh"),F=a("3Q6hl"),D=(w=a("2RyWe"),a("eTRJI")),_=(v=a("5YwqL"),F.f),O=D.f,M=R.f,L=o.Symbol,z=o.JSON,P=z&&z.stringify,B=y("_hidden"),V=y("toPrimitive"),W={}.propertyIsEnumerable,U=f("symbol-registry"),G=f("symbols"),j=f("op-symbols"),H=Object.prototype,q="function"==typeof L&&!!w.f,K=o.QObject,X=!K||!K.prototype||!K.prototype.findChild,J=l&&d((function(){return 7!=A(O({},"a",{get:function(){return O(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=_(H,t);r&&delete H[t],O(e,t,n),r&&e!==H&&O(H,t,r)}:O,Y=function(e){var t=G[e]=A(L.prototype);return t._k=e,t},Q=q&&"symbol"==typeof L.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof L},Z=function(e,t,n){return e===H&&Z(j,t,n),S(e),t=E(t,!0),S(n),u(G,t)?(n.enumerable?(u(e,B)&&e[B][t]&&(e[B][t]=!1),n=A(n,{enumerable:$(0,!1)})):(u(e,B)||O(e,B,$(1,{})),e[B][t]=!0),J(e,t,n)):O(e,t,n)},ee=function(e,t){S(e);for(var n,r=i(t=C(t)),s=0,a=r.length;a>s;)Z(e,n=r[s++],t[n]);return e},te=function(e){var t=W.call(this,e=E(e,!0));return!(this===H&&u(G,e)&&!u(j,e))&&(!(t||!u(this,e)||!u(G,e)||u(this,B)&&this[B][e])||t)},ne=function(e,t){if(e=C(e),t=E(t,!0),e!==H||!u(G,t)||u(j,t)){var n=_(e,t);return!n||!u(G,t)||u(e,B)&&e[B][t]||(n.enumerable=!0),n}},re=function(e){for(var t,n=M(C(e)),r=[],s=0;n.length>s;)u(G,t=n[s++])||t==B||t==p||r.push(t);return r},se=function(e){for(var t,n=e===H,r=M(n?j:C(e)),s=[],a=0;r.length>a;)!u(G,t=r[a++])||n&&!u(H,t)||s.push(G[t]);return s};q||(h((L=function(){if(this instanceof L)throw TypeError("Symbol is not a constructor!");var e=g(arguments.length>0?arguments[0]:void 0),t=function(n){this===H&&t.call(j,n),u(this,B)&&u(this[B],e)&&(this[B][e]=!1),J(this,e,$(1,n))};return l&&X&&J(H,e,{configurable:!0,set:t}),Y(e)}).prototype,"toString",(function(){return this._k})),F.f=ne,D.f=Z,a("gqsXq").f=R.f=re,a("2DlDA").f=te,w.f=se,l&&!a("c7Fzt")&&h(H,"propertyIsEnumerable",te,!0),b.f=function(e){return Y(y(e))}),c(c.G+c.W+c.F*!q,{Symbol:L});for(var ae="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ie=0;ae.length>ie;)y(ae[ie++]);for(var oe=v(y.store),ue=0;oe.length>ue;)x(oe[ue++]);c(c.S+c.F*!q,"Symbol",{for:function(e){return u(U,e+="")?U[e]:U[e]=L(e)},keyFor:function(e){if(!Q(e))throw TypeError(e+" is not a symbol!");for(var t in U)if(U[t]===e)return t},useSetter:function(){X=!0},useSimple:function(){X=!1}}),c(c.S+c.F*!q,"Object",{create:function(e,t){return void 0===t?A(e):ee(A(e),t)},defineProperty:Z,defineProperties:ee,getOwnPropertyDescriptor:ne,getOwnPropertyNames:re,getOwnPropertySymbols:se});var le=d((function(){w.f(1)}));c(c.S+c.F*le,"Object",{getOwnPropertySymbols:function(e){return w.f(T(e))}}),z&&c(c.S+c.F*(!q||d((function(){var e=L();return"[null]"!=P([e])||"{}"!=P({a:e})||"{}"!=P(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],s=1;arguments.length>s;)r.push(arguments[s++]);if(n=t=r[1],(N(t)||void 0!==e)&&!Q(e))return I(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Q(t))return t}),r[1]=t,P.apply(z,r)}}),L.prototype[V]||a("j1MEY")(L.prototype,V,L.prototype.valueOf),m(L,"Symbol"),m(Math,"Math",!0),m(o.JSON,"JSON",!0),(c=a("3a5AV"))(c.S,"Object",{create:a("i2Md9")}),(c=a("3a5AV"))(c.S+c.F*!a("4l3gu"),"Object",{defineProperty:a("eTRJI").f}),(c=a("3a5AV"))(c.S+c.F*!a("4l3gu"),"Object",{defineProperties:a("2Albj")});C=a("bljSd");var ce=(F=a("3Q6hl")).f;a("47aXO")("getOwnPropertyDescriptor",(function(){return function(e,t){return ce(C(e),t)}}));T=a("a3UiQ");var he=a("c22GO");a("47aXO")("getPrototypeOf",(function(){return function(e){return he(T(e))}}));T=a("a3UiQ"),v=a("5YwqL");a("47aXO")("keys",(function(){return function(e){return v(T(e))}})),a("47aXO")("getOwnPropertyNames",(function(){return a("1l8wh").f}));N=a("9eXBq");var pe=a("98Nlg").onFreeze;a("47aXO")("freeze",(function(e){return function(t){return e&&N(t)?e(pe(t)):t}}));N=a("9eXBq");var de=a("98Nlg").onFreeze;a("47aXO")("seal",(function(e){return function(t){return e&&N(t)?e(de(t)):t}}));N=a("9eXBq");var fe=a("98Nlg").onFreeze;a("47aXO")("preventExtensions",(function(e){return function(t){return e&&N(t)?e(fe(t)):t}}));N=a("9eXBq");a("47aXO")("isFrozen",(function(e){return function(t){return!N(t)||!!e&&e(t)}}));N=a("9eXBq");a("47aXO")("isSealed",(function(e){return function(t){return!N(t)||!!e&&e(t)}}));N=a("9eXBq");a("47aXO")("isExtensible",(function(e){return function(t){return!!N(t)&&(!e||e(t))}})),(c=a("3a5AV"))(c.S+c.F,"Object",{assign:a("2QWQH")}),(c=a("3a5AV"))(c.S,"Object",{is:a("j4ZYG")}),(c=a("3a5AV"))(c.S,"Object",{setPrototypeOf:a("k1Jzt").set});var me=a("cL3nP"),ge={};ge[(y=a("hsIix"))("toStringTag")]="z",ge+""!="[object z]"&&a("60QGC")(Object.prototype,"toString",(function(){return"[object "+me(this)+"]"}),!0),(c=a("3a5AV"))(c.P,"Function",{bind:a("feq1U")});var ye=(D=a("eTRJI")).f,be=Function.prototype,xe=/^\s*function ([^ (]*)/;"name"in be||a("4l3gu")&&ye(be,"name",{configurable:!0,get:function(){try{return(""+this).match(xe)[1]}catch(e){return""}}});N=a("9eXBq"),he=a("c22GO");var ve=a("hsIix")("hasInstance"),we=Function.prototype;ve in we||a("eTRJI").f(we,ve,{value:function(e){if("function"!=typeof this||!N(e))return!1;if(!N(this.prototype))return e instanceof this;for(;e=he(e);)if(this.prototype===e)return!0;return!1}});c=a("3a5AV");var ke,Ie=(o=a("6vIWz")).parseInt,Se=a("gSdVf").trim,Ne=a("GFGMu"),Te=/^[-+]?0[xX]/;ke=8!==Ie(Ne+"08")||22!==Ie(Ne+"0x16")?function(e,t){var n=Se(String(e),3);return Ie(n,t>>>0||(Te.test(n)?16:10))}:Ie,c(c.G+c.F*(parseInt!=ke),{parseInt:ke});c=a("3a5AV");var Ce,Ee=(o=a("6vIWz")).parseFloat,$e=a("gSdVf").trim;Ce=1/Ee(a("GFGMu")+"-0")!=-1/0?function(e){var t=$e(String(e),3),n=Ee(t);return 0===n&&"-"==t.charAt(0)?-0:n}:Ee,c(c.G+c.F*(parseFloat!=Ce),{parseFloat:Ce});o=a("6vIWz"),u=a("iUmep");var Ae=a("5dTGa"),Re=a("hNPOQ"),Fe=(E=a("57V9s"),d=a("ercJj"),a("gqsXq").f),De=(F=a("3Q6hl")).f,_e=(D=a("eTRJI")).f,Oe=a("gSdVf").trim,Me=o.Number,Le=Me,ze=Me.prototype,Pe="Number"==Ae(a("i2Md9")(ze)),Be="trim"in String.prototype,Ve=function(e){var t=E(e,!1);if("string"==typeof t&&t.length>2){var n,r,s,a=(t=Be?t.trim():Oe(t,3)).charCodeAt(0);if(43===a||45===a){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===a){switch(t.charCodeAt(1)){case 66:case 98:r=2,s=49;break;case 79:case 111:r=8,s=55;break;default:return+t}for(var i,o=t.slice(2),u=0,l=o.length;u<l;u++)if((i=o.charCodeAt(u))<48||i>s)return NaN;return parseInt(o,r)}}return+t};if(!Me(" 0o1")||!Me("0b1")||Me("+0x1")){Me=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof Me&&(Pe?d((function(){ze.valueOf.call(n)})):"Number"!=Ae(n))?Re(new Le(Ve(t)),n,Me):Ve(t)};for(var We,Ue=a("4l3gu")?Fe(Le):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),Ge=0;Ue.length>Ge;Ge++)u(Le,We=Ue[Ge])&&!u(Me,We)&&_e(Me,We,De(Le,We));Me.prototype=ze,ze.constructor=Me,a("60QGC")(o,"Number",Me)}c=a("3a5AV");var je,He=a("ataXq");Ae=a("5dTGa");je=function(e,t){if("number"!=typeof e&&"Number"!=Ae(e))throw TypeError(t);return+e};var qe=a("8pJpy"),Ke=1..toFixed,Xe=Math.floor,Je=[0,0,0,0,0,0],Ye=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*Je[n],Je[n]=r%1e7,r=Xe(r/1e7)},Qe=function(e){for(var t=6,n=0;--t>=0;)n+=Je[t],Je[t]=Xe(n/e),n=n%e*1e7},Ze=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==Je[e]){var n=String(Je[e]);t=""===t?n:t+qe.call("0",7-n.length)+n}return t},et=function(e,t,n){return 0===t?n:t%2==1?et(e,t-1,n*e):et(e*e,t/2,n)};c(c.P+c.F*(!!Ke&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!a("ercJj")((function(){Ke.call({})}))),"Number",{toFixed:function(e){var t,n,r,s,a=je(this,"Number.toFixed: incorrect invocation!"),i=He(e),o="",u="0";if(i<0||i>20)throw RangeError("Number.toFixed: incorrect invocation!");if(a!=a)return"NaN";if(a<=-1e21||a>=1e21)return String(a);if(a<0&&(o="-",a=-a),a>1e-21)if(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(a*et(2,69,1))-69,n=t<0?a*et(2,-t,1):a/et(2,t,1),n*=4503599627370496,(t=52-t)>0){for(Ye(0,n),r=i;r>=7;)Ye(1e7,0),r-=7;for(Ye(et(10,r,1),0),r=t-1;r>=23;)Qe(8388608),r-=23;Qe(1<<r),Ye(1,1),Qe(2),u=Ze()}else Ye(0,n),Ye(1<<-t,0),u=Ze()+qe.call("0",i);return u=i>0?o+((s=u.length)<=i?"0."+qe.call("0",i-s)+u:u.slice(0,s-i)+"."+u.slice(s-i)):o+u}});c=a("3a5AV"),d=a("ercJj");var tt=1..toPrecision;c(c.P+c.F*(d((function(){return"1"!==tt.call(1,void 0)}))||!d((function(){tt.call({})}))),"Number",{toPrecision:function(e){var t=je(this,"Number#toPrecision: incorrect invocation!");return void 0===e?tt.call(t):tt.call(t,e)}}),(c=a("3a5AV"))(c.S,"Number",{EPSILON:Math.pow(2,-52)});c=a("3a5AV");var nt=(o=a("6vIWz")).isFinite;c(c.S,"Number",{isFinite:function(e){return"number"==typeof e&&nt(e)}}),(c=a("3a5AV"))(c.S,"Number",{isInteger:a("2H85W")}),(c=a("3a5AV"))(c.S,"Number",{isNaN:function(e){return e!=e}});c=a("3a5AV");var rt=a("2H85W"),st=Math.abs;c(c.S,"Number",{isSafeInteger:function(e){return rt(e)&&st(e)<=9007199254740991}}),(c=a("3a5AV"))(c.S,"Number",{MAX_SAFE_INTEGER:9007199254740991}),(c=a("3a5AV"))(c.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991}),(c=a("3a5AV"))(c.S+c.F*(Number.parseFloat!=Ce),"Number",{parseFloat:Ce}),(c=a("3a5AV"))(c.S+c.F*(Number.parseInt!=ke),"Number",{parseInt:ke});c=a("3a5AV");var at=a("kWbCT"),it=Math.sqrt,ot=Math.acosh;c(c.S+c.F*!(ot&&710==Math.floor(ot(Number.MAX_VALUE))&&ot(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:at(e-1+it(e-1)*it(e+1))}});c=a("3a5AV");var ut=Math.asinh;c(c.S+c.F*!(ut&&1/ut(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}});c=a("3a5AV");var lt=Math.atanh;c(c.S+c.F*!(lt&&1/lt(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}});c=a("3a5AV");var ct=a("6oSjH");c(c.S,"Math",{cbrt:function(e){return ct(e=+e)*Math.pow(Math.abs(e),1/3)}}),(c=a("3a5AV"))(c.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}});c=a("3a5AV");var ht=Math.exp;c(c.S,"Math",{cosh:function(e){return(ht(e=+e)+ht(-e))/2}});c=a("3a5AV");var pt={},dt=Math.expm1;pt=!dt||dt(10)>22025.465794806718||dt(10)<22025.465794806718||-2e-17!=dt(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:dt,c(c.S+c.F*(pt!=Math.expm1),"Math",{expm1:pt}),(c=a("3a5AV"))(c.S,"Math",{fround:a("7RvUW")});c=a("3a5AV");var ft=Math.abs;c(c.S,"Math",{hypot:function(e,t){for(var n,r,s=0,a=0,i=arguments.length,o=0;a<i;)o<(n=ft(arguments[a++]))?(s=s*(r=o/n)*r+1,o=n):s+=n>0?(r=n/o)*r:n;return o===1/0?1/0:o*Math.sqrt(s)}});c=a("3a5AV");var mt=Math.imul;c(c.S+c.F*a("ercJj")((function(){return-5!=mt(4294967295,5)||2!=mt.length})),"Math",{imul:function(e,t){var n=65535,r=+e,s=+t,a=n&r,i=n&s;return 0|a*i+((n&r>>>16)*i+a*(n&s>>>16)<<16>>>0)}}),(c=a("3a5AV"))(c.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}}),(c=a("3a5AV"))(c.S,"Math",{log1p:a("kWbCT")}),(c=a("3a5AV"))(c.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}}),(c=a("3a5AV"))(c.S,"Math",{sign:a("6oSjH")});c=a("3a5AV");var gt=Math.exp;c(c.S+c.F*a("ercJj")((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(pt(e)-pt(-e))/2:(gt(e-1)-gt(-e-1))*(Math.E/2)}});c=a("3a5AV");var yt=Math.exp;c(c.S,"Math",{tanh:function(e){var t=pt(e=+e),n=pt(-e);return t==1/0?1:n==1/0?-1:(t-n)/(yt(e)+yt(-e))}}),(c=a("3a5AV"))(c.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}});c=a("3a5AV");var bt=a("kwjQj"),xt=String.fromCharCode,vt=String.fromCodePoint;c(c.S+c.F*(!!vt&&1!=vt.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,s=0;r>s;){if(t=+arguments[s++],bt(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?xt(t):xt(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}});c=a("3a5AV"),C=a("bljSd");var wt=a("jUiLD");c(c.S,"String",{raw:function(e){for(var t=C(e.raw),n=wt(t.length),r=arguments.length,s=[],a=0;n>a;)s.push(String(t[a++])),a<r&&s.push(String(arguments[a]));return s.join("")}}),a("gSdVf")("trim",(function(e){return function(){return e(this,3)}}));var kt=a("6ASQY")(!0);a("k9IIO")(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=kt(t,n),this._i+=e.length,{value:e,done:!1})}));c=a("3a5AV");var It=a("6ASQY")(!1);c(c.P,"String",{codePointAt:function(e){return It(this,e)}});c=a("3a5AV"),wt=a("jUiLD"),N=a("9eXBq"),Ae=a("5dTGa");var St,Nt,Tt=a("hsIix")("match");Nt=function(e){var t;return N(e)&&(void 0!==(t=e[Tt])?!!t:"RegExp"==Ae(e))};var Ct=a("6pFJL");St=function(e,t,n){if(Nt(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(Ct(e))};var Et="".endsWith;c(c.P+c.F*a("3X79L")("endsWith"),"String",{endsWith:function(e){var t=St(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=wt(t.length),s=void 0===n?r:Math.min(wt(n),r),a=String(e);return Et?Et.call(t,a,s):t.slice(s-a.length,s)===a}});c=a("3a5AV");c(c.P+c.F*a("3X79L")("includes"),"String",{includes:function(e){return!!~St(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}}),(c=a("3a5AV"))(c.P,"String",{repeat:a("8pJpy")});c=a("3a5AV"),wt=a("jUiLD");var $t="".startsWith;c(c.P+c.F*a("3X79L")("startsWith"),"String",{startsWith:function(e){var t=St(this,e,"startsWith"),n=wt(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return $t?$t.call(t,r,n):t.slice(n,n+r.length)===r}}),a("itBIn")("anchor",(function(e){return function(t){return e(this,"a","name",t)}})),a("itBIn")("big",(function(e){return function(){return e(this,"big","","")}})),a("itBIn")("blink",(function(e){return function(){return e(this,"blink","","")}})),a("itBIn")("bold",(function(e){return function(){return e(this,"b","","")}})),a("itBIn")("fixed",(function(e){return function(){return e(this,"tt","","")}})),a("itBIn")("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}})),a("itBIn")("fontsize",(function(e){return function(t){return e(this,"font","size",t)}})),a("itBIn")("italics",(function(e){return function(){return e(this,"i","","")}})),a("itBIn")("link",(function(e){return function(t){return e(this,"a","href",t)}})),a("itBIn")("small",(function(e){return function(){return e(this,"small","","")}})),a("itBIn")("strike",(function(e){return function(){return e(this,"strike","","")}})),a("itBIn")("sub",(function(e){return function(){return e(this,"sub","","")}})),a("itBIn")("sup",(function(e){return function(){return e(this,"sup","","")}})),(c=a("3a5AV"))(c.S,"Date",{now:function(){return(new Date).getTime()}});c=a("3a5AV"),T=a("a3UiQ"),E=a("57V9s");c(c.P+c.F*a("ercJj")((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=T(this),n=E(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}});c=a("3a5AV"),d=a("ercJj");var At,Rt=Date.prototype.getTime,Ft=Date.prototype.toISOString,Dt=function(e){return e>9?e:"0"+e};At=d((function(){return"0385-07-25T07:06:39.999Z"!=Ft.call(new Date(-50000000000001))}))||!d((function(){Ft.call(new Date(NaN))}))?function(){if(!isFinite(Rt.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+Dt(e.getUTCMonth()+1)+"-"+Dt(e.getUTCDate())+"T"+Dt(e.getUTCHours())+":"+Dt(e.getUTCMinutes())+":"+Dt(e.getUTCSeconds())+"."+(n>99?n:"0"+Dt(n))+"Z"}:Ft,c(c.P+c.F*(Date.prototype.toISOString!==At),"Date",{toISOString:At});var _t=Date.prototype,Ot=_t.toString,Mt=_t.getTime;new Date(NaN)+""!="Invalid Date"&&a("60QGC")(_t,"toString",(function(){var e=Mt.call(this);return e==e?Ot.call(this):"Invalid Date"}));var Lt=a("hsIix")("toPrimitive"),zt=Date.prototype;Lt in zt||a("j1MEY")(zt,Lt,a("cuci0")),(c=a("3a5AV"))(c.S,"Array",{isArray:a("5pz70")});var Pt,Bt=a("4aCBJ"),Vt=(c=a("3a5AV"),T=a("a3UiQ"),a("86QZs")),Wt=a("8Q6II");wt=a("jUiLD"),D=a("eTRJI"),$=a("8vCAc");Pt=function(e,t,n){t in e?D.f(e,t,$(0,n)):e[t]=n};var Ut=a("bSeTo");c(c.S+c.F*!a("k34jU")((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,r,s,a=T(e),i="function"==typeof this?this:Array,o=arguments.length,u=o>1?arguments[1]:void 0,l=void 0!==u,c=0,h=Ut(a);if(l&&(u=Bt(u,o>2?arguments[2]:void 0,2)),null==h||i==Array&&Wt(h))for(n=new i(t=wt(a.length));t>c;c++)Pt(n,c,l?u(a[c],c):a[c]);else for(s=h.call(a),n=new i;!(r=s.next()).done;c++)Pt(n,c,l?Vt(s,u,[r.value,c],!0):r.value);return n.length=c,n}}),(c=a("3a5AV"))(c.S+c.F*a("ercJj")((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)Pt(n,e,arguments[e++]);return n.length=t,n}});c=a("3a5AV"),C=a("bljSd");var Gt=[].join;c(c.P+c.F*(a("g0aA7")!=Object||!a("7sEb0")(Gt)),"Array",{join:function(e){return Gt.call(C(this),void 0===e?",":e)}});c=a("3a5AV");var jt=a("d85Ru"),Ht=(Ae=a("5dTGa"),bt=a("kwjQj"),wt=a("jUiLD"),[].slice);c(c.P+c.F*a("ercJj")((function(){jt&&Ht.call(jt)})),"Array",{slice:function(e,t){var n=wt(this.length),r=Ae(this);if(t=void 0===t?n:t,"Array"==r)return Ht.call(this,e,t);for(var s=bt(e,n),a=bt(t,n),i=wt(a-s),o=new Array(i),u=0;u<i;u++)o[u]="String"==r?this.charAt(s+u):this[s+u];return o}});c=a("3a5AV");var qt=a("4RUEZ"),Kt=(T=a("a3UiQ"),d=a("ercJj"),[].sort),Xt=[1,2,3];c(c.P+c.F*(d((function(){Xt.sort(void 0)}))||!d((function(){Xt.sort(null)}))||!a("7sEb0")(Kt)),"Array",{sort:function(e){return void 0===e?Kt.call(T(this)):Kt.call(T(this),qt(e))}});c=a("3a5AV");var Jt=a("1VQ12")(0),Yt=a("7sEb0")([].forEach,!0);c(c.P+c.F*!Yt,"Array",{forEach:function(e){return Jt(this,e,arguments[1])}});c=a("3a5AV");var Qt=a("1VQ12")(1);c(c.P+c.F*!a("7sEb0")([].map,!0),"Array",{map:function(e){return Qt(this,e,arguments[1])}});c=a("3a5AV");var Zt=a("1VQ12")(2);c(c.P+c.F*!a("7sEb0")([].filter,!0),"Array",{filter:function(e){return Zt(this,e,arguments[1])}});c=a("3a5AV");var en=a("1VQ12")(3);c(c.P+c.F*!a("7sEb0")([].some,!0),"Array",{some:function(e){return en(this,e,arguments[1])}});c=a("3a5AV");var tn=a("1VQ12")(4);c(c.P+c.F*!a("7sEb0")([].every,!0),"Array",{every:function(e){return tn(this,e,arguments[1])}});c=a("3a5AV"),qt=a("4RUEZ"),T=a("a3UiQ");var nn,rn=a("g0aA7");wt=a("jUiLD");nn=function(e,t,n,r,s){qt(t);var a=T(e),i=rn(a),o=wt(a.length),u=s?o-1:0,l=s?-1:1;if(n<2)for(;;){if(u in i){r=i[u],u+=l;break}if(u+=l,s?u<0:o<=u)throw TypeError("Reduce of empty array with no initial value")}for(;s?u>=0:o>u;u+=l)u in i&&(r=t(r,i[u],u,a));return r},c(c.P+c.F*!a("7sEb0")([].reduce,!0),"Array",{reduce:function(e){return nn(this,e,arguments.length,arguments[1],!1)}}),(c=a("3a5AV"))(c.P+c.F*!a("7sEb0")([].reduceRight,!0),"Array",{reduceRight:function(e){return nn(this,e,arguments.length,arguments[1],!0)}});c=a("3a5AV");var sn=a("DLRHg")(!1),an=[].indexOf,on=!!an&&1/[1].indexOf(1,-0)<0;c(c.P+c.F*(on||!a("7sEb0")(an)),"Array",{indexOf:function(e){return on?an.apply(this,arguments)||0:sn(this,e,arguments[1])}});c=a("3a5AV"),C=a("bljSd"),He=a("ataXq"),wt=a("jUiLD");var un=[].lastIndexOf,ln=!!un&&1/[1].lastIndexOf(1,-0)<0;c(c.P+c.F*(ln||!a("7sEb0")(un)),"Array",{lastIndexOf:function(e){if(ln)return un.apply(this,arguments)||0;var t=C(this),n=wt(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,He(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}}),(c=a("3a5AV"))(c.P,"Array",{copyWithin:a("h18If")}),a("8Q0BT")("copyWithin"),(c=a("3a5AV"))(c.P,"Array",{fill:a("fKaE8")}),a("8Q0BT")("fill");c=a("3a5AV");var cn=a("1VQ12")(5),hn=!0;"find"in[]&&Array(1).find((function(){hn=!1})),c(c.P+c.F*hn,"Array",{find:function(e){return cn(this,e,arguments.length>1?arguments[1]:void 0)}}),a("8Q0BT")("find");c=a("3a5AV");var pn=a("1VQ12")(6),dn=!0;"findIndex"in[]&&Array(1).findIndex((function(){dn=!1})),c(c.P+c.F*dn,"Array",{findIndex:function(e){return pn(this,e,arguments.length>1?arguments[1]:void 0)}}),a("8Q0BT")("findIndex"),a("1wVk6")("Array"),a("l7EPP");o=a("6vIWz"),Re=a("hNPOQ");var fn=(D=a("eTRJI")).f,mn=a("gqsXq").f,gn=a("hkqD6"),yn=o.RegExp,bn=yn,xn=yn.prototype,vn=/a/g,wn=/a/g,kn=new yn(vn)!==vn;y=a("hsIix");if(a("4l3gu")&&(!kn||a("ercJj")((function(){return wn[y("match")]=!1,yn(vn)!=vn||yn(wn)==wn||"/a/i"!=yn(vn,"i")})))){yn=function(e,t){var n=this instanceof yn,r=Nt(e),s=void 0===t;return!n&&r&&e.constructor===yn&&s?e:Re(kn?new bn(r&&!s?e.source:e,t):bn((r=e instanceof yn)?e.source:e,r&&s?gn.call(e):t),n?this:xn,yn)};for(var In=function(e){e in yn||fn(yn,e,{configurable:!0,get:function(){return bn[e]},set:function(t){bn[e]=t}})},Sn=mn(bn),Nn=0;Sn.length>Nn;)In(Sn[Nn++]);xn.constructor=yn,yn.prototype=xn,a("60QGC")(o,"RegExp",yn)}a("1wVk6")("RegExp"),a("lR3nQ"),a("4l3gu")&&"g"!=/./g.flags&&a("eTRJI").f(RegExp.prototype,"flags",{configurable:!0,get:a("hkqD6")});S=a("52eom"),gn=a("hkqD6"),l=a("4l3gu");var Tn=/./.toString,Cn=function(e){a("60QGC")(RegExp.prototype,"toString",e,!0)};a("ercJj")((function(){return"/a/b"!=Tn.call({source:"a",flags:"b"})}))?Cn((function(){var e=S(this);return"/".concat(e.source,"/","flags"in e?e.flags:!l&&e instanceof RegExp?gn.call(e):void 0)})):"toString"!=Tn.name&&Cn((function(){return Tn.call(this)}));S=a("52eom"),wt=a("jUiLD");var En,$n=a("6ASQY")(!0);En=function(e,t,n){return t+(n?$n(e,t).length:1)};me=a("cL3nP");var An,Rn=RegExp.prototype.exec;An=function(e,t){var n=e.exec;if("function"==typeof n){var r=n.call(e,t);if("object"!=typeof r)throw new TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==me(e))throw new TypeError("RegExp#exec called on incompatible receiver");return Rn.call(e,t)},a("kPbHP")("match",1,(function(e,t,n,r){return[function(n){var r=e(this),s=null==n?void 0:n[t];return void 0!==s?s.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=r(n,e,this);if(t.done)return t.value;var s=S(e),a=String(this);if(!s.global)return An(s,a);var i=s.unicode;s.lastIndex=0;for(var o,u=[],l=0;null!==(o=An(s,a));){var c=String(o[0]);u[l]=c,""===c&&(s.lastIndex=En(a,wt(s.lastIndex),i)),l++}return 0===l?null:u}]}));S=a("52eom"),T=a("a3UiQ"),wt=a("jUiLD"),He=a("ataXq");var Fn=Math.max,Dn=Math.min,_n=Math.floor,On=/\$([$&`']|\d\d?|<[^>]*>)/g,Mn=/\$([$&`']|\d\d?)/g;a("kPbHP")("replace",2,(function(e,t,n,r){return[function(r,s){var a=e(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,a,s):n.call(String(a),r,s)},function(e,t){var a=r(n,e,this,t);if(a.done)return a.value;var i=S(e),o=String(this),u="function"==typeof t;u||(t=String(t));var l=i.global;if(l){var c=i.unicode;i.lastIndex=0}for(var h=[];;){var p=An(i,o);if(null===p)break;if(h.push(p),!l)break;""===String(p[0])&&(i.lastIndex=En(o,wt(i.lastIndex),c))}for(var d,f="",m=0,g=0;g<h.length;g++){p=h[g];for(var y=String(p[0]),b=Fn(Dn(He(p.index),o.length),0),x=[],v=1;v<p.length;v++)x.push(void 0===(d=p[v])?d:String(d));var w=p.groups;if(u){var k=[y].concat(x,b,o);void 0!==w&&k.push(w);var I=String(t.apply(void 0,k))}else I=s(y,o,b,x,w,t);b>=m&&(f+=o.slice(m,b)+I,m=b+y.length)}return f+o.slice(m)}];function s(e,t,r,s,a,i){var o=r+e.length,u=s.length,l=Mn;return void 0!==a&&(a=T(a),l=On),n.call(i,l,(function(n,i){var l;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(o);case"<":l=a[i.slice(1,-1)];break;default:var c=+i;if(0===c)return n;if(c>u){var h=_n(c/10);return 0===h?n:h<=u?void 0===s[h-1]?i.charAt(1):s[h-1]+i.charAt(1):n}l=s[c-1]}return void 0===l?"":l}))}}));S=a("52eom");var Ln=a("j4ZYG");a("kPbHP")("search",1,(function(e,t,n,r){return[function(n){var r=e(this),s=null==n?void 0:n[t];return void 0!==s?s.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=r(n,e,this);if(t.done)return t.value;var s=S(e),a=String(this),i=s.lastIndex;Ln(i,0)||(s.lastIndex=0);var o=An(s,a);return Ln(s.lastIndex,i)||(s.lastIndex=i),null===o?-1:o.index}]}));S=a("52eom");var zn=a("CRV7g"),Pn=(wt=a("jUiLD"),a("NJElK")),Bn=(d=a("ercJj"),Math.min),Vn=[].push,Wn=!d((function(){RegExp(4294967295,"y")}));a("kPbHP")("split",2,(function(e,t,n,r){var s;return s="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var r=String(this);if(void 0===e&&0===t)return[];if(!Nt(e))return n.call(r,e,t);for(var s,a,i,o=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,c=void 0===t?4294967295:t>>>0,h=new RegExp(e.source,u+"g");(s=Pn.call(h,r))&&!((a=h.lastIndex)>l&&(o.push(r.slice(l,s.index)),s.length>1&&s.index<r.length&&Vn.apply(o,s.slice(1)),i=s[0].length,l=a,o.length>=c));)h.lastIndex===s.index&&h.lastIndex++;return l===r.length?!i&&h.test("")||o.push(""):o.push(r.slice(l)),o.length>c?o.slice(0,c):o}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var a=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,a,r):s.call(String(a),n,r)},function(e,t){var a=r(s,e,this,t,s!==n);if(a.done)return a.value;var i=S(e),o=String(this),u=zn(i,RegExp),l=i.unicode,c=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(Wn?"y":"g"),h=new u(Wn?i:"^(?:"+i.source+")",c),p=void 0===t?4294967295:t>>>0;if(0===p)return[];if(0===o.length)return null===An(h,o)?[o]:[];for(var d=0,f=0,m=[];f<o.length;){h.lastIndex=Wn?f:0;var g,y=An(h,Wn?o:o.slice(f));if(null===y||(g=Bn(wt(h.lastIndex+(Wn?0:f)),o.length))===d)f=En(o,f,l);else{if(m.push(o.slice(d,f)),m.length===p)return m;for(var b=1;b<=y.length-1;b++)if(m.push(y[b]),m.length===p)return m;f=d=g}}return m.push(o.slice(d)),m}]}));var Un,Gn=a("c7Fzt"),jn=(o=a("6vIWz"),Bt=a("4aCBJ"),me=a("cL3nP"),c=a("3a5AV"),N=a("9eXBq"),qt=a("4RUEZ"),a("1DTQX")),Hn=a("4wZDQ"),qn=(zn=a("CRV7g"),(ca=a("cwxLd")).set),Kn=a("fz0Hf")();qt=a("4RUEZ");function Xn(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=qt(t),this.reject=qt(n)}Un=function(e){return new Xn(e)};var Jn;Jn=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}};var Yn={},Qn=(o=a("6vIWz")).navigator;Yn=Qn&&Qn.userAgent||"";var Zn;S=a("52eom"),N=a("9eXBq");Zn=function(e,t){if(S(e),N(t)&&t.constructor===e)return t;var n=Un(e);return(0,n.resolve)(t),n.promise};var er,tr,nr,rr,sr=o.TypeError,ar=o.process,ir=ar&&ar.versions,or=ir&&ir.v8||"",ur=o.Promise,lr="process"==me(ar),cr=function(){},hr=tr=Un,pr=!!function(){try{var e=ur.resolve(1),t=(e.constructor={})[a("hsIix")("species")]=function(e){e(cr,cr)};return(lr||"function"==typeof PromiseRejectionEvent)&&e.then(cr)instanceof t&&0!==or.indexOf("6.6")&&-1===Yn.indexOf("Chrome/66")}catch(e){}}(),dr=function(e){var t;return!(!N(e)||"function"!=typeof(t=e.then))&&t},fr=function(e,t){if(!e._n){e._n=!0;var n=e._c;Kn((function(){for(var r=e._v,s=1==e._s,a=0,i=function(t){var n,a,i,o=s?t.ok:t.fail,u=t.resolve,l=t.reject,c=t.domain;try{o?(s||(2==e._h&&yr(e),e._h=1),!0===o?n=r:(c&&c.enter(),n=o(r),c&&(c.exit(),i=!0)),n===t.promise?l(sr("Promise-chain cycle")):(a=dr(n))?a.call(n,u,l):u(n)):l(r)}catch(e){c&&!i&&c.exit(),l(e)}};n.length>a;)i(n[a++]);e._c=[],e._n=!1,t&&!e._h&&mr(e)}))}},mr=function(e){qn.call(o,(function(){var t,n,r,s=e._v,a=gr(e);if(a&&(t=Jn((function(){lr?ar.emit("unhandledRejection",s,e):(n=o.onunhandledrejection)?n({promise:e,reason:s}):(r=o.console)&&r.error&&r.error("Unhandled promise rejection",s)})),e._h=lr||gr(e)?2:1),e._a=void 0,a&&t.e)throw t.v}))},gr=function(e){return 1!==e._h&&0===(e._a||e._c).length},yr=function(e){qn.call(o,(function(){var t;lr?ar.emit("rejectionHandled",e):(t=o.onrejectionhandled)&&t({promise:e,reason:e._v})}))},br=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),fr(t,!0))},xr=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw sr("Promise can't be resolved itself");(t=dr(e))?Kn((function(){var r={_w:n,_d:!1};try{t.call(e,Bt(xr,r,1),Bt(br,r,1))}catch(e){br.call(r,e)}})):(n._v=e,n._s=1,fr(n,!1))}catch(e){br.call({_w:n,_d:!1},e)}}};pr||(ur=function(e){jn(this,ur,"Promise","_h"),qt(e),er.call(this);try{e(Bt(xr,this,1),Bt(br,this,1))}catch(e){br.call(this,e)}},(er=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=a("cj219")(ur.prototype,{then:function(e,t){var n=hr(zn(this,ur));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=lr?ar.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&fr(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),nr=function(){var e=new er;this.promise=e,this.resolve=Bt(xr,e,1),this.reject=Bt(br,e,1)},Un=hr=function(e){return e===ur||e===rr?new nr(e):tr(e)}),c(c.G+c.W+c.F*!pr,{Promise:ur}),a("lisGC")(ur,"Promise"),a("1wVk6")("Promise"),rr=a("2vhAw").Promise,c(c.S+c.F*!pr,"Promise",{reject:function(e){var t=hr(this);return(0,t.reject)(e),t.promise}}),c(c.S+c.F*(Gn||!pr),"Promise",{resolve:function(e){return Zn(Gn&&this===rr?ur:this,e)}}),c(c.S+c.F*!(pr&&a("k34jU")((function(e){ur.all(e).catch(cr)}))),"Promise",{all:function(e){var t=this,n=hr(t),r=n.resolve,s=n.reject,a=Jn((function(){var n=[],a=0,i=1;Hn(e,!1,(function(e){var o=a++,u=!1;n.push(void 0),i++,t.resolve(e).then((function(e){u||(u=!0,n[o]=e,--i||r(n))}),s)})),--i||r(n)}));return a.e&&s(a.v),n.promise},race:function(e){var t=this,n=hr(t),r=n.reject,s=Jn((function(){Hn(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return s.e&&r(s.v),n.promise}});var vr,wr={},kr=(D=a("eTRJI")).f,Ir=(A=a("i2Md9"),a("cj219")),Sr=(Bt=a("4aCBJ"),jn=a("1DTQX"),Hn=a("4wZDQ"),a("k9IIO")),Nr=a("3gbLG"),Tr=a("1wVk6"),Cr=(l=a("4l3gu"),a("98Nlg").fastKey),Er=a("4dR6L"),$r=l?"_s":"size",Ar=function(e,t){var n,r=Cr(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};vr={getConstructor:function(e,t,n,r){var s=e((function(e,a){jn(e,s,t,"_i"),e._t=t,e._i=A(null),e._f=void 0,e._l=void 0,e[$r]=0,null!=a&&Hn(a,n,e[r],e)}));return Ir(s.prototype,{clear:function(){for(var e=Er(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[$r]=0},delete:function(e){var n=Er(this,t),r=Ar(n,e);if(r){var s=r.n,a=r.p;delete n._i[r.i],r.r=!0,a&&(a.n=s),s&&(s.p=a),n._f==r&&(n._f=s),n._l==r&&(n._l=a),n[$r]--}return!!r},forEach:function(e){Er(this,t);for(var n,r=Bt(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!Ar(Er(this,t),e)}}),l&&kr(s.prototype,"size",{get:function(){return Er(this,t)[$r]}}),s},def:function(e,t,n){var r,s,a=Ar(e,t);return a?a.v=n:(e._l=a={i:s=Cr(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=a),r&&(r.n=a),e[$r]++,"F"!==s&&(e._i[s]=a)),e},getEntry:Ar,setStrong:function(e,t,n){Sr(e,t,(function(e,n){this._t=Er(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this,t=e._k,n=e._l;n&&n.r;)n=n.p;return e._t&&(e._l=n=n?n.n:e._t._f)?Nr(0,"keys"==t?n.k:"values"==t?n.v:[n.k,n.v]):(e._t=void 0,Nr(1))}),n?"entries":"values",!n,!0),Tr(t)}};Er=a("4dR6L");wr=a("cW0Cl")("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=vr.getEntry(Er(this,"Map"),e);return t&&t.v},set:function(e,t){return vr.def(Er(this,"Map"),0===e?0:e,t)}},vr,!0);var Rr={};Er=a("4dR6L");Rr=a("cW0Cl")("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return vr.def(Er(this,"Set"),e=0===e?0:e,e)}},vr),a("1g9tW");var Fr=a("gcX5a");Er=a("4dR6L");a("cW0Cl")("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return Fr.def(Er(this,"WeakSet"),e,!0)}},Fr,!1,!0);c=a("3a5AV");var Dr=a("hpCKb"),_r=a("6uuyq"),Or=(S=a("52eom"),bt=a("kwjQj"),wt=a("jUiLD"),N=a("9eXBq"),(o=a("6vIWz")).ArrayBuffer),Mr=(zn=a("CRV7g"),_r.ArrayBuffer),Lr=_r.DataView,zr=Dr.ABV&&Or.isView,Pr=Mr.prototype.slice,Br=Dr.VIEW;c(c.G+c.W+c.F*(Or!==Mr),{ArrayBuffer:Mr}),c(c.S+c.F*!Dr.CONSTR,"ArrayBuffer",{isView:function(e){return zr&&zr(e)||N(e)&&Br in e}}),c(c.P+c.U+c.F*a("ercJj")((function(){return!new Mr(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==Pr&&void 0===t)return Pr.call(S(this),e);for(var n=S(this).byteLength,r=bt(e,n),s=bt(void 0===t?n:t,n),a=new(zn(this,Mr))(wt(s-r)),i=new Lr(this),o=new Lr(a),u=0;r<s;)o.setUint8(u++,i.getUint8(r++));return a}}),a("1wVk6")("ArrayBuffer"),(c=a("3a5AV"))(c.G+c.W+c.F*!a("hpCKb").ABV,{DataView:a("6uuyq").DataView}),a("819sR")("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0),a("819sR")("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}})),a("819sR")("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}));c=a("3a5AV"),qt=a("4RUEZ"),S=a("52eom");var Vr=(a("6vIWz").Reflect||{}).apply,Wr=Function.apply;c(c.S+c.F*!a("ercJj")((function(){Vr((function(){}))})),"Reflect",{apply:function(e,t,n){var r=qt(e),s=S(n);return Vr?Vr(r,t,s):Wr.call(r,t,s)}});c=a("3a5AV"),A=a("i2Md9"),qt=a("4RUEZ"),S=a("52eom"),N=a("9eXBq"),d=a("ercJj");var Ur=a("feq1U"),Gr=(a("6vIWz").Reflect||{}).construct,jr=d((function(){function e(){}return!(Gr((function(){}),[],e)instanceof e)})),Hr=!d((function(){Gr((function(){}))}));c(c.S+c.F*(jr||Hr),"Reflect",{construct:function(e,t){qt(e),S(t);var n=arguments.length<3?e:qt(arguments[2]);if(Hr&&!jr)return Gr(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(Ur.apply(e,r))}var s=n.prototype,a=A(N(s)?s:Object.prototype),i=Function.apply.call(e,a,t);return N(i)?i:a}});D=a("eTRJI"),c=a("3a5AV"),S=a("52eom"),E=a("57V9s");c(c.S+c.F*a("ercJj")((function(){Reflect.defineProperty(D.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){S(e),t=E(t,!0),S(n);try{return D.f(e,t,n),!0}catch(e){return!1}}});c=a("3a5AV");var qr=(F=a("3Q6hl")).f;S=a("52eom");c(c.S,"Reflect",{deleteProperty:function(e,t){var n=qr(S(e),t);return!(n&&!n.configurable)&&delete e[t]}});c=a("3a5AV"),S=a("52eom");var Kr=function(e){this._t=S(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};a("gITmU")(Kr,"Object",(function(){var e,t=this,n=t._k;do{if(t._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[t._i++])in t._t));return{value:e,done:!1}})),c(c.S,"Reflect",{enumerate:function(e){return new Kr(e)}});F=a("3Q6hl"),he=a("c22GO"),u=a("iUmep"),c=a("3a5AV"),N=a("9eXBq"),S=a("52eom");c(c.S,"Reflect",{get:function e(t,n){var r,s,a=arguments.length<3?t:arguments[2];return S(t)===a?t[n]:(r=F.f(t,n))?u(r,"value")?r.value:void 0!==r.get?r.get.call(a):void 0:N(s=he(t))?e(s,n,a):void 0}});F=a("3Q6hl"),c=a("3a5AV"),S=a("52eom");c(c.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return F.f(S(e),t)}});c=a("3a5AV"),he=a("c22GO"),S=a("52eom");c(c.S,"Reflect",{getPrototypeOf:function(e){return he(S(e))}}),(c=a("3a5AV"))(c.S,"Reflect",{has:function(e,t){return t in e}});c=a("3a5AV"),S=a("52eom");var Xr=Object.isExtensible;c(c.S,"Reflect",{isExtensible:function(e){return S(e),!Xr||Xr(e)}}),(c=a("3a5AV"))(c.S,"Reflect",{ownKeys:a("1198I")});c=a("3a5AV"),S=a("52eom");var Jr=Object.preventExtensions;c(c.S,"Reflect",{preventExtensions:function(e){S(e);try{return Jr&&Jr(e),!0}catch(e){return!1}}});D=a("eTRJI"),F=a("3Q6hl"),he=a("c22GO"),u=a("iUmep"),c=a("3a5AV"),$=a("8vCAc"),S=a("52eom"),N=a("9eXBq");c(c.S,"Reflect",{set:function e(t,n,r){var s,a,i=arguments.length<4?t:arguments[3],o=F.f(S(t),n);if(!o){if(N(a=he(t)))return e(a,n,r,i);o=$(0)}if(u(o,"value")){if(!1===o.writable||!N(i))return!1;if(s=F.f(i,n)){if(s.get||s.set||!1===s.writable)return!1;s.value=r,D.f(i,n,s)}else D.f(i,n,$(0,r));return!0}return void 0!==o.set&&(o.set.call(i,r),!0)}});c=a("3a5AV");var Yr=a("k1Jzt");Yr&&c(c.S,"Reflect",{setPrototypeOf:function(e,t){Yr.check(e,t);try{return Yr.set(e,t),!0}catch(e){return!1}}});c=a("3a5AV");var Qr=a("DLRHg")(!0);c(c.P,"Array",{includes:function(e){return Qr(this,e,arguments.length>1?arguments[1]:void 0)}}),a("8Q0BT")("includes");c=a("3a5AV");var Zr={},es=(I=a("5pz70"),N=a("9eXBq"),wt=a("jUiLD"),Bt=a("4aCBJ"),a("hsIix")("isConcatSpreadable"));Zr=function e(t,n,r,s,a,i,o,u){for(var l,c,h=a,p=0,d=!!o&&Bt(o,u,3);p<s;){if(p in r){if(l=d?d(r[p],p,n):r[p],c=!1,N(l)&&(c=void 0!==(c=l[es])?!!c:I(l)),c&&i>0)h=e(t,n,l,wt(l.length),h,i-1)-1;else{if(h>=9007199254740991)throw TypeError();t[h]=l}h++}p++}return h};T=a("a3UiQ"),wt=a("jUiLD"),qt=a("4RUEZ");var ts=a("ljDs3");c(c.P,"Array",{flatMap:function(e){var t,n,r=T(this);return qt(e),t=wt(r.length),n=ts(r,0),Zr(n,r,r,t,0,1,e,arguments[1]),n}}),a("8Q0BT")("flatMap");c=a("3a5AV"),T=a("a3UiQ"),wt=a("jUiLD"),He=a("ataXq"),ts=a("ljDs3");c(c.P,"Array",{flatten:function(){var e=arguments[0],t=T(this),n=wt(t.length),r=ts(t,0);return Zr(r,t,t,n,0,void 0===e?1:He(e)),r}}),a("8Q0BT")("flatten");c=a("3a5AV");var ns=a("6ASQY")(!0),rs=(d=a("ercJj"))((function(){return"ð ®·"!=="ð ®·".at(0)}));c(c.P+c.F*rs,"String",{at:function(e){return ns(this,e)}});var ss;c=a("3a5AV"),wt=a("jUiLD"),qe=a("8pJpy"),Ct=a("6pFJL");ss=function(e,t,n,r){var s=String(Ct(e)),a=s.length,i=void 0===n?" ":String(n),o=wt(t);if(o<=a||""==i)return s;var u=o-a,l=qe.call(i,Math.ceil(u/i.length));return l.length>u&&(l=l.slice(0,u)),r?l+s:s+l};var as=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(Yn);c(c.P+c.F*as,"String",{padStart:function(e){return ss(this,e,arguments.length>1?arguments[1]:void 0,!0)}});c=a("3a5AV");var is=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(Yn);c(c.P+c.F*is,"String",{padEnd:function(e){return ss(this,e,arguments.length>1?arguments[1]:void 0,!1)}}),a("gSdVf")("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart"),a("gSdVf")("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd");c=a("3a5AV"),Ct=a("6pFJL"),wt=a("jUiLD"),gn=a("hkqD6");var os=RegExp.prototype,us=function(e,t){this._r=e,this._s=t};a("gITmU")(us,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),c(c.P,"String",{matchAll:function(e){if(Ct(this),!Nt(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in os?String(e.flags):gn.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=wt(e.lastIndex),new us(r,t)}}),a("a1nqk")("asyncIterator"),a("a1nqk")("observable");c=a("3a5AV");var ls=a("1198I");C=a("bljSd"),F=a("3Q6hl");c(c.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=C(e),s=F.f,a=ls(r),i={},o=0;a.length>o;)void 0!==(n=s(r,t=a[o++]))&&Pt(i,t,n);return i}});c=a("3a5AV");var cs=a("bcq8a")(!1);c(c.S,"Object",{values:function(e){return cs(e)}});c=a("3a5AV");var hs=a("bcq8a")(!0);c(c.S,"Object",{entries:function(e){return hs(e)}});c=a("3a5AV"),T=a("a3UiQ"),qt=a("4RUEZ"),D=a("eTRJI");a("4l3gu")&&c(c.P+a("eJMy8"),"Object",{__defineGetter__:function(e,t){D.f(T(this),e,{get:qt(t),enumerable:!0,configurable:!0})}});c=a("3a5AV"),T=a("a3UiQ"),qt=a("4RUEZ"),D=a("eTRJI");a("4l3gu")&&c(c.P+a("eJMy8"),"Object",{__defineSetter__:function(e,t){D.f(T(this),e,{set:qt(t),enumerable:!0,configurable:!0})}});c=a("3a5AV"),T=a("a3UiQ"),E=a("57V9s"),he=a("c22GO");var ps=(F=a("3Q6hl")).f;a("4l3gu")&&c(c.P+a("eJMy8"),"Object",{__lookupGetter__:function(e){var t,n=T(this),r=E(e,!0);do{if(t=ps(n,r))return t.get}while(n=he(n))}});c=a("3a5AV"),T=a("a3UiQ"),E=a("57V9s"),he=a("c22GO");var ds=(F=a("3Q6hl")).f;a("4l3gu")&&c(c.P+a("eJMy8"),"Object",{__lookupSetter__:function(e){var t,n=T(this),r=E(e,!0);do{if(t=ds(n,r))return t.set}while(n=he(n))}}),(c=a("3a5AV"))(c.P+c.R,"Map",{toJSON:a("dBgtO")("Map")}),(c=a("3a5AV"))(c.P+c.R,"Set",{toJSON:a("dBgtO")("Set")}),a("4Ai5F")("Map"),a("4Ai5F")("Set"),a("4Ai5F")("WeakMap"),a("4Ai5F")("WeakSet"),a("fB75K")("Map"),a("fB75K")("Set"),a("fB75K")("WeakMap"),a("fB75K")("WeakSet"),(c=a("3a5AV"))(c.G,{global:a("6vIWz")}),(c=a("3a5AV"))(c.S,"System",{global:a("6vIWz")});c=a("3a5AV"),Ae=a("5dTGa");c(c.S,"Error",{isError:function(e){return"Error"===Ae(e)}}),(c=a("3a5AV"))(c.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}}),(c=a("3a5AV"))(c.S,"Math",{DEG_PER_RAD:Math.PI/180});c=a("3a5AV");var fs=180/Math.PI;c(c.S,"Math",{degrees:function(e){return e*fs}});c=a("3a5AV");var ms=a("bLtSt"),gs=a("7RvUW");c(c.S,"Math",{fscale:function(e,t,n,r,s){return gs(ms(e,t,n,r,s))}}),(c=a("3a5AV"))(c.S,"Math",{iaddh:function(e,t,n,r){var s=e>>>0,a=n>>>0;return(t>>>0)+(r>>>0)+((s&a|(s|a)&~(s+a>>>0))>>>31)|0}}),(c=a("3a5AV"))(c.S,"Math",{isubh:function(e,t,n,r){var s=e>>>0,a=n>>>0;return(t>>>0)-(r>>>0)-((~s&a|~(s^a)&s-a>>>0)>>>31)|0}}),(c=a("3a5AV"))(c.S,"Math",{imulh:function(e,t){var n=65535,r=+e,s=+t,a=r&n,i=s&n,o=r>>16,u=s>>16,l=(o*i>>>0)+(a*i>>>16);return o*u+(l>>16)+((a*u>>>0)+(l&n)>>16)}}),(c=a("3a5AV"))(c.S,"Math",{RAD_PER_DEG:180/Math.PI});c=a("3a5AV");var ys=Math.PI/180;c(c.S,"Math",{radians:function(e){return e*ys}}),(c=a("3a5AV"))(c.S,"Math",{scale:a("bLtSt")}),(c=a("3a5AV"))(c.S,"Math",{umulh:function(e,t){var n=65535,r=+e,s=+t,a=r&n,i=s&n,o=r>>>16,u=s>>>16,l=(o*i>>>0)+(a*i>>>16);return o*u+(l>>>16)+((a*u>>>0)+(l&n)>>>16)}}),(c=a("3a5AV"))(c.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}});c=a("3a5AV");var bs=a("2vhAw");o=a("6vIWz"),zn=a("CRV7g");c(c.P+c.R,"Promise",{finally:function(e){var t=zn(this,bs.Promise||o.Promise),n="function"==typeof e;return this.then(n?function(n){return Zn(t,e()).then((function(){return n}))}:e,n?function(n){return Zn(t,e()).then((function(){throw n}))}:e)}}),(c=a("3a5AV"))(c.S,"Promise",{try:function(e){var t=Un(this),n=Jn(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}});c=a("3a5AV");var xs,vs=a("7im85")("metadata"),ws=vs.store||(vs.store=new(a("1g9tW"))),ks=function(e,t,n){var r=ws.get(e);if(!r){if(!n)return;ws.set(e,r=new wr)}var s=r.get(t);if(!s){if(!n)return;r.set(t,s=new wr)}return s};xs={store:ws,map:ks,has:function(e,t,n){var r=ks(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=ks(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){ks(n,r,!0).set(e,t)},keys:function(e,t){var n=ks(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){c(c.S,"Reflect",e)}};S=a("52eom");var Is=xs.key,Ss=xs.set;xs.exp({defineMetadata:function(e,t,n,r){Ss(e,t,S(n),Is(r))}});S=a("52eom");var Ns=xs.key,Ts=xs.map,Cs=xs.store;xs.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:Ns(arguments[2]),r=Ts(S(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var s=Cs.get(t);return s.delete(n),!!s.size||Cs.delete(t)}});S=a("52eom"),he=a("c22GO");var Es=xs.has,$s=xs.get,As=xs.key,Rs=function(e,t,n){if(Es(e,t,n))return $s(e,t,n);var r=he(t);return null!==r?Rs(e,r,n):void 0};xs.exp({getMetadata:function(e,t){return Rs(e,S(t),arguments.length<3?void 0:As(arguments[2]))}});var Fs=a("gC7nQ"),Ds=(S=a("52eom"),he=a("c22GO"),xs.keys),_s=xs.key,Os=function(e,t){var n=Ds(e,t),r=he(e);if(null===r)return n;var s=Os(r,t);return s.length?n.length?Fs(new Rr(n.concat(s))):s:n};xs.exp({getMetadataKeys:function(e){return Os(S(e),arguments.length<2?void 0:_s(arguments[1]))}});S=a("52eom");var Ms=xs.get,Ls=xs.key;xs.exp({getOwnMetadata:function(e,t){return Ms(e,S(t),arguments.length<3?void 0:Ls(arguments[2]))}});S=a("52eom");var zs=xs.keys,Ps=xs.key;xs.exp({getOwnMetadataKeys:function(e){return zs(S(e),arguments.length<2?void 0:Ps(arguments[1]))}});S=a("52eom"),he=a("c22GO");var Bs=xs.has,Vs=xs.key,Ws=function(e,t,n){if(Bs(e,t,n))return!0;var r=he(t);return null!==r&&Ws(e,r,n)};xs.exp({hasMetadata:function(e,t){return Ws(e,S(t),arguments.length<3?void 0:Vs(arguments[2]))}});S=a("52eom");var Us=xs.has,Gs=xs.key;xs.exp({hasOwnMetadata:function(e,t){return Us(e,S(t),arguments.length<3?void 0:Gs(arguments[2]))}});S=a("52eom"),qt=a("4RUEZ");var js=xs.key,Hs=xs.set;xs.exp({metadata:function(e,t){return function(n,r){Hs(e,t,(void 0!==r?S:qt)(n),js(r))}}});c=a("3a5AV");var qs=a("fz0Hf")(),Ks=(o=a("6vIWz")).process,Xs="process"==a("5dTGa")(Ks);c(c.G,{asap:function(e){var t=Xs&&Ks.domain;qs(t?t.bind(e):e)}});c=a("3a5AV"),o=a("6vIWz"),bs=a("2vhAw");var Js=a("fz0Hf")(),Ys=a("hsIix")("observable"),Qs=(qt=a("4RUEZ"),S=a("52eom"),jn=a("1DTQX"),Ir=a("cj219"),a("j1MEY")),Zs=(Hn=a("4wZDQ")).RETURN,ea=function(e){return null==e?void 0:qt(e)},ta=function(e){var t=e._c;t&&(e._c=void 0,t())},na=function(e){return void 0===e._o},ra=function(e){na(e)||(e._o=void 0,ta(e))},sa=function(e,t){S(e),this._c=void 0,this._o=e,e=new aa(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:qt(n),this._c=n)}catch(t){return void e.error(t)}na(this)&&ta(this)};sa.prototype=Ir({},{unsubscribe:function(){ra(this)}});var aa=function(e){this._s=e};aa.prototype=Ir({},{next:function(e){var t=this._s;if(!na(t)){var n=t._o;try{var r=ea(n.next);if(r)return r.call(n,e)}catch(e){try{ra(t)}finally{throw e}}}},error:function(e){var t=this._s;if(na(t))throw e;var n=t._o;t._o=void 0;try{var r=ea(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{ta(t)}finally{throw e}}return ta(t),e},complete:function(e){var t=this._s;if(!na(t)){var n=t._o;t._o=void 0;try{var r=ea(n.complete);e=r?r.call(n,e):void 0}catch(e){try{ta(t)}finally{throw e}}return ta(t),e}}});var ia=function(e){jn(this,ia,"Observable","_f")._f=qt(e)};Ir(ia.prototype,{subscribe:function(e){return new sa(e,this._f)},forEach:function(e){var t=this;return new(bs.Promise||o.Promise)((function(n,r){qt(e);var s=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),s.unsubscribe()}},error:r,complete:n})}))}}),Ir(ia,{from:function(e){var t="function"==typeof this?this:ia,n=ea(S(e)[Ys]);if(n){var r=S(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return Js((function(){if(!n){try{if(Hn(e,!1,(function(e){if(t.next(e),n)return Zs}))===Zs)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:ia)((function(e){var t=!1;return Js((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),Qs(ia.prototype,Ys,(function(){return this})),c(c.G,{Observable:ia}),a("1wVk6")("Observable");o=a("6vIWz"),c=a("3a5AV");var oa=[].slice,ua=/MSIE .\./.test(Yn),la=function(e){return function(t,n){var r=arguments.length>2,s=!!r&&oa.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,s)}:t,n)}};c(c.G+c.B+c.F*ua,{setTimeout:la(o.setTimeout),setInterval:la(o.setInterval)});c=a("3a5AV");var ca=a("cwxLd");c(c.G+c.B,{setImmediate:ca.set,clearImmediate:ca.clear});for(var ha=a("l7EPP"),pa=(v=a("5YwqL"),h=a("60QGC"),o=a("6vIWz"),Qs=a("j1MEY"),a("gkdGW")),da=(y=a("hsIix"))("iterator"),fa=y("toStringTag"),ma=pa.Array,ga={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},ya=v(ga),ba=0;ba<ya.length;ba++){var xa,va=ya[ba],wa=ga[va],ka=o[va],Ia=ka&&ka.prototype;if(Ia&&(Ia[da]||Qs(Ia,da,ma),Ia[fa]||Qs(Ia,fa,va),pa[va]=ma,wa))for(xa in ha)Ia[xa]||h(Ia,xa,ha[xa],!0)}a("2vhAw");var Sa={};!function(e){var t,n=Object.prototype,r=n.hasOwnProperty,s="function"==typeof Symbol?Symbol:{},a=s.iterator||"@@iterator",i=s.asyncIterator||"@@asyncIterator",o=s.toStringTag||"@@toStringTag",u=e.regeneratorRuntime;if(u)Sa=u;else{(u=e.regeneratorRuntime=Sa).wrap=b;var l="suspendedStart",c="suspendedYield",h="executing",p="completed",d={},f={};f[a]=function(){return this};var m=Object.getPrototypeOf,g=m&&m(m($([])));g&&g!==n&&r.call(g,a)&&(f=g);var y=k.prototype=v.prototype=Object.create(f);w.prototype=y.constructor=k,k.constructor=w,k[o]=w.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===w||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,k):(e.__proto__=k,o in e||(e[o]="GeneratorFunction")),e.prototype=Object.create(y),e},u.awrap=function(e){return{__await:e}},I(S.prototype),S.prototype[i]=function(){return this},u.AsyncIterator=S,u.async=function(e,t,n,r){var s=new S(b(e,t,n,r));return u.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},I(y),y[o]="Generator",y[a]=function(){return this},y.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},u.values=$,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function s(r,s){return o.type="throw",o.arg=e,n.next=r,s&&(n.method="next",n.arg=t),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),C(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;C(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:$(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),d}}}function b(e,t,n,r){var s=t&&t.prototype instanceof v?t:v,a=Object.create(s.prototype),i=new E(r||[]);return a._invoke=function(e,t,n){var r=l;return function(s,a){if(r===h)throw new Error("Generator is already running");if(r===p){if("throw"===s)throw a;return A()}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=N(i,n);if(o){if(o===d)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===l)throw r=p,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=h;var u=x(e,t,n);if("normal"===u.type){if(r=n.done?p:c,u.arg===d)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=p,n.method="throw",n.arg=u.arg)}}}(e,n,i),a}function x(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function v(){}function w(){}function k(){}function I(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function S(t){function n(e,s,a,i){var o=x(t[e],t,s);if("throw"!==o.type){var u=o.arg,l=u.value;return l&&"object"==typeof l&&r.call(l,"__await")?Promise.resolve(l.__await).then((function(e){n("next",e,a,i)}),(function(e){n("throw",e,a,i)})):Promise.resolve(l).then((function(e){u.value=e,a(u)}),i)}i(o.arg)}var s;"object"==typeof e.process&&e.process.domain&&(n=e.process.domain.bind(n)),this._invoke=function(e,t){function r(){return new Promise((function(r,s){n(e,t,r,s)}))}return s=s?s.then(r,r):r()}}function N(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,N(e,n),"throw"===n.method))return d;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var s=x(r,e.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,d;var a=s.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,d):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,d)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function $(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var s=-1,i=function n(){for(;++s<e.length;)if(r.call(e,s))return n.value=e[s],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:A}}function A(){return{value:t,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:Sa);c=a("3a5AV");var Na=a("4pcIT")(/[\\^$*+?.()|[\]{}]/g,"\\$&");if(c(c.S,"RegExp",{escape:function(e){return Na(e)}}),(bs=a("2vhAw")).RegExp.escape,t._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");t._babelPolyfill=!0;function Ta(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}Ta(String.prototype,"padLeft","".padStart),Ta(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&Ta(Array,e,Function.call.bind([][e]))}));class Ca{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ea{refCount(e){return $a("refCount")}incRef(e){return $a("incRef")}timerAvailable(){return!0}time(e){return $a("time")}read(e){return $a("read")}readSync(e){return $a("readSync")}readToGPU(e,t){return $a("readToGPU")}numDataIds(){return $a("numDataIds")}disposeData(e,t){return $a("disposeData")}write(e,t,n){return $a("write")}move(e,t,n,r,s){return $a("move")}memory(){return $a("memory")}floatPrecision(){return $a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return $a("dispose")}}function $a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var Aa={};function Ra(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Oa(e,t,n)}function Fa(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Oa(e,n,r),Oa(t,n,r)}function Da(e,t,n){return Math.max(e,Math.min(t,n))}function _a(e){return e%2==0?e:e+1}function Oa(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Ma(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function La(e,t){const n=Math.random();return t*n+(1-n)*e}function za(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function Pa(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Ba(e,t,n=""){Pa(ja(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Va(e){Pa(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Wa(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ii(e)&&!n)for(let r=0;r<e.length;++r)Wa(e[r],t,n);else t.push(e);return t}function Ua(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Ga(e){return 0===e.length}function ja(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ha(e){return e%1==0}function qa(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function Ka(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Xa(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Ra(t),t}function Ja(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Ya(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function Qa(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function Za(e,t){const n=t.length;return Pa((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Pa(e.every((e=>Ha(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ei(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:Za(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ti(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ni(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ri(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function si(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ai(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ii(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function oi(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ui(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function li(e){return"string"==typeof e||e instanceof String}function ci(e){return"boolean"==typeof e}function hi(e){return"number"==typeof e}function pi(e){return Array.isArray(e)?pi(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":hi(e)?"float32":li(e)?"string":ci(e)?"bool":"float32"}function di(e){return!!(e&&e.constructor&&e.call&&e.apply)}function fi(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function mi(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function gi(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=gi(e+t*o,i,n,r)}return s}function yi(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return gi(0,e,t,n)}function bi(e,t){const n=xi(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function xi(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function vi(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return yi(e,new Float32Array(n));if("int32"===t)return yi(e,new Int32Array(n));if("bool"===t)return yi(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function wi(e){e.forEach((t=>{Pa(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ki(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ii(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Si(e){return e&&e.then&&"function"==typeof e.then}e(Aa,"shuffle",(()=>Ra)),e(Aa,"swap",(()=>Oa)),e(Aa,"shuffleCombo",(()=>Fa)),e(Aa,"clamp",(()=>Da)),e(Aa,"nearestLargerEven",(()=>_a)),e(Aa,"sum",(()=>Ma)),e(Aa,"randUniform",(()=>La)),e(Aa,"distSquared",(()=>za)),e(Aa,"assert",(()=>Pa)),e(Aa,"assertShapesMatch",(()=>Ba)),e(Aa,"arraysEqual",(()=>ja)),e(Aa,"assertNonNull",(()=>Va)),e(Aa,"flatten",(()=>Wa)),e(Aa,"isTypedArray",(()=>ii)),e(Aa,"sizeFromShape",(()=>Ua)),e(Aa,"isScalarShape",(()=>Ga)),e(Aa,"isInt",(()=>Ha)),e(Aa,"tanh",(()=>qa)),e(Aa,"sizeToSquarishShape",(()=>Ka)),e(Aa,"createShuffledIndices",(()=>Xa)),e(Aa,"rightPad",(()=>Ja)),e(Aa,"repeatedTry",(()=>Ya)),e(Aa,"inferFromImplicitShape",(()=>Qa)),e(Aa,"parseAxisParam",(()=>Za)),e(Aa,"squeezeShape",(()=>ei)),e(Aa,"getTypedArrayFromDType",(()=>ti)),e(Aa,"getArrayFromDType",(()=>ni)),e(Aa,"checkConversionForErrors",(()=>ri)),e(Aa,"isValidDtype",(()=>si)),e(Aa,"hasEncodingLoss",(()=>ai)),e(Aa,"bytesPerElement",(()=>oi)),e(Aa,"bytesFromStringArray",(()=>ui)),e(Aa,"isString",(()=>li)),e(Aa,"isBoolean",(()=>ci)),e(Aa,"isNumber",(()=>hi)),e(Aa,"inferDtype",(()=>pi)),e(Aa,"isFunction",(()=>di)),e(Aa,"nearestDivisor",(()=>fi)),e(Aa,"computeStrides",(()=>mi)),e(Aa,"toNestedArray",(()=>yi)),e(Aa,"makeOnesTypedArray",(()=>bi)),e(Aa,"makeZerosTypedArray",(()=>xi)),e(Aa,"makeZerosNestedTypedArray",(()=>vi)),e(Aa,"assertNonNegativeIntegerDimensions",(()=>wi)),e(Aa,"locToIndex",(()=>ki)),e(Aa,"indexToLoc",(()=>Ii)),e(Aa,"isPromise",(()=>Si));class Ni{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ti,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ci().getBool("IS_TEST")||Ci().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ci().getBool("IS_TEST")||Ci().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Si(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function Ti(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ci(){return Ei}let Ei=null;var $i,Ai,Ri={},Fi=Ri={};function Di(){throw new Error("setTimeout has not been defined")}function _i(){throw new Error("clearTimeout has not been defined")}function Oi(e){if($i===setTimeout)return setTimeout(e,0);if(($i===Di||!$i)&&setTimeout)return $i=setTimeout,setTimeout(e,0);try{return $i(e,0)}catch(t){try{return $i.call(null,e,0)}catch(t){return $i.call(this,e,0)}}}!function(){try{$i="function"==typeof setTimeout?setTimeout:Di}catch(e){$i=Di}try{Ai="function"==typeof clearTimeout?clearTimeout:_i}catch(e){Ai=_i}}();var Mi,Li=[],zi=!1,Pi=-1;function Bi(){zi&&Mi&&(zi=!1,Mi.length?Li=Mi.concat(Li):Pi=-1,Li.length&&Vi())}function Vi(){if(!zi){var e=Oi(Bi);zi=!0;for(var t=Li.length;t;){for(Mi=Li,Li=[];++Pi<t;)Mi&&Mi[Pi].run();Pi=-1,t=Li.length}Mi=null,zi=!1,function(e){if(Ai===clearTimeout)return clearTimeout(e);if((Ai===_i||!Ai)&&clearTimeout)return Ai=clearTimeout,clearTimeout(e);try{Ai(e)}catch(t){try{return Ai.call(null,e)}catch(t){return Ai.call(this,e)}}}(e)}}function Wi(e,t){this.fun=e,this.array=t}function Ui(){}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Gi;function ji(){if(null==Gi){let e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==Ri)e=Ri;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Gi=e}return Gi}function Hi(e,t){const n=function(){const e=ji();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}Fi.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];Li.push(new Wi(e,t)),1!==Li.length||zi||Oi(Vi)},Wi.prototype.run=function(){this.fun.apply(null,this.array)},Fi.title="browser",Fi.browser=!0,Fi.env={},Fi.argv=[],Fi.version="",Fi.versions={},Fi.on=Ui,Fi.addListener=Ui,Fi.once=Ui,Fi.off=Ui,Fi.removeListener=Ui,Fi.removeAllListeners=Ui,Fi.emit=Ui,Fi.prependListener=Ui,Fi.prependOnceListener=Ui,Fi.listeners=function(e){return[]},Fi.binding=function(e){throw new Error("process.binding is not supported")},Fi.cwd=function(){return"/"},Fi.chdir=function(e){throw new Error("process.chdir is not supported")},Fi.umask=function(){return 0};var qi={};function Ki(...e){Ci().getBool("IS_TEST")||Ci().getBool("PROD")||console.warn(...e)}function Xi(...e){Ci().getBool("IS_TEST")||Ci().getBool("PROD")||console.log(...e)}e(qi,"warn",(()=>Ki)),e(qi,"log",(()=>Xi));const Ji=Hi("kernelRegistry",(()=>new Map)),Yi=Hi("gradRegistry",(()=>new Map));function Qi(e,t){const n=ro(e,t);return Ji.get(n)}function Zi(e){return Yi.get(e)}function eo(e){const t=Ji.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function to(e){const{kernelName:t,backendName:n}=e,r=ro(t,n);Ji.has(r)&&Ki(`The kernel '${t}' for backend '${n}' is already registered`),Ji.set(r,e)}function no(e){const{kernelName:t}=e;Yi.has(t)&&Ci().getBool("DEBUG")&&Ki(`Overriding the gradient for '${t}'`),Yi.set(t,e)}function ro(e,t){return`${t}_${e}`}var so={};e(so,"createScalarValue",(()=>jo)),e(so,"encodeString",(()=>Xo)),e(so,"toTypedArray",(()=>Ho)),e(so,"now",(()=>qo)),e(so,"fetch",(()=>Ko)),e(so,"decodeString",(()=>Jo));var ao={};e(ao,"hexToLong",(()=>Do)),e(ao,"fingerPrint64",(()=>Go));var io;io=uo;var oo=null;try{oo=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function uo(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function lo(e){return!0===(e&&e.__isLong__)}uo.prototype.__isLong__,Object.defineProperty(uo.prototype,"__isLong__",{value:!0}),uo.isLong=lo;var co={},ho={};function po(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=ho[e])?r:(n=mo(e,(0|e)<0?-1:0,!0),s&&(ho[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=co[e])?r:(n=mo(e,e<0?-1:0,!1),s&&(co[e]=n),n)}function fo(e,t){if(isNaN(e))return t?So:Io;if(t){if(e<0)return So;if(e>=vo)return $o}else{if(e<=-wo)return Ao;if(e+1>=wo)return Eo}return e<0?fo(-e,t).neg():mo(e%xo|0,e/xo|0,t)}function mo(e,t,n){return new uo(e,t,n)}uo.fromInt=po,uo.fromNumber=fo,uo.fromBits=mo;var go=Math.pow;function yo(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return Io;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return yo(e.substring(1),t,n).neg();for(var s=fo(go(n,8)),a=Io,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var l=fo(go(n,o));a=a.mul(l).add(fo(u))}else a=(a=a.mul(s)).add(fo(u))}return a.unsigned=t,a}function bo(e,t){return"number"==typeof e?fo(e,t):"string"==typeof e?yo(e,t):mo(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}uo.fromString=yo,uo.fromValue=bo;var xo=4294967296,vo=xo*xo,wo=vo/2,ko=po(16777216),Io=po(0);uo.ZERO=Io;var So=po(0,!0);uo.UZERO=So;var No=po(1);uo.ONE=No;var To=po(1,!0);uo.UONE=To;var Co=po(-1);uo.NEG_ONE=Co;var Eo=mo(-1,2147483647,!1);uo.MAX_VALUE=Eo;var $o=mo(-1,-1,!0);uo.MAX_UNSIGNED_VALUE=$o;var Ao=mo(0,-2147483648,!1);uo.MIN_VALUE=Ao;var Ro=uo.prototype;Ro.toInt=function(){return this.unsigned?this.low>>>0:this.low},Ro.toNumber=function(){return this.unsigned?(this.high>>>0)*xo+(this.low>>>0):this.high*xo+(this.low>>>0)},Ro.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Ao)){var t=fo(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=fo(go(e,6),this.unsigned),a=this,i="";;){var o=a.div(s),u=(a.sub(o.mul(s)).toInt()>>>0).toString(e);if((a=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},Ro.getHighBits=function(){return this.high},Ro.getHighBitsUnsigned=function(){return this.high>>>0},Ro.getLowBits=function(){return this.low},Ro.getLowBitsUnsigned=function(){return this.low>>>0},Ro.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ao)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},Ro.isZero=function(){return 0===this.high&&0===this.low},Ro.eqz=Ro.isZero,Ro.isNegative=function(){return!this.unsigned&&this.high<0},Ro.isPositive=function(){return this.unsigned||this.high>=0},Ro.isOdd=function(){return 1==(1&this.low)},Ro.isEven=function(){return 0==(1&this.low)},Ro.equals=function(e){return lo(e)||(e=bo(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},Ro.eq=Ro.equals,Ro.notEquals=function(e){return!this.eq(e)},Ro.neq=Ro.notEquals,Ro.ne=Ro.notEquals,Ro.lessThan=function(e){return this.comp(e)<0},Ro.lt=Ro.lessThan,Ro.lessThanOrEqual=function(e){return this.comp(e)<=0},Ro.lte=Ro.lessThanOrEqual,Ro.le=Ro.lessThanOrEqual,Ro.greaterThan=function(e){return this.comp(e)>0},Ro.gt=Ro.greaterThan,Ro.greaterThanOrEqual=function(e){return this.comp(e)>=0},Ro.gte=Ro.greaterThanOrEqual,Ro.ge=Ro.greaterThanOrEqual,Ro.compare=function(e){if(lo(e)||(e=bo(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Ro.comp=Ro.compare,Ro.negate=function(){return!this.unsigned&&this.eq(Ao)?Ao:this.not().add(No)},Ro.neg=Ro.negate,Ro.add=function(e){lo(e)||(e=bo(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,l+=(c+=r+o)>>>16,u+=(l+=n+i)>>>16,u+=t+a,mo((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},Ro.subtract=function(e){return lo(e)||(e=bo(e)),this.add(e.neg())},Ro.sub=Ro.subtract,Ro.multiply=function(e){if(this.isZero())return Io;if(lo(e)||(e=bo(e)),oo)return mo(oo.mul(this.low,this.high,e.low,e.high),oo.get_high(),this.unsigned);if(e.isZero())return Io;if(this.eq(Ao))return e.isOdd()?Ao:Io;if(e.eq(Ao))return this.isOdd()?Ao:Io;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ko)&&e.lt(ko))return fo(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,u=65535&e.low,l=0,c=0,h=0,p=0;return h+=(p+=s*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=s*o)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*o)>>>16,c&=65535,l+=(c+=s*i)>>>16,l+=t*u+n*o+r*i+s*a,mo((h&=65535)<<16|(p&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},Ro.mul=Ro.multiply,Ro.divide=function(e){if(lo(e)||(e=bo(e)),e.isZero())throw Error("division by zero");var t,n,r;if(oo)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?mo((this.unsigned?oo.div_u:oo.div_s)(this.low,this.high,e.low,e.high),oo.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?So:Io;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return So;if(e.gt(this.shru(1)))return To;r=So}else{if(this.eq(Ao))return e.eq(No)||e.eq(Co)?Ao:e.eq(Ao)?No:(t=this.shr(1).div(e).shl(1)).eq(Io)?e.isNegative()?No:Co:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(Ao))return this.unsigned?So:Io;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=Io}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),a=s<=48?1:go(2,s-48),i=fo(t),o=i.mul(e);o.isNegative()||o.gt(n);)o=(i=fo(t-=a,this.unsigned)).mul(e);i.isZero()&&(i=No),r=r.add(i),n=n.sub(o)}return r},Ro.div=Ro.divide,Ro.modulo=function(e){return lo(e)||(e=bo(e)),oo?mo((this.unsigned?oo.rem_u:oo.rem_s)(this.low,this.high,e.low,e.high),oo.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},Ro.mod=Ro.modulo,Ro.rem=Ro.modulo,Ro.not=function(){return mo(~this.low,~this.high,this.unsigned)},Ro.and=function(e){return lo(e)||(e=bo(e)),mo(this.low&e.low,this.high&e.high,this.unsigned)},Ro.or=function(e){return lo(e)||(e=bo(e)),mo(this.low|e.low,this.high|e.high,this.unsigned)},Ro.xor=function(e){return lo(e)||(e=bo(e)),mo(this.low^e.low,this.high^e.high,this.unsigned)},Ro.shiftLeft=function(e){return lo(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?mo(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):mo(0,this.low<<e-32,this.unsigned)},Ro.shl=Ro.shiftLeft,Ro.shiftRight=function(e){return lo(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?mo(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):mo(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Ro.shr=Ro.shiftRight,Ro.shiftRightUnsigned=function(e){if(lo(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?mo(this.low>>>e|t<<32-e,t>>>e,this.unsigned):mo(32===e?t:t>>>e-32,0,this.unsigned)},Ro.shru=Ro.shiftRightUnsigned,Ro.shr_u=Ro.shiftRightUnsigned,Ro.toSigned=function(){return this.unsigned?mo(this.low,this.high,!1):this},Ro.toUnsigned=function(){return this.unsigned?this:mo(this.low,this.high,!0)},Ro.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Ro.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Ro.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},uo.fromBytes=function(e,t,n){return n?uo.fromBytesLE(e,t):uo.fromBytesBE(e,t)},uo.fromBytesLE=function(e,t){return new uo(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},uo.fromBytesBE=function(e,t){return new uo(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Fo=io.default||io;function Do(e){return Fo.fromString(e,!0,16)}const _o=Do("c3a5c85c97cb3127"),Oo=Do("b492b66fbe98f273"),Mo=Do("9ae16a3b2f90404f");function Lo(e){return e.xor(e.shru(47))}function zo(e,t,n){const r=e.slice(t,t+n);return Fo.fromBytes(Array.from(r),!0,!0)}function Po(e,t){return zo(e,t,8)}function Bo(e,t){return zo(e,t,4)}function Vo(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Wo(e,t,n=Do("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Uo(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Vo(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Vo(s,44)),[s.add(r),a.add(i)]}(Po(e,t),Po(e,t+8),Po(e,t+16),Po(e,t+24),n,r)}function Go(e,t=e.length){const n=Fo.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Mo.add(2*t),r=Po(e,0).add(Mo),s=Po(e,t-8);return Wo(Vo(s,37).mul(n).add(r),Vo(r,25).add(s).mul(n),n)}if(t>=4){const n=Mo.add(2*t);return Wo(Bo(e,0).shl(3).add(t),Bo(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Lo(Mo.mul(n).xor(_o.mul(r))).mul(Mo)}return Mo}(e,t):function(e,t=e.length){const n=Mo.add(2*t),r=Po(e,0).mul(Oo),s=Po(e,8),a=Po(e,t-8).mul(n),i=Po(e,t-16).mul(Mo);return Wo(Vo(r.add(s),43).add(Vo(a,30)).add(i),r.add(Vo(s.add(Mo),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Mo.add(2*t),r=Po(e,0).mul(Mo),s=Po(e,8),a=Po(e,t-8).mul(n),i=Po(e,t-16).mul(Mo),o=Vo(r.add(s),43).add(Vo(a,30)).add(i),u=Wo(o,r.add(Vo(s.add(Mo),18)).add(a),n),l=Po(e,16).mul(n),c=Po(e,24),h=o.add(Po(e,t-32)).mul(n),p=u.add(Po(e,t-24)).mul(n);return Wo(Vo(l.add(c),43).add(Vo(h,30)).add(p),l.add(Vo(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Oo).add(113),a=Lo(s.mul(Mo).add(113)).mul(Mo),i=[Fo.UZERO,Fo.UZERO],o=[Fo.UZERO,Fo.UZERO];r=r.mul(Mo).add(Po(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Vo(r.add(s).add(i[0]).add(Po(e,u+8)),37).mul(Oo),s=Vo(s.add(i[1]).add(Po(e,u+48)),42).mul(Oo),r=r.xor(o[1]),s=s.add(i[0]).add(Po(e,u+40)),a=Vo(a.add(o[0]),33).mul(Oo),i=Uo(e,u,i[1].mul(Oo),r.add(o[0])),o=Uo(e,u+32,a.add(o[1]),s.add(Po(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Oo.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Vo(r.add(s).add(i[0]).add(Po(e,u+8)),37).mul(h),s=Vo(s.add(i[1]).add(Po(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Po(e,u+40))),a=Vo(a.add(o[0]),33).mul(h),i=Uo(e,u,i[1].mul(h),r.add(o[0])),o=Uo(e,u+32,a.add(o[1]),s.add(Po(e,u+16))),[a,r]=[r,a],Wo(Wo(i[0],o[0],h).add(Lo(s).mul(_o)).add(a),Wo(i[1],o[1],h).add(r),h)}function jo(e,t){return"string"===t?Xo(e):Ho([e],t)}function Ho(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Wa(e)),Ci().getBool("DEBUG")&&ri(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function qo(){return Ci().platform.now()}function Ko(e,t){return Ci().platform.fetch(e,t)}function Xo(e,t="utf-8"){return t=t||"utf-8",Ci().platform.encode(e,t)}function Jo(e,t="utf-8"){return t=t||"utf-8",Ci().platform.decode(e,t)}n(so,Aa),n(so,ao);class Yo{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Zo)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=qo();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:qo()-i})}if(Ci().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Qo(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Qo(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Zo{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?Ja(`${r}ms`,9):r.error,o=Ja(e,25),u=t.rank,l=t.size,c=Ja(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function eu(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function tu(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!ja(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}function nu(e,t,n,r){const s=mi(t),a=function(e,t,n,r){const s=Ua(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?iu(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],ru(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=au(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function ru(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:li(e)?`'${e}'`:"bool"===n?su(e):parseFloat(e.toFixed(7)).toString(),Ja(r,t)}function su(e){return 0===e?"false":"true"}function au(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[ru(iu(e)[0],0,n)]}return"bool"===n?[su(e[0])]:[e[0].toString()]}if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=iu(r),a=iu(a)),["["+r.map(((e,t)=>ru(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>ru(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?iu(e):Array.from(e)).map(((e,t)=>ru(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;p.push(...au(e.slice(r,a),l,n,c,s,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;p.push(...au(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...au(e.slice(r,a),l,n,c,s,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function iu(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ou{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ua(e),null!=n){const e=n.length;Pa(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ni(t,this.size),this.strides=mi(e)}set(e,...t){0===t.length&&(t=[0]),Pa(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return uu().makeTensor(this.values,this.shape,this.dtype)}}let uu=null,lu=null,cu=null;class hu{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ua(e),this.strides=mi(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return lu.buffer(this.shape,this.dtype,e)}bufferSync(){return lu.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return yi(this.shape,e,"complex64"===this.dtype)}arraySync(){return yi(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=uu().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Jo(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),uu().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=uu().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Jo(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await uu().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(uu().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return lu.print(this,e)}clone(){return this.throwIfDisposed(),lu.clone(this)}toString(e=!1){return nu(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),lu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),uu().makeVariable(this,e,t,n)}}function pu(){return Hi("Tensor",(()=>hu))}Object.defineProperty(hu,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),pu();class du extends hu{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ja(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);uu().disposeTensor(this),this.dataId=e.dataId,uu().incRef(this,null)}dispose(){uu().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(du,Symbol.hasInstance,{value:e=>e instanceof hu&&null!=e.assign&&e.assign instanceof Function});var fu,mu,gu,yu,bu,xu,vu,wu,ku,Iu,Su={};e(Su,"makeTypesMatch",(()=>Eu)),e(Su,"assertTypesMatch",(()=>$u)),e(Su,"isTensorInList",(()=>Au)),e(Su,"getTensorsInContainer",(()=>Ru)),(mu=fu||(fu={})).R0="R0",mu.R1="R1",mu.R2="R2",mu.R3="R3",mu.R4="R4",mu.R5="R5",mu.R6="R6",(yu=gu||(gu={})).float32="float32",yu.int32="int32",yu.bool="int32",yu.complex64="complex64",(xu=bu||(bu={})).float32="float32",xu.int32="int32",xu.bool="bool",xu.complex64="complex64",(wu=vu||(vu={})).float32="float32",wu.int32="float32",wu.bool="float32",wu.complex64="complex64",(Iu=ku||(ku={})).float32="complex64",Iu.int32="complex64",Iu.bool="complex64",Iu.complex64="complex64";const Nu={float32:vu,int32:gu,bool:bu,complex64:ku};function Tu(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Nu[e][t]}function Cu(e){return Tu(e,"int32")}function Eu(e,t){if(e.dtype===t.dtype)return[e,t];const n=Tu(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function $u(e,t){Pa(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Au(e,t){return t.some((t=>t.id===e.id))}function Ru(e){const t=[];return Fu(e,t,new Set),t}function Fu(e,t,n){if(null==e)return;if(e instanceof hu)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Fu(r,t,n))}}function Du(e){return null!=e.kernelName}class _u{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ou{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _u}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ki(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Yo(this.backendInstance),!0}setupRegisteredKernels(){eo(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){eo(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Ea||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ki(`Initialization of backend ${e} failed`),Ki(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Ki(`Initialization of backend ${e} failed`),Ki(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ou.nextTensorId++}nextVariableId(){return Ou.nextVariableId++}clone(e){const t=Lu.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Lu.runKernel("Cast",t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Qi(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Du(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Du(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=Qi(t,this.backendName);Pa(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Du(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Zi(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Pa(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&li(e[0])&&(s=e.map((e=>Xo(e))));const a=r.write(s,t,n),i=new hu(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=ui(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new hu(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new du(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*oi(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof du||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*oi(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Zi(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=xi(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ru(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Pa(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Pa(s instanceof hu,(()=>"The result y returned by f() must be a tensor."));const a=eu(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=bi(Ua(e),"float32");return Lu.makeTensor(t,e,"float32")}(s.shape):n,tu(e,a,(e=>this.tidy(e)),zu);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return Pa(di(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Pa(t.every((e=>e instanceof hu)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),Pa(n.value instanceof hu,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Pa(di(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];Pa(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Pa(a.every((e=>e instanceof hu)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=qo(),n=await this.backend.time(e);return n.wallMs=qo()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _u;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Mu(){const e=ji();if(null==e._tfengine){const t=new Ni(e);e._tfengine=new Ou(t)}var t;return t=e._tfengine.ENV,Ei=t,uu=()=>e._tfengine,e._tfengine}Ou.nextTensorId=0,Ou.nextVariableId=0;const Lu=Mu();function zu(e,t){const n={a:e,b:t};return Lu.runKernel("Add",n)}var Pu={};let Bu;function Vu(e){Bu=e}function Wu(e){if(void 0!==Bu)return Bu;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Uu(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}e(Pu,"mockIsMobile",(()=>Vu)),e(Pu,"isMobile",(()=>Wu)),e(Pu,"isBrowser",(()=>Uu));const Gu=Ci();function ju(e,t){let n=e;if(ii(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ii(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ci().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hu(e,r,[]),r}function Hu(e,t,n){if(n=n||[],!Array.isArray(e)&&!ii(e))return void Pa(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Pa(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Pa(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Hu(e[t],r,n.concat(t))}function qu(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ku(e,t,n,r="numeric"){if(e instanceof hu)return qu(r,e.dtype,t,n),e;let s=pi(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),qu(r,s,t,n),null==e||!ii(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ju(e,s);ii(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Ho(e,s):Wa(e,[],!0);return Lu.makeTensor(i,a,s)}function Xu(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ku(e,`${t}[${s}]`,n,r)))}Gu.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Gu.registerFlag("IS_BROWSER",(()=>Uu())),Gu.registerFlag("IS_NODE",(()=>void 0!==Ri&&void 0!==Ri.versions&&void 0!==Ri.versions.node)),Gu.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Gu.registerFlag("PROD",(()=>!1)),Gu.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Gu.getBool("DEBUG"))),Gu.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Gu.registerFlag("IS_TEST",(()=>!1)),Gu.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Gu.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Gu.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),Gu.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1));function Ju(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Lu.startScope(n);try{const t=r(...e);return Si(t)&&console.error("Cannot return a Promise inside of tidy."),Lu.endScope(t),t}catch(e){throw Lu.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Yu=Ju({complex_:function(e,t){const n=Ku(e,"real","complex"),r=Ku(t,"imag","complex");Ba(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Lu.runKernel("Complex",s)}});function Qu(e,t,n,r){if(null==r&&(r=pi(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ii(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){wi(t);const e=Ua(t),r=Ua(n);Pa(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Ua(t.slice(e));Pa(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ii(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ho(e,r):Wa(e,[],!0),Lu.makeTensor(e,t,r)}function Zu(e,t,n){return Qu(e,t,ju(e,n),n)}const el={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var tl,nl,rl;nl=function(e){var t,n,r=pl(e),s=r[0],a=r[1],i=new ul(function(e,t,n){return 3*(t+n)/4-n}(0,s,a)),o=0,u=a>0?s-4:s;for(n=0;n<u;n+=4)t=ol[e.charCodeAt(n)]<<18|ol[e.charCodeAt(n+1)]<<12|ol[e.charCodeAt(n+2)]<<6|ol[e.charCodeAt(n+3)],i[o++]=t>>16&255,i[o++]=t>>8&255,i[o++]=255&t;2===a&&(t=ol[e.charCodeAt(n)]<<2|ol[e.charCodeAt(n+1)]>>4,i[o++]=255&t);1===a&&(t=ol[e.charCodeAt(n)]<<10|ol[e.charCodeAt(n+1)]<<4|ol[e.charCodeAt(n+2)]>>2,i[o++]=t>>8&255,i[o++]=255&t);return i},rl=function(e){for(var t,n=e.length,r=n%3,s=[],a=16383,i=0,o=n-r;i<o;i+=a)s.push(dl(e,i,i+a>o?o:i+a));1===r?(t=e[n-1],s.push(il[t>>2]+il[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],s.push(il[t>>10]+il[t>>4&63]+il[t<<2&63]+"="));return s.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var sl,al,il=[],ol=[],ul="undefined"!=typeof Uint8Array?Uint8Array:Array,ll="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",cl=0,hl=ll.length;cl<hl;++cl)il[cl]=ll[cl],ol[ll.charCodeAt(cl)]=cl;function pl(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function dl(e,t,n){for(var r,s,a=[],i=t;i<n;i+=3)r=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),a.push(il[(s=r)>>18&63]+il[s>>12&63]+il[s>>6&63]+il[63&s]);return a.join("")}ol["-".charCodeAt(0)]=62,ol["_".charCodeAt(0)]=63,sl=function(e,t,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=e[t+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},al=function(e,t,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*u-1)*Math.pow(2,s),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;e[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;e[n+d]=255&i,d+=f,i/=256,l-=8);e[n+d-f]|=128*m};const fl="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;tl=gl;function ml(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,gl.prototype),t}function gl(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return xl(e)}return yl(e,t,n)}function yl(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!gl.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|Il(e,t);let r=ml(n);const s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(nc(e,Uint8Array)){const t=new Uint8Array(e);return wl(t.buffer,t.byteOffset,t.byteLength)}return vl(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(nc(e,ArrayBuffer)||e&&nc(e.buffer,ArrayBuffer))return wl(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(nc(e,SharedArrayBuffer)||e&&nc(e.buffer,SharedArrayBuffer)))return wl(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return gl.from(r,t,n);const s=function(e){if(gl.isBuffer(e)){const t=0|kl(e.length),n=ml(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||rc(e.length)?ml(0):vl(e);if("Buffer"===e.type&&Array.isArray(e.data))return vl(e.data)}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return gl.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function bl(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function xl(e){return bl(e),ml(e<0?0:0|kl(e))}function vl(e){const t=e.length<0?0:0|kl(e.length),n=ml(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function wl(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,gl.prototype),r}function kl(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function Il(e,t){if(gl.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||nc(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Zl(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return ec(e).length;default:if(s)return r?-1:Zl(e).length;t=(""+t).toLowerCase(),s=!0}}function Sl(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return Ll(this,t,n);case"utf8":case"utf-8":return _l(this,t,n);case"ascii":return Ol(this,t,n);case"latin1":case"binary":return Ml(this,t,n);case"base64":return Dl(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return zl(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Nl(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Tl(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),rc(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=gl.from(t,r)),gl.isBuffer(t))return 0===t.length?-1:Cl(e,t,n,r,s);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):Cl(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Cl(e,t,n,r,s){let a,i=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(s){let r=-1;for(a=n;a<o;a++)if(l(e,a)===l(t,-1===r?0:a-r)){if(-1===r&&(r=a),a-r+1===u)return r*i}else-1!==r&&(a-=a-r),r=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){let n=!0;for(let r=0;r<u;r++)if(l(e,a+r)!==l(t,r)){n=!1;break}if(n)return a}return-1}function El(e,t,n,r){n=Number(n)||0;const s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;const a=t.length;let i;for(r>a/2&&(r=a/2),i=0;i<r;++i){const r=parseInt(t.substr(2*i,2),16);if(rc(r))return i;e[n+i]=r}return i}function $l(e,t,n,r){return tc(Zl(t,e.length-n),e,n,r)}function Al(e,t,n,r){return tc(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Rl(e,t,n,r){return tc(ec(t),e,n,r)}function Fl(e,t,n,r){return tc(function(e,t){let n,r,s;const a=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r);return a}(t,e.length-n),e,n,r)}function Dl(e,t,n){return 0===t&&n===e.length?rl(e):rl(e.slice(t,n))}function _l(e,t,n){n=Math.min(e.length,n);const r=[];let s=t;for(;s<n;){const t=e[s];let a=null,i=t>239?4:t>223?3:t>191?2:1;if(s+i<=n){let n,r,o,u;switch(i){case 1:t<128&&(a=t);break;case 2:n=e[s+1],128==(192&n)&&(u=(31&t)<<6|63&n,u>127&&(a=u));break;case 3:n=e[s+1],r=e[s+2],128==(192&n)&&128==(192&r)&&(u=(15&t)<<12|(63&n)<<6|63&r,u>2047&&(u<55296||u>57343)&&(a=u));break;case 4:n=e[s+1],r=e[s+2],o=e[s+3],128==(192&n)&&128==(192&r)&&128==(192&o)&&(u=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o,u>65535&&u<1114112&&(a=u))}}null===a?(a=65533,i=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),s+=i}return function(e){const t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}gl.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),gl.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(gl.prototype,"parent",{enumerable:!0,get:function(){if(gl.isBuffer(this))return this.buffer}}),Object.defineProperty(gl.prototype,"offset",{enumerable:!0,get:function(){if(gl.isBuffer(this))return this.byteOffset}}),gl.poolSize=8192,gl.from=function(e,t,n){return yl(e,t,n)},Object.setPrototypeOf(gl.prototype,Uint8Array.prototype),Object.setPrototypeOf(gl,Uint8Array),gl.alloc=function(e,t,n){return function(e,t,n){return bl(e),e<=0?ml(e):void 0!==t?"string"==typeof n?ml(e).fill(t,n):ml(e).fill(t):ml(e)}(e,t,n)},gl.allocUnsafe=function(e){return xl(e)},gl.allocUnsafeSlow=function(e){return xl(e)},gl.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==gl.prototype},gl.compare=function(e,t){if(nc(e,Uint8Array)&&(e=gl.from(e,e.offset,e.byteLength)),nc(t,Uint8Array)&&(t=gl.from(t,t.offset,t.byteLength)),!gl.isBuffer(e)||!gl.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let s=0,a=Math.min(n,r);s<a;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},gl.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},gl.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return gl.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=gl.allocUnsafe(t);let s=0;for(n=0;n<e.length;++n){let t=e[n];if(nc(t,Uint8Array))s+t.length>r.length?(gl.isBuffer(t)||(t=gl.from(t)),t.copy(r,s)):Uint8Array.prototype.set.call(r,t,s);else{if(!gl.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,s)}s+=t.length}return r},gl.byteLength=Il,gl.prototype._isBuffer=!0,gl.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)Nl(this,t,t+1);return this},gl.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)Nl(this,t,t+3),Nl(this,t+1,t+2);return this},gl.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)Nl(this,t,t+7),Nl(this,t+1,t+6),Nl(this,t+2,t+5),Nl(this,t+3,t+4);return this},gl.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?_l(this,0,e):Sl.apply(this,arguments)},gl.prototype.toLocaleString=gl.prototype.toString,gl.prototype.equals=function(e){if(!gl.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===gl.compare(this,e)},gl.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},fl&&(gl.prototype[fl]=gl.prototype.inspect),gl.prototype.compare=function(e,t,n,r,s){if(nc(e,Uint8Array)&&(e=gl.from(e,e.offset,e.byteLength)),!gl.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;let a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0);const o=Math.min(a,i),u=this.slice(r,s),l=e.slice(t,n);for(let e=0;e<o;++e)if(u[e]!==l[e]){a=u[e],i=l[e];break}return a<i?-1:i<a?1:0},gl.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},gl.prototype.indexOf=function(e,t,n){return Tl(this,e,t,n,!0)},gl.prototype.lastIndexOf=function(e,t,n){return Tl(this,e,t,n,!1)},gl.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let a=!1;for(;;)switch(r){case"hex":return El(this,e,t,n);case"utf8":case"utf-8":return $l(this,e,t,n);case"ascii":case"latin1":case"binary":return Al(this,e,t,n);case"base64":return Rl(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Fl(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},gl.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Ol(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function Ml(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function Ll(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let s="";for(let r=t;r<n;++r)s+=sc[e[r]];return s}function zl(e,t,n){const r=e.slice(t,n);let s="";for(let e=0;e<r.length-1;e+=2)s+=String.fromCharCode(r[e]+256*r[e+1]);return s}function Pl(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function Bl(e,t,n,r,s,a){if(!gl.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function Vl(e,t,n,r,s){Xl(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,n}function Wl(e,t,n,r,s){Xl(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n+7]=a,a>>=8,e[n+6]=a,a>>=8,e[n+5]=a,a>>=8,e[n+4]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=i,i>>=8,e[n+2]=i,i>>=8,e[n+1]=i,i>>=8,e[n]=i,n+8}function Ul(e,t,n,r,s,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function Gl(e,t,n,r,s){return t=+t,n>>>=0,s||Ul(e,0,n,4),al(e,t,n,r,23,4),n+4}function jl(e,t,n,r,s){return t=+t,n>>>=0,s||Ul(e,0,n,8),al(e,t,n,r,52,8),n+8}gl.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,gl.prototype),r},gl.prototype.readUintLE=gl.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||Pl(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return r},gl.prototype.readUintBE=gl.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||Pl(e,t,this.length);let r=this[e+--t],s=1;for(;t>0&&(s*=256);)r+=this[e+--t]*s;return r},gl.prototype.readUint8=gl.prototype.readUInt8=function(e,t){return e>>>=0,t||Pl(e,1,this.length),this[e]},gl.prototype.readUint16LE=gl.prototype.readUInt16LE=function(e,t){return e>>>=0,t||Pl(e,2,this.length),this[e]|this[e+1]<<8},gl.prototype.readUint16BE=gl.prototype.readUInt16BE=function(e,t){return e>>>=0,t||Pl(e,2,this.length),this[e]<<8|this[e+1]},gl.prototype.readUint32LE=gl.prototype.readUInt32LE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},gl.prototype.readUint32BE=gl.prototype.readUInt32BE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},gl.prototype.readBigUInt64LE=ac((function(e){Jl(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Yl(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(s)<<BigInt(32))})),gl.prototype.readBigUInt64BE=ac((function(e){Jl(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Yl(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(s)})),gl.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||Pl(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*t)),r},gl.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||Pl(e,t,this.length);let r=t,s=1,a=this[e+--r];for(;r>0&&(s*=256);)a+=this[e+--r]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*t)),a},gl.prototype.readInt8=function(e,t){return e>>>=0,t||Pl(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},gl.prototype.readInt16LE=function(e,t){e>>>=0,t||Pl(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},gl.prototype.readInt16BE=function(e,t){e>>>=0,t||Pl(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},gl.prototype.readInt32LE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},gl.prototype.readInt32BE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},gl.prototype.readBigInt64LE=ac((function(e){Jl(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Yl(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),gl.prototype.readBigInt64BE=ac((function(e){Jl(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Yl(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),gl.prototype.readFloatLE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),sl(this,e,!0,23,4)},gl.prototype.readFloatBE=function(e,t){return e>>>=0,t||Pl(e,4,this.length),sl(this,e,!1,23,4)},gl.prototype.readDoubleLE=function(e,t){return e>>>=0,t||Pl(e,8,this.length),sl(this,e,!0,52,8)},gl.prototype.readDoubleBE=function(e,t){return e>>>=0,t||Pl(e,8,this.length),sl(this,e,!1,52,8)},gl.prototype.writeUintLE=gl.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){Bl(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=1,a=0;for(this[t]=255&e;++a<n&&(s*=256);)this[t+a]=e/s&255;return t+n},gl.prototype.writeUintBE=gl.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){Bl(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=n-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+n},gl.prototype.writeUint8=gl.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,1,255,0),this[t]=255&e,t+1},gl.prototype.writeUint16LE=gl.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},gl.prototype.writeUint16BE=gl.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},gl.prototype.writeUint32LE=gl.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},gl.prototype.writeUint32BE=gl.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},gl.prototype.writeBigUInt64LE=ac((function(e,t=0){return Vl(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),gl.prototype.writeBigUInt64BE=ac((function(e,t=0){return Wl(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),gl.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);Bl(this,e,t,n,r-1,-r)}let s=0,a=1,i=0;for(this[t]=255&e;++s<n&&(a*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},gl.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);Bl(this,e,t,n,r-1,-r)}let s=n-1,a=1,i=0;for(this[t+s]=255&e;--s>=0&&(a*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},gl.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},gl.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},gl.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},gl.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},gl.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||Bl(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},gl.prototype.writeBigInt64LE=ac((function(e,t=0){return Vl(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),gl.prototype.writeBigInt64BE=ac((function(e,t=0){return Wl(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),gl.prototype.writeFloatLE=function(e,t,n){return Gl(this,e,t,!0,n)},gl.prototype.writeFloatBE=function(e,t,n){return Gl(this,e,t,!1,n)},gl.prototype.writeDoubleLE=function(e,t,n){return jl(this,e,t,!0,n)},gl.prototype.writeDoubleBE=function(e,t,n){return jl(this,e,t,!1,n)},gl.prototype.copy=function(e,t,n,r){if(!gl.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const s=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},gl.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!gl.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{const a=gl.isBuffer(e)?e:gl.from(e,r),i=a.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=a[s%i]}return this};const Hl={};function ql(e,t,n){Hl[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function Kl(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function Xl(e,t,n,r,s,a){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let s;throw s=a>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(a+1)}${r}`:`>= -(2${r} ** ${8*(a+1)-1}${r}) and < 2 ** ${8*(a+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new Hl.ERR_OUT_OF_RANGE("value",s,e)}!function(e,t,n){Jl(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||Yl(t,e.length-(n+1))}(r,s,a)}function Jl(e,t){if("number"!=typeof e)throw new Hl.ERR_INVALID_ARG_TYPE(t,"number",e)}function Yl(e,t,n){if(Math.floor(e)!==e)throw Jl(e,n),new Hl.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new Hl.ERR_BUFFER_OUT_OF_BOUNDS;throw new Hl.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}ql("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),ql("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),ql("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>2**32?s=Kl(String(n)):"bigint"==typeof n&&(s=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(s=Kl(s)),s+="n"),r+=` It must be ${t}. Received ${s}`,r}),RangeError);const Ql=/[^+/0-9A-Za-z-_]/g;function Zl(e,t){let n;t=t||1/0;const r=e.length;let s=null;const a=[];for(let i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function ec(e){return nl(function(e){if((e=(e=e.split("=")[0]).trim().replace(Ql,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function tc(e,t,n,r){let s;for(s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function nc(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function rc(e){return e!=e}const sc=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let s=0;s<16;++s)t[r+s]=e[n]+e[s]}return t}();function ac(e){return"undefined"==typeof BigInt?ic:e}function ic(){throw new Error("BigInt not supported")}var oc=tl;async function uc(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:cc(await Promise.all(r)),specs:n}}function lc(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=Ua(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=el[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=vc()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=Ua(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=el[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=Zu(e,o,"float32"),i=Zu(r,o,"float32");n[t]=Yu(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=Zu(l,o,i))}return n}function cc(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const hc=void 0!==oc&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function pc(e){return hc?oc.byteLength(e):new Blob([e]).size}function dc(e){if(hc)return oc.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function fc(e){if(hc){const t=oc.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function mc(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function gc(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function yc(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function bc(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function xc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:pc(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:pc(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function vc(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class wc{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==wc.instance&&(wc.instance=new wc),wc.instance}static registerSaveRouter(e){wc.getInstance().saveRouters.push(e)}static registerLoadRouter(e){wc.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return wc.getHandlers(e,"save")}static getLoadHandlers(e,t){return wc.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?wc.getInstance().loadRouters:wc.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const kc=e=>wc.registerSaveRouter(e),Ic=e=>wc.registerLoadRouter(e),Sc=e=>wc.getSaveHandlers(e),Nc=(e,t)=>wc.getLoadHandlers(e,t);function Tc(){if(!Ci().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Cc(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Ec{constructor(e){if(this.indexedDB=Tc(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Cc(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=xc(t),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore("model_info_store");const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Ec.URL_SCHEME="indexeddb://";const $c=e=>{return Ci().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ec.URL_SCHEME)?(t=e.slice(Ec.URL_SCHEME.length),new Ec(t)):null;var t};wc.registerSaveRouter($c),wc.registerLoadRouter($c);class Ac{constructor(){this.indexedDB=Tc()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Cc(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ec.URL_SCHEME)?t.slice(Ec.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Cc(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Rc="tensorflowjs_models",Fc="info",Dc="model_topology",_c="weight_specs",Oc="weight_data",Mc="model_metadata";function Lc(e){return{info:[Rc,e,Fc].join("/"),topology:[Rc,e,Dc].join("/"),weightSpecs:[Rc,e,_c].join("/"),weightData:[Rc,e,Oc].join("/"),modelMetadata:[Rc,e,Mc].join("/")}}function zc(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Pc(e){const t=e.split("/");if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}class Bc{constructor(e){if(!Ci().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Lc(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=xc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,dc(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw zc(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=fc(a),t}}Bc.URL_SCHEME="localstorage://";const Vc=e=>{return Ci().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bc.URL_SCHEME)?(t=e.slice(Bc.URL_SCHEME.length),new Bc(t)):null;var t};wc.registerSaveRouter(Vc),wc.registerLoadRouter(Vc);class Wc{constructor(){Pa(Ci().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Pa("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Rc+"/",n="/"+Fc;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Pc(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Lc(e=(t=e).startsWith(Bc.URL_SCHEME)?t.slice(Bc.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return zc(n),r}}class Uc{constructor(){this.managers={}}static getInstance(){return null==Uc.instance&&(Uc.instance=new Uc),Uc.instance}static registerManager(e,t){Pa(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Pa(e.length>0,(()=>"scheme must not be an empty string."));const n=Uc.getInstance();Pa(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Uc.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Uc.getInstance().managers)}}function Gc(e){if(-1===e.indexOf("://"))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Uc.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function jc(e,t,n=!1){Pa(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=wc.getLoadHandlers(e);Pa(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Pa(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=wc.getSaveHandlers(t);Pa(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Pa(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=Gc(e).scheme,u=Gc(e).path,l=o===Gc(e).scheme,c=await s.load();n&&l&&await Uc.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await Uc.getManager(o).removeModel(u),h.modelArtifactsInfo}async function Hc(){const e=Uc.getSchemes(),t={};for(const n of e){const e=await Uc.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t}async function qc(e){const t=Gc(e);return Uc.getManager(t.scheme).removeModel(t.path)}async function Kc(e,t){return jc(e,t,!1)}async function Xc(e,t){return jc(e,t,!0)}class Jc{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Ci().get("IS_BROWSER")){Ci().setPlatform("browser",new Jc);try{Uc.registerManager(Bc.URL_SCHEME,new Wc)}catch(e){}try{Uc.registerManager(Ec.URL_SCHEME,new Ac)}catch(e){}}const Yc=()=>a("kjyEk");let Qc;function Zc(e,t="float32",n){return t=t||"float32",wi(e),new ou(e,t,n)}Ci().get("IS_NODE")&&!Ci().get("IS_BROWSER")&&Ci().setPlatform("node",new class{constructor(){this.util=a("kjyEk"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ci().global.fetch?Ci().global.fetch(e,t):(null==Qc&&(Qc=Yc()),Qc(e,t))}now(){const e=Ri.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const eh=Ju({cast_:function(e,t){const n=Ku(e,"x","cast");if(!si(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Lu.runKernel("Cast",r,s)}});const th=Ju({clone_:function(e){const t={x:Ku(e,"x","clone","string_or_numeric")};return Lu.runKernel("Identity",t)}});function nh(e,t=!1){console.log(e.toString(t))}Mu();lu={buffer:Zc,cast:eh,clone:th,print:nh};var rh={};e(rh,"copyModel",(()=>Kc)),e(rh,"listModels",(()=>Hc)),e(rh,"moveModel",(()=>Xc)),e(rh,"removeModel",(()=>qc)),e(rh,"browserFiles",(()=>oh)),e(rh,"browserHTTPRequest",(()=>gh)),e(rh,"concatenateArrayBuffers",(()=>mc)),e(rh,"decodeWeights",(()=>lc)),e(rh,"encodeWeights",(()=>uc)),e(rh,"fromMemory",(()=>vh)),e(rh,"fromMemorySync",(()=>wh)),e(rh,"getLoadHandlers",(()=>Nc)),e(rh,"getModelArtifactsForJSON",(()=>bc)),e(rh,"getModelArtifactsInfoForJSON",(()=>xc)),e(rh,"getSaveHandlers",(()=>Sc)),e(rh,"http",(()=>mh)),e(rh,"isHTTPScheme",(()=>dh)),e(rh,"loadWeights",(()=>ch)),e(rh,"registerLoadRouter",(()=>Ic)),e(rh,"registerSaveRouter",(()=>kc)),e(rh,"weightsLoaderFactory",(()=>hh)),e(rh,"withSaveHandler",(()=>kh)),e(rh,"withSaveHandlerSync",(()=>Ih));function sh(e){return new Promise((e=>setTimeout(e))).then(e)}class ah{constructor(e){if(!Ci().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ah.URL_SCHEME)&&(e=e.slice(ah.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=yc(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await sh((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await sh((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:xc(e)}}}}ah.URL_SCHEME="downloads://";class ih{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=bc(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,mc(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>gc(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=gc(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function oh(e){return new ih(e)}function uh(e,t,n,r){!function(e){Pa(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Pa(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Pa(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Pa(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function lh(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ci().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await uh(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await uh(s,t.onProgress,.5,1)}async function ch(e,t="",n,r){return hh((e=>lh(e,{requestInit:r})))(e,t,n)}function hh(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=el[u]*Ua(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=lc(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}wc.registerSaveRouter((e=>Ci().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ah.URL_SCHEME)?function(e="model"){return new ah(e)}(e.slice(ah.URL_SCHEME.length)):null));class ph{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Pa("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ci().platform.fetch,Pa(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Pa(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=yc(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:xc(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return bc(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,mc(await lh(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function dh(e){return null!=e.match(ph.URL_SCHEME_REGEX)}ph.URL_SCHEME_REGEX=/^https?:\/\//;const fh=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>dh(e))):dh(e),n)return mh(e,t)}return null};function mh(e,t){return new ph(e,t)}function gh(e,t){return mh(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */wc.registerSaveRouter(fh),wc.registerLoadRouter(fh);class yh{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class bh{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class xh{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function vh(e,t,n,r){const s=arguments;return new xh(wh(...s))}function wh(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new yh(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yh({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yh({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function kh(e){return new bh(e)}function Ih(e){return new bh(e)}var Sh={};function Nh(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Th(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ch(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}e(Sh,"getBroadcastDims",(()=>Nh)),e(Sh,"getReductionAxes",(()=>Th)),e(Sh,"assertAndGetBroadcastShape",(()=>Ch));var Eh={};function $h(e,t,n){if(Va(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ju(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qu(e,t,r,n)}let Ah;function Rh(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Qi("FromPixels",Lu.backendName)){const n={pixels:e},r={numChannels:t};return Lu.runKernel("FromPixels",n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Ah)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ah=new OffscreenCanvas(1,1).getContext("2d")}else Ah=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ah.canvas.width=u,Ah.canvas.height=l,Ah.drawImage(e,0,0,u,l),c=Ah.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return $h(h,[l,u,t],"int32")}function Fh(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Dh(e,t=3){let n=null;if(Ci().getBool("WRAP_TO_IMAGEBITMAP")&&Fh(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Rh(n,t)}async function _h(e,t){let n=Ku(e,"img","toPixels");if(!(e instanceof hu)){const e=n;n=eh(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}e(Eh,"fromPixelsAsync",(()=>Dh)),e(Eh,"toPixels",(()=>_h)),e(Eh,"fromPixels",(()=>Oh));const Oh=Ju({fromPixels_:Rh});var Mh={};e(Mh,"assertParamsValid",(()=>Lh)),e(Mh,"maskToAxes",(()=>zh)),e(Mh,"computeOutShape",(()=>Ph)),e(Mh,"stridesWithElidedDims",(()=>Bh)),e(Mh,"getNormalizedAxes",(()=>Uh)),e(Mh,"startIndicesWithElidedDims",(()=>Gh)),e(Mh,"stopIndicesWithElidedDims",(()=>jh)),e(Mh,"startForAxis",(()=>qh)),e(Mh,"stopForAxis",(()=>Kh)),e(Mh,"stridesForAxis",(()=>Hh)),e(Mh,"isSliceContinous",(()=>Xh)),e(Mh,"computeFlatOffset",(()=>Jh)),e(Mh,"parseSliceParams",(()=>Yh)),e(Mh,"sliceInfo",(()=>Qh));function Lh(e,t,n){const r=e.shape.length;Pa(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Pa(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Pa(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function zh(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ph(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Bh(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Vh(e,t,n){return n<=e?n:n-(t-1)}function Wh(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Uh(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Gh(i,u,l,r,e),h=jh(o,u,l,s,e),p=Bh(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=qh(i,r,a,e,t,u),h[t]=Kh(o,s,a,e,t,u),p[t]=Hh(a,t,u);return{begin:c,end:h,strides:p}}function Gh(e,t,n,r,s){const a=[...s],i=Wh(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Vh(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function jh(e,t,n,r,s){const a=[...s],i=Wh(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Vh(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=Da(0,a[e],s[e])}return a}function Hh(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function qh(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=Da(0,i,u-1),i}function Kh(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?Da(0,i,u):Da(-1,i,u-1),i}function Xh(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Jh(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Yh(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Pa(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Pa(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Qh(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Zh(p.begin[t],0,p.strides[t],r,s,a),p.end[t]=Zh(p.end[t],1,p.strides[t],r,s,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Zh(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}var ep={};e(ep,"Serializable",(()=>tp)),e(ep,"SerializationMap",(()=>np)),e(ep,"registerClass",(()=>rp));class tp{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class np{constructor(){this.classNameMap={}}static getMap(){return null==np.instance&&(np.instance=new np),np.instance}static register(e){np.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rp(e){Pa(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Pa("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Pa(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),np.register(e)}
/** @license See the LICENSE file. */var sp={};e(sp,"fromUint8ToStringArray",(()=>pf)),e(sp,"fromStringArrayToUint8",(()=>df)),e(sp,"slice_util",(()=>Mh)),e(sp,"upcastType",(()=>Tu)),e(sp,"segment_util",(()=>ap));var ap={};e(ap,"segOpComputeOptimalWindowSize",(()=>lp)),e(ap,"computeOutShape",(()=>cp)),e(ap,"collectGatherOpShapeInfo",(()=>hp));var ip={};e(ip,"PARALLELIZE_THRESHOLD",(()=>op)),e(ip,"computeOptimalWindowSize",(()=>up));const op=30;function up(e){return e<=op?e:fi(e,Math.floor(Math.sqrt(e)))}function lp(e,t){let n,r=!1;for(e<=op?(n=e,r=!0):n=fi(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=fi(e,n+1);return n}function cp(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function hp(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}var pp={};function dp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function fp(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function mp(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function gp(e,t){return fp(e,t.map((e=>1)),t)}function yp(e,t,n){Pa(dp(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function bp(e,t){if(dp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function xp(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function vp(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}e(pp,"axesAreInnerMostDims",(()=>dp)),e(pp,"combineLocations",(()=>fp)),e(pp,"computeOutAndReduceShapes",(()=>mp)),e(pp,"expandShapeToKeepDim",(()=>gp)),e(pp,"assertAxesAreInnerMostDims",(()=>yp)),e(pp,"getAxesPermutation",(()=>bp)),e(pp,"getUndoAxesPermutation",(()=>xp)),e(pp,"getInnerMostAxes",(()=>vp));var wp={};function kp(e,t){const n=e[0].length;e.forEach(((e,t)=>{Pa(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Pa(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)Pa(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Ip(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}e(wp,"assertParamsConsistent",(()=>kp)),e(wp,"computeOutShape",(()=>Ip));var Sp={};function Np(e,t,n,r,s="NHWC",a){return Ep(e,[...t,e[3]],n,a,r,null,null,Lp(s))}function Tp(e,t,n,r,s,a,i="channelsLast"){const[o,u]=Rp(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Ep(e,l,n,r,s,a,!1,i)}function Cp(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Fp(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return $p(e,c,n,r,s,!1,h,a)}function Ep(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=Rp(n),[y,b]=Rp(r),x=Dp(p,y),v=Dp(d,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Ap(e,t,n));const a=e[0],i=e[1],o=_p((a-t+2*r)/n+1,s),u=_p((i-t+2*r)/n+1,s);return[o,u]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=_p((t-a+p+d)/r+1,o),h=_p((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,v,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function $p(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=Fp(n),[v,w,k]=Fp(r),I=Dp(d,v),S=Dp(f,w),N=Dp(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,s,a,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Ap(e,t,r));const i=e[0],o=e[1],u=e[2],l=_p((i-t+2*s)/r+1,a),c=_p((o-t+2*s)/r+1,a),h=_p((u-t+2*s)/r+1,a);return[l,c,h,n]}([t,n,r,1],o,1,s,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,I,S,N,o),A=a?g*p:g;let R;return"channelsFirst"===i?R=[u,A,C,E,$]:"channelsLast"===i&&(R=[u,C,E,$,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Ap(e,t,n,r=1){const s=Dp(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Rp(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Fp(e){return"number"==typeof e?[e,e,e]:e}function Dp(e,t){return t<=1?e:e+(e-1)*(t-1)}function _p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Op(e){const[t,n,r]=Rp(e);return 1===t&&1===n&&1===r}function Mp(e,t){return Op(e)||Op(t)}function Lp(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function zp(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Pa(Ha(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Pa(Ha(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}e(Sp,"computeDilation2DInfo",(()=>Np)),e(Sp,"convertConv2DDataFormat",(()=>Lp)),e(Sp,"computeConv2DInfo",(()=>Ep)),e(Sp,"computePool2DInfo",(()=>Tp)),e(Sp,"computePool3DInfo",(()=>Cp)),e(Sp,"computeConv3DInfo",(()=>$p)),e(Sp,"computeDefaultPad",(()=>Ap)),e(Sp,"tupleValuesAreOne",(()=>Op)),e(Sp,"eitherStridesOrDilationsAreOne",(()=>Mp)),e(Sp,"checkPadOnDimRoundingMode",(()=>zp));var Pp={};e(Pp,"getFusedDyActivation",(()=>Jp)),e(Pp,"getFusedBiasGradient",(()=>Yp)),e(Pp,"applyActivation",(()=>Qp)),e(Pp,"shouldFuse",(()=>Zp));const Bp=Ju({elu_:function(e){const t={x:Ku(e,"x","elu","float32")};return Lu.runKernel("Elu",t)}});const Vp=Ju({leakyRelu_:function(e,t=.2){const n={x:Ku(e,"x","leakyRelu")},r={alpha:t};return Lu.runKernel("LeakyRelu",n,r)}});const Wp=Ju({mul_:function(e,t){let n=Ku(e,"a","mul"),r=Ku(t,"b","mul");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Multiply",s)}});const Up=Ju({prelu_:function(e,t){const n={x:Ku(e,"x","prelu"),alpha:Ku(t,"alpha","prelu")};return Lu.runKernel("Prelu",n)}});const Gp=Ju({relu_:function(e){const t={x:Ku(e,"x","relu")};return Lu.runKernel("Relu",t)}});const jp=Ju({relu6_:function(e){const t={x:Ku(e,"x","relu6")};return Lu.runKernel("Relu6",t)}});const Hp=Ju({reshape_:function(e,t){const n={x:Ku(e,"x","reshape","string_or_numeric")},r={shape:t};return Lu.runKernel("Reshape",n,r)}});const qp=Ju({sigmoid_:function(e){const t={x:Ku(e,"x","sigmoid","float32")};return Lu.runKernel("Sigmoid",t)}});const Kp=Ju({step_:function(e,t=0){const n={x:Ku(e,"x","step")},r={alpha:t};return Lu.runKernel("Step",n,r)}});const Xp=Ju({sum_:function(e,t=null,n=!1){let r=Ku(e,"x","sum");"bool"===r.dtype&&(r=eh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Lu.runKernel("Sum",s,a)}});function Jp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Wp(e,Kp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Yp(e,t){let n=t;const r=Th(e.shape,t.shape);return r.length>0&&(n=Xp(n,r)),Hp(n,e.shape)}function Qp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Gp(e);if("elu"===t)return Bp(e);if("relu6"===t)return jp(e);if("prelu"===t)return Up(e,n);if("leakyrelu"===t)return Vp(e,r);if("sigmoid"===t)return qp(e);throw new Error(`Unknown fused activation ${t}.`)}const Zp=(e,t)=>!(e>0)||"linear"===t;var ed,td,nd={};function rd(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function sd(e){const t={FIRST_DIM_SIZE:ed.FIRST_DIM_SIZE,VALUE_ROWIDS:ed.VALUE_ROWIDS,ROW_LENGTHS:ed.ROW_LENGTHS,ROW_SPLITS:ed.ROW_SPLITS,ROW_LIMITS:ed.ROW_LIMITS,ROW_STARTS:ed.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function ad(e){return 0===e.length?0:e[0]===ed.FIRST_DIM_SIZE?e.length-1:e.length}function id(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}e(nd,"RowPartitionType",(()=>ed)),e(nd,"combineRaggedTensorToTensorShapes",(()=>rd)),e(nd,"getRowPartitionTypesHelper",(()=>sd)),e(nd,"getRaggedRank",(()=>ad)),e(nd,"validateDefaultValueShape",(()=>id)),(td=ed||(ed={}))[td.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",td[td.VALUE_ROWIDS=1]="VALUE_ROWIDS",td[td.ROW_LENGTHS=2]="ROW_LENGTHS",td[td.ROW_SPLITS=3]="ROW_SPLITS",td[td.ROW_LIMITS=4]="ROW_LIMITS",td[td.ROW_STARTS=5]="ROW_STARTS";var od={};function ud(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}e(od,"getImageCenter",(()=>ud));var ld={};function cd(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function hd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function pd(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function dd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function fd(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}e(ld,"getReshaped",(()=>cd)),e(ld,"getPermuted",(()=>hd)),e(ld,"getReshapedPermuted",(()=>pd)),e(ld,"getSliceBeginCoords",(()=>dd)),e(ld,"getSliceSize",(()=>fd));var md={};function gd(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Ua(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...mi(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}e(md,"prepareAndValidate",(()=>gd));var yd={};function bd(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function xd(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}bd(n,t,e)}function vd(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:Ua(t.shape)/o,sliceSize:i,strides:[...mi(n.slice(0,s)),1],outputSize:Ua(n)}}e(yd,"validateUpdateShape",(()=>bd)),e(yd,"validateInput",(()=>xd)),e(yd,"calculateShapes",(()=>vd));var wd={};e(wd,"SELU_SCALEALPHA",(()=>kd)),e(wd,"SELU_SCALE",(()=>Id));const kd=1.7580993408473768,Id=1.0507009873554805;var Sd={};e(Sd,"ERF_P",(()=>Nd)),e(Sd,"ERF_A1",(()=>Td)),e(Sd,"ERF_A2",(()=>Cd)),e(Sd,"ERF_A3",(()=>Ed)),e(Sd,"ERF_A4",(()=>$d)),e(Sd,"ERF_A5",(()=>Ad));const Nd=.3275911,Td=.254829592,Cd=-.284496736,Ed=1.421413741,$d=-1.453152027,Ad=1.061405429;var Rd={};function Fd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Dd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _d(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Od(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Md(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ld(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function zd(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Pd(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}e(Rd,"mergeRealAndImagArrays",(()=>Fd)),e(Rd,"splitRealAndImagArrays",(()=>Dd)),e(Rd,"complexWithEvenIndex",(()=>_d)),e(Rd,"complexWithOddIndex",(()=>Od)),e(Rd,"getComplexWithIndex",(()=>Md)),e(Rd,"assignToTypedArray",(()=>Ld)),e(Rd,"exponents",(()=>zd)),e(Rd,"exponent",(()=>Pd));var Bd={};e(Bd,"decodeEinsumEquation",(()=>Wd)),e(Bd,"getEinsumPermutation",(()=>Ud)),e(Bd,"checkEinsumDimSizes",(()=>Gd)),e(Bd,"getEinsumComputePath",(()=>jd)),e(Bd,"isIdentityPermutation",(()=>Hd));const Vd=/->/g;function Wd(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Vd,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");Pa(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Ud(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Gd(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:Pa(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function jd(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=qd(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Hd(e){return e.every(((e,t)=>e===t))}function qd(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var Kd={};function Xd(e,t,n=0){let r=[];if("number"==typeof t)Pa(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Pa(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Pa(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}e(Kd,"prepareSplitSize",(()=>Xd));var Jd={};function Yd(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Qd(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Zd(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}e(Jd,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(()=>Yd)),e(Jd,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(()=>Qd)),e(Jd,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(()=>Zd));var ef={};function tf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function nf(e,t){return`size ${e} must be non-negative, not ${t}`}function rf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function sf(e,t){return`Input to reshape is a SparseTensor with ${Ua(e)}\n  dense values, but the requested shape requires a multiple of ${Ua(t)}. inputShape=${e} outputShape= ${t}`}function af(e,t){return`Input to reshape is a tensor with ${Ua(e)} dense values, but the requested shape has ${Ua(t)}. inputShape=${e} outputShape=${t}`}e(ef,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(()=>tf)),e(ef,"getSparseReshapeNegativeOutputDimErrorMessage",(()=>nf)),e(ef,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(()=>rf)),e(ef,"getSparseReshapeInputOutputMultipleErrorMessage",(()=>sf)),e(ef,"getSparseReshapeInputOutputMismatchErrorMessage",(()=>af));var of={};function uf(){return"segment ids must be >= 0"}function lf(){return"segment ids are not increasing"}function cf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function hf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function pf(e){try{return e.map((e=>Jo(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function df(e){return e.map((e=>Xo(e)))}e(of,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(()=>uf)),e(of,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(()=>lf)),e(of,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(()=>cf)),e(of,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(()=>hf)),n(sp,pp),n(sp,Sh),n(sp,wp),n(sp,Sp),n(sp,Pp),n(sp,nd),n(sp,ip),n(sp,od),n(sp,ld),n(sp,md),n(sp,yd),n(sp,wd),n(sp,Sd),n(sp,qi),n(sp,Rd),n(sp,Bd),n(sp,Kd),n(sp,Jd),n(sp,ef),n(sp,of);var ff={};function mf(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||gf)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function gf(e,t){return e>t?1:e<t?-1:0}function yf(e,t,n,r,s){return vf(e,t,n,r,s,0)}function bf(e,t,n,r,s,a){return vf(e,t,n,r,s,0,!1,a,!0)}function xf(e,t,n,r,s,a){return vf(e,t,n,r,s,a,!0)}function vf(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(If);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=wf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*kf(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&mf(l,t,If))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function wf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function kf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function If(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Sf(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Zc(e,"int32"),s=Zc([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}function Nf(){return Lu}function Tf(){return Lu.memory()}function Cf(e,t){return Lu.tidy(e,t)}function Ef(e){Ru(e).forEach((e=>e.dispose()))}function $f(e){return Lu.keep(e)}function Af(e,t,n=1){return Lu.registerBackend(e,t,n)}function Rf(e,t){Pa(di(e),(()=>"The f passed in variableGrads(f) must be a function")),Pa(null==t||Array.isArray(t)&&t.every((e=>e instanceof du)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Lu.registeredVariables)t.push(Lu.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;Pa((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Lu.gradients(e,t,null,!0);Pa(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Pa(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function Ff(e){return Lu.customGrad(e)}e(ff,"nonMaxSuppressionV3Impl",(()=>yf)),e(ff,"nonMaxSuppressionV4Impl",(()=>bf)),e(ff,"nonMaxSuppressionV5Impl",(()=>xf)),e(ff,"whereImpl",(()=>Sf)),cu=function(e){Ci().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};var Df={};e(Df,"spectral",(()=>Ix)),e(Df,"signal",(()=>Sx)),e(Df,"image",(()=>Nx)),e(Df,"linalg",(()=>Tx)),e(Df,"losses",(()=>Cx)),e(Df,"sparse",(()=>Ex)),e(Df,"string",(()=>$x)),e(Df,"abs",(()=>qm)),e(Df,"acos",(()=>Lg)),e(Df,"acosh",(()=>zg)),e(Df,"add",(()=>Kf)),e(Df,"addN",(()=>Pg)),e(Df,"all",(()=>Bg)),e(Df,"any",(()=>Vg)),e(Df,"argMax",(()=>Wg)),e(Df,"argMin",(()=>Ug)),e(Df,"asin",(()=>Gg)),e(Df,"asinh",(()=>jg)),e(Df,"atan",(()=>Hg)),e(Df,"atan2",(()=>qg)),e(Df,"atanh",(()=>Kg)),e(Df,"avgPool",(()=>Xg)),e(Df,"avgPool3d",(()=>Jg)),e(Df,"basicLSTMCell",(()=>Qg)),e(Df,"batchToSpaceND",(()=>Zg)),e(Df,"batchNorm",(()=>ty)),e(Df,"batchNorm2d",(()=>ny)),e(Df,"batchNorm3d",(()=>ry)),e(Df,"batchNorm4d",(()=>sy)),e(Df,"bincount",(()=>$m)),e(Df,"broadcastArgs",(()=>ay)),e(Df,"broadcastTo",(()=>Mm)),e(Df,"buffer",(()=>Zc)),e(Df,"cast",(()=>eh)),e(Df,"ceil",(()=>iy)),e(Df,"clipByValue",(()=>oy)),e(Df,"clone",(()=>th)),e(Df,"complex",(()=>Yu)),e(Df,"concat",(()=>_f)),e(Df,"concat1d",(()=>uy)),e(Df,"concat2d",(()=>ly)),e(Df,"concat3d",(()=>cy)),e(Df,"concat4d",(()=>hy)),e(Df,"conv1d",(()=>py)),e(Df,"conv2d",(()=>Xf)),e(Df,"conv2dTranspose",(()=>dy)),e(Df,"conv3d",(()=>fy)),e(Df,"conv3dTranspose",(()=>gy)),e(Df,"cos",(()=>yy)),e(Df,"cosh",(()=>by)),e(Df,"cumprod",(()=>xy)),e(Df,"cumsum",(()=>vy)),e(Df,"denseBincount",(()=>wy)),e(Df,"depthToSpace",(()=>ky)),e(Df,"depthwiseConv2d",(()=>Zf)),e(Df,"diag",(()=>Iy)),e(Df,"dilation2d",(()=>Sy)),e(Df,"div",(()=>Dm)),e(Df,"divNoNan",(()=>Ty)),e(Df,"dot",(()=>Cy)),e(Df,"einsum",(()=>Ey)),e(Df,"elu",(()=>Bp)),e(Df,"equal",(()=>Ny)),e(Df,"erf",(()=>$y)),e(Df,"euclideanNorm",(()=>Ay)),e(Df,"exp",(()=>Ng)),e(Df,"expandDims",(()=>rg)),e(Df,"expm1",(()=>Ry)),e(Df,"eye",(()=>sg)),e(Df,"fill",(()=>hm)),e(Df,"floor",(()=>Fy)),e(Df,"floorDiv",(()=>Fm)),e(Df,"gather",(()=>Dy)),e(Df,"greater",(()=>Rm)),e(Df,"greaterEqual",(()=>Vm)),e(Df,"imag",(()=>Of)),e(Df,"isFinite",(()=>_y)),e(Df,"isInf",(()=>Oy)),e(Df,"isNaN",(()=>My)),e(Df,"leakyRelu",(()=>Vp)),e(Df,"less",(()=>Ly)),e(Df,"lessEqual",(()=>Am)),e(Df,"linspace",(()=>zy)),e(Df,"localResponseNormalization",(()=>Py)),e(Df,"log",(()=>wg)),e(Df,"log1p",(()=>Tg)),e(Df,"logSigmoid",(()=>Vy)),e(Df,"logSoftmax",(()=>Wy)),e(Df,"logSumExp",(()=>Eg)),e(Df,"logicalAnd",(()=>Wm)),e(Df,"logicalNot",(()=>Uy)),e(Df,"logicalOr",(()=>Gy)),e(Df,"logicalXor",(()=>jy)),e(Df,"lowerBound",(()=>Ky)),e(Df,"matMul",(()=>rm)),e(Df,"max",(()=>Km)),e(Df,"maxPool",(()=>Xy)),e(Df,"maxPool3d",(()=>Jy)),e(Df,"maxPoolWithArgmax",(()=>Yy)),e(Df,"maximum",(()=>Qy)),e(Df,"mean",(()=>pg)),e(Df,"meshgrid",(()=>Zy)),e(Df,"min",(()=>Xm)),e(Df,"minimum",(()=>xg)),e(Df,"mirrorPad",(()=>eb)),e(Df,"mod",(()=>tb)),e(Df,"moments",(()=>nb)),e(Df,"mul",(()=>Wp)),e(Df,"multiRNNCell",(()=>rb)),e(Df,"multinomial",(()=>sb)),e(Df,"neg",(()=>ag)),e(Df,"notEqual",(()=>dg)),e(Df,"oneHot",(()=>ab)),e(Df,"ones",(()=>fg)),e(Df,"onesLike",(()=>ib)),e(Df,"outerProduct",(()=>ob)),e(Df,"pad",(()=>ub)),e(Df,"pad1d",(()=>lb)),e(Df,"pad2d",(()=>cb)),e(Df,"pad3d",(()=>hb)),e(Df,"pad4d",(()=>pb)),e(Df,"pool",(()=>fb)),e(Df,"pow",(()=>Jm)),e(Df,"prelu",(()=>Up)),e(Df,"print",(()=>nh)),e(Df,"prod",(()=>mb)),e(Df,"raggedTensorToTensor",(()=>gb)),e(Df,"rand",(()=>yb)),e(Df,"randomGamma",(()=>$b)),e(Df,"randomNormal",(()=>Ab)),e(Df,"randomStandardNormal",(()=>Rb)),e(Df,"randomUniform",(()=>Fb)),e(Df,"range",(()=>zm)),e(Df,"real",(()=>Mf)),e(Df,"reciprocal",(()=>Db)),e(Df,"relu",(()=>Gp)),e(Df,"relu6",(()=>jp)),e(Df,"reshape",(()=>Hp)),e(Df,"reverse",(()=>Gf)),e(Df,"reverse1d",(()=>_b)),e(Df,"reverse2d",(()=>Ob)),e(Df,"reverse3d",(()=>Mb)),e(Df,"reverse4d",(()=>Lb)),e(Df,"round",(()=>Om)),e(Df,"rsqrt",(()=>zb)),e(Df,"scalar",(()=>jf)),e(Df,"selu",(()=>Pb)),e(Df,"separableConv2d",(()=>Bb)),e(Df,"setdiff1dAsync",(()=>Vb)),e(Df,"sigmoid",(()=>qp)),e(Df,"sign",(()=>Wb)),e(Df,"sin",(()=>Ub)),e(Df,"sinh",(()=>Gb)),e(Df,"slice",(()=>Lf)),e(Df,"slice1d",(()=>jb)),e(Df,"slice2d",(()=>Hb)),e(Df,"slice3d",(()=>qb)),e(Df,"slice4d",(()=>Kb)),e(Df,"softmax",(()=>Xb)),e(Df,"softplus",(()=>By)),e(Df,"spaceToBatchND",(()=>db)),e(Df,"fft",(()=>Vf)),e(Df,"ifft",(()=>Uf)),e(Df,"irfft",(()=>Hf)),e(Df,"rfft",(()=>Wf)),e(Df,"split",(()=>zf)),e(Df,"sqrt",(()=>Ym)),e(Df,"square",(()=>Qm)),e(Df,"squaredDifference",(()=>Ig)),e(Df,"squeeze",(()=>tg)),e(Df,"stack",(()=>Um)),e(Df,"step",(()=>Kp)),e(Df,"stridedSlice",(()=>Jb)),e(Df,"sub",(()=>_m)),e(Df,"sum",(()=>Xp)),e(Df,"tan",(()=>Yb)),e(Df,"tanh",(()=>Yg)),e(Df,"tensor",(()=>Zu)),e(Df,"tensor1d",(()=>im)),e(Df,"tensor2d",(()=>pm)),e(Df,"tensor3d",(()=>$h)),e(Df,"tensor4d",(()=>Qb)),e(Df,"tensor5d",(()=>Zb)),e(Df,"tensor6d",(()=>ex)),e(Df,"tile",(()=>ym)),e(Df,"topk",(()=>tx)),e(Df,"truncatedNormal",(()=>nx)),e(Df,"unique",(()=>rx)),e(Df,"unsortedSegmentSum",(()=>sx)),e(Df,"unstack",(()=>Gm)),e(Df,"upperBound",(()=>ax)),e(Df,"variable",(()=>ix)),e(Df,"where",(()=>Lm)),e(Df,"whereAsync",(()=>ox)),e(Df,"zeros",(()=>Pf)),e(Df,"zerosLike",(()=>Bf)),e(Df,"op",(()=>Ju)),e(Df,"OP_SCOPE_SUFFIX",(()=>"__op")),e(Df,"fused",(()=>qf));const _f=Ju({concat_:function(e,t=0){Pa(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Xu(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return th(n[0]);const r=n,s={axis:t};return Lu.runKernel("Concat",r,s)}});const Of=Ju({imag_:function(e){const t={input:Ku(e,"input","imag")};return Lu.runKernel("Imag",t)}});const Mf=Ju({real_:function(e){const t={input:Ku(e,"input","real")};return Lu.runKernel("Real",t)}});const Lf=Ju({slice_:function(e,t,n){const r=Ku(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Lu.runKernel("Slice",s,a)}});const zf=Ju({split_:function(e,t,n=0){const r={x:Ku(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Lu.runKernel("SplitV",r,s)}});function Pf(e,t="float32"){if("complex64"===t){const t=Pf(e,"float32"),n=Pf(e,"float32");return Yu(t,n)}const n=xi(Ua(e),t);return Lu.makeTensor(n,e,t)}const Bf=Ju({zerosLike_:function(e){const t={x:Ku(e,"x","zerosLike")};return Lu.runKernel("ZerosLike",t)}});const Vf=Ju({fft_:function(e){Pa("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Lu.runKernel("FFT",t)}});const Wf=Ju({rfft_:function(e,t){Pa("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Lf(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=_f([e,Pf(r)],e.shape.length-1),n=t}else s=e;const a=Bf(s),i=Hp(Yu(s,a),[r,n]),o=Vf(i),u=Math.floor(n/2)+1,l=Mf(o),c=Of(o),h=zf(l,[u,n-u],l.shape.length-1),p=zf(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,Hp(Yu(h[0],p[0]),d)}});const Uf=Ju({ifft_:function(e){Pa("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Lu.runKernel("IFFT",t)}});const Gf=Ju({reverse_:function(e,t){const n={x:Ku(e,"x","reverse")},r={dims:t};return Lu.runKernel("Reverse",n,r)}});function jf(e,t){if((ii(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ii(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qu(e,[],[],t)}const Hf=Ju({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Hp(e,[n,t]);r=Uf(s)}else{const s=[n,2*(t-1)],a=Hp(Mf(e),[n,t]),i=Hp(Of(e),[n,t]),o=Gf(Lf(a,[0,1],[n,t-2]),1),u=Wp(Gf(Lf(i,[0,1],[n,t-2]),1),jf(-1)),l=_f([a,o],1),c=_f([i,u],1),h=Hp(Yu(l,c),[s[0],s[1]]);r=Uf(h)}if(r=Mf(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Hp(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});var qf={};e(qf,"conv2d",(()=>Qf)),e(qf,"depthwiseConv2d",(()=>nm)),e(qf,"matMul",(()=>sm));const Kf=Ju({add_:function(e,t){let n=Ku(e,"a","add"),r=Ku(t,"b","add");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Add",s)}});const Xf=Ju({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ku(e,"x","conv2d","float32"),u=Ku(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Pa(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Pa(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),zp("conv2d",r,i);const h="NHWC"===s?l.shape[3]:l.shape[1];Pa(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),Pa(Mp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Lu.runKernel("Conv2D",p,d);return c?Hp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Jf=Ju({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Hp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Pa(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Pa(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),Pa(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];Pa(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Pa(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),zp("conv2dDerFilter",s,i);const h={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Lu.runKernel("Conv2DBackpropFilter",h,p)}});const Yf=Ju({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){Pa(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Pa(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Pa(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),Pa(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];Pa(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Pa(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),zp("conv2dDerInput",s,i);const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Lu.runKernel("Conv2DBackpropInput",p,d);return l?Hp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Qf=Ju({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Zp(Lu.state.gradientDepth,u)){Pa("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Xf(e,t,n,r,s,a,i);return null!=o&&(h=Kf(h,o)),Qp(h,u,l,c)}const h=Ku(e,"x","conv2d","float32"),p=Ku(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Hp(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Pa(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Pa(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),zp("fused conv2d",r,i);const m="NHWC"===s?d.shape[3]:d.shape[1];Pa(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),Pa(Mp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=Ep(d.shape,p.shape,n,a,r,i);let y,b;if(null!=o&&(y=Ku(o,"bias","fused conv2d"),[y]=Eu(y,h),"NHWC"===s?Ch(g.outShape,y.shape):(Pa(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),Pa(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(Pa(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Pa(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Ch(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=Ku(l,"prelu weights","fused conv2d")}const x=(e,t)=>{Pa("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,l,c]=t,h=Jp(e,l,u);Pa(Op(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Yf(o.shape,h,i,n,r),Jf(o,h,i.shape,n,r)];if(null!=c){const e=Yp(c,h);p.push(e)}return p},v={x:d,filter:p,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Ff(((e,t,n)=>{let r=Lu.runKernel("FusedConv2D",v,w);return n([t,e,r]),f&&(r=Hp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,p)}{const e=Ff(((e,t,n,r)=>{let s=Lu.runKernel("FusedConv2D",v,w);return r([t,e,s,n]),f&&(s=Hp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(d,p,y)}}});const Zf=Ju({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ku(e,"x","depthwiseConv2d","float32"),u=Ku(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Pa(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Pa(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];Pa(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),zp("depthwiseConv2d",r,i);const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Lu.runKernel("DepthwiseConv2dNative",p,d);return c?Hp(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const em=Ju({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Hp(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Lu.runKernel("DepthwiseConv2dNativeBackpropFilter",l,c)}});const tm=Ju({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Lu.runKernel("DepthwiseConv2dNativeBackpropInput",l,c);return u?Hp(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const nm=Ju({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Zp(Lu.state.gradientDepth,u)){let h=Zf(e,t,n,r,s,a,i);return null!=o&&(h=Kf(h,o)),Qp(h,u,l,c)}const h=Ku(e,"x","depthwiseConv2d","float32"),p=Ku(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Hp(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Pa(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Pa(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),Pa(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),Pa(Mp(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),zp("fused depthwiseConv2d",r,i);const m=Ep(d.shape,p.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Ku(o,"bias","fused conv2d"),[g]=Eu(g,h),Ch(m.outShape,g.shape)),null!=l&&(y=Ku(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Pa(Op(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=t,h=Jp(e,l,u),p=tm(o.shape,h,s,n,r,a,i),d=em(o,h,s.shape,n,r,a,i);if(null!=c){return[p,d,Yp(g,h)]}return[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Ff(((e,t,n)=>{let r=Lu.runKernel("FusedDepthwiseConv2D",x,v);return n([t,e,r]),f&&(r=Hp(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=Ff(((e,t,n,r)=>{let s=Lu.runKernel("FusedDepthwiseConv2D",x,v);return r([t,e,s,n]),f&&(s=Hp(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}});const rm=Ju({matMul_:function(e,t,n=!1,r=!1){let s=Ku(e,"a","matMul"),a=Ku(t,"b","matMul");[s,a]=Eu(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Lu.runKernel("BatchMatMul",i,o)}});const sm=Ju({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Zp(Lu.state.gradientDepth,a)){let u=rm(e,t,n,r);return null!=s&&(u=Kf(u,s)),Qp(u,a,i,o)}let u=Ku(e,"a","fused matMul"),l=Ku(t,"b","fused matMul");[u,l]=Eu(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=Ua(f),y=Ua(m);Pa(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Ch(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,d]),x=Hp(u,n?[g,c,p]:[g,p,c]),v=Hp(l,r?[y,d,h]:[y,h,d]);let w,k;null!=s&&(w=Ku(s,"bias","fused matMul"),[w]=Eu(w,u),Ch(b,w.shape)),null!=i&&(k=Ku(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Jp(Hp(e,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=rm(c,o,!1,!1),p=rm(c,i,!0,!1)):n&&!r?(h=rm(o,c,!1,!0),p=rm(i,c,!1,!1)):(h=rm(o,c,!0,!0),p=rm(c,i,!0,!0)):(h=rm(c,o,!1,!0),p=rm(i,c,!0,!1)),null!=s){return[h,p,Yp(l,c)]}return[h,p]},S={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Ff(((e,t,n)=>{const r=Lu.runKernel("_FusedMatMul",S,N);return n([e,t,r]),{value:Hp(r,b),gradFunc:I}}));return e(x,v)}{const e=Ff(((e,t,n,r)=>{const s=Lu.runKernel("_FusedMatMul",S,N);return r([e,t,s,n]),{value:Hp(s,b),gradFunc:I}}));return e(x,v,w)}}});var am={};function im(e,t){Va(e);const n=ju(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qu(e,null,n,t)}function om(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function um(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return im(s,"float32")}e(am,"enclosingPowerOfTwo",(()=>om)),e(am,"cosineWindow",(()=>um));const lm=Ju({hammingWindow_:function(e){return um(e,.54,.46)}});const cm=Ju({hannWindow_:function(e){return um(e,.5,.5)}});function hm(e,t,n){const r={shape:e,value:t,dtype:n};return Lu.runKernel("Fill",{},r)}function pm(e,t,n){if(Va(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ju(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qu(e,t,r,n)}const dm=Ju({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Lf(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=_f([Lf(e,a,t-r),hm([r],s)]);i.push(o),a+=n}return 0===i.length?pm([],[0,t]):Hp(_f(i),[i.length,t])}});const fm=Ju({stft_:function(e,t,n,r,s=cm){null==r&&(r=om(t));const a=dm(e,t,n),i=Wp(a,s(t));return Wf(i,r)}});const mm=Ju({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ku(e,"image","cropAndResize"),o=Ku(t,"boxes","cropAndResize","float32"),u=Ku(n,"boxInd","cropAndResize","int32"),l=o.shape[0];Pa(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Pa(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),Pa(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),Pa(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Pa(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Pa("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return Lu.runKernel("CropAndResize",c,h)}});const gm=Ju({flipLeftRight_:function(e){const t=Ku(e,"image","flipLeftRight","float32");Pa(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Lu.runKernel("FlipLeftRight",n,{})}});const ym=Ju({tile_:function(e,t){const n=Ku(e,"x","tile","string_or_numeric");Pa(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Lu.runKernel("Tile",r,s)}});const bm=Ju({grayscaleToRGB_:function(e){const t=Ku(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Pa(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Pa(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,ym(t,s)}});const xm=Ju({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ku(e,"image","rotateWithOffset","float32");Pa(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Lu.runKernel("RotateWithOffset",a,i)}});function vm(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),Pa(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Pa(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Pa(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Pa(1===t.rank,(()=>"scores must be a 1D tensor")),Pa(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Pa(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const wm=Ju({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ku(e,"boxes","nonMaxSuppression","float32"),i=Ku(t,"scores","nonMaxSuppression","float32"),o=vm(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Lu.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},u)}});const km=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ku(e,"boxes","nonMaxSuppressionAsync"),i=Ku(t,"scores","nonMaxSuppressionAsync"),o=vm(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=yf(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),im(h,"int32")};const Im=Ju({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ku(e,"boxes","nonMaxSuppression"),o=Ku(t,"scores","nonMaxSuppression"),u=vm(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Lu.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Sm=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ku(e,"boxes","nonMaxSuppressionAsync"),o=Ku(t,"scores","nonMaxSuppressionAsync"),u=vm(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=xf(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:im(p,"int32"),selectedScores:im(d)}};const Nm=Ju({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ku(e,"boxes","nonMaxSuppression"),o=Ku(t,"scores","nonMaxSuppression"),u=vm(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Lu.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Tm=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ku(e,"boxes","nonMaxSuppressionAsync"),o=Ku(t,"scores","nonMaxSuppressionAsync"),u=vm(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bf(p,d,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:im(f,"int32"),validOutputs:jf(m,"int32")}};const Cm=Ju({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ku(e,"images","resizeBilinear");Pa(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Pa(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Pa(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Hp(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Lu.runKernel("ResizeBilinear",o,u);return i?Hp(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Em=Ju({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ku(e,"images","resizeNearestNeighbor");Pa(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Pa(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Pa("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Pa(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Hp(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Lu.runKernel("ResizeNearestNeighbor",o,u);return i?Hp(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const $m=Ju({bincount_:function(e,t,n){const r=Ku(e,"x","bincount"),s=Ku(t,"weights","bincount");Pa("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Pa(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Pa(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Lu.runKernel("Bincount",a,i)}});const Am=Ju({lessEqual_:function(e,t){let n=Ku(e,"a","lessEqual","string_or_numeric"),r=Ku(t,"b","lessEqual","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("LessEqual",s)}});const Rm=Ju({greater_:function(e,t){let n=Ku(e,"a","greater","string_or_numeric"),r=Ku(t,"b","greater","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("Greater",s)}});const Fm=Ju({floorDiv_:function(e,t){let n=Ku(e,"a","floorDiv"),r=Ku(t,"b","floorDiv");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("FloorDiv",s)}});const Dm=Ju({div_:function(e,t){let n=Ku(e,"a","div"),r=Ku(t,"b","div");if([n,r]=Eu(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Fm(n,r);const s={a:n,b:r};return Lu.runKernel("RealDiv",s,{})}});const _m=Ju({sub_:function(e,t){let n=Ku(e,"a","sub"),r=Ku(t,"b","sub");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Sub",s)}});const Om=Ju({round_:function(e){const t={x:Ku(e,"x","round")};return Lu.runKernel("Round",t)}});const Mm=Ju({broadcastTo_:function(e,t){let n=Ku(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Hp(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return th(n);const i={x:n},o={reps:a};return Lu.runKernel("Tile",i,o)}});const Lm=Ju({where_:function(e,t,n){const r=Ku(t,"a","where"),s=Ku(n,"b","where"),a=Ku(e,"condition","where","bool"),i=Ch(Ch(a.shape,r.shape),s.shape),o={condition:Mm(a,i),t:Mm(r,i),e:Mm(s,i)};return Lu.runKernel("Select",o)}});function zm(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Lu.runKernel("Range",{},s)}const Pm=Ju({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ku(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=Wp(im([r]),255);if(Pa(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),Pa(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),Pa("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),Pa("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,u]=zf(s,[1,1,1],-1);const e=Wp(i,.2989),t=Wp(o,.587),n=Wp(u,.114);l=Kf(Kf(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,s,a,i,o,u=im([-1]),l=im([0]),c=im([0]);for(let h=0;h<e.size-1;h++){n=Lf(e,0,h+1),r=Lf(e,h+1),i=Dm(Xp(n),t),o=Dm(Xp(r),t);const p=Xp(Wp(n,zm(0,n.size)));s=Dm(p,Xp(n));const d=hm(r.shape,n.size),f=Kf(zm(0,r.size),d),m=Wp(r,f);a=Dm(Xp(m),Xp(r));const g=_m(s,a),y=_m(s,a),b=Wp(i,o);c=Wp(Wp(b,g),y);const x=Rm(c,l);l=Lm(x,c,l),u=Lm(x,im([h]),u)}return u}($m(eh(Om(l),"int32"),Zu([]),256),a)}const h=n?Am(l,c):Rm(l,c);return eh(Wp(h,255),"int32")}});const Bm=Ju({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ku(e,"image","transform","float32"),o=Ku(t,"transforms","transform","float32");Pa(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Pa(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Pa(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Lu.runKernel("Transform",u,l)}});const Vm=Ju({greaterEqual_:function(e,t){let n=Ku(e,"a","greaterEqual","string_or_numeric"),r=Ku(t,"b","greaterEqual","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("GreaterEqual",s)}});const Wm=Ju({logicalAnd_:function(e,t){const n=Ku(e,"a","logicalAnd","bool"),r=Ku(t,"b","logicalAnd","bool");Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("LogicalAnd",s)}});const Um=Ju({stack_:function(e,t=0){const n=Xu(e,"tensors","stack","string_or_numeric");Pa(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Pa(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Lu.runKernel("Pack",r,s)}});const Gm=Ju({unstack_:function(e,t=0){const n=Ku(e,"x","unstack","string_or_numeric");Pa(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Lu.runKernel("Unpack",r,s)}});const jm=Ju({bandPart_:function(e,t,n){Pa(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Pa(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ku(e,"a","bandPart");Pa(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Hp(zm(0,a,1,"int32"),[-1,1]),u=zm(0,i,1,"int32"),l=_m(o,u),c=Wm(Am(l,jf(+t,"int32")),Vm(l,jf(-n,"int32"))),h=Pf([a,i],r.dtype);return Hp(Um(Gm(Hp(r,[-1,a,i])).map((e=>Lm(c,e,h)))),s)}});var Hm={};e(Hm,"norm",(()=>eg));const qm=Ju({abs_:function(e){const t=Ku(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Lu.runKernel("ComplexAbs",e)}{const e={x:t};return Lu.runKernel("Abs",e)}}});const Km=Ju({max_:function(e,t=null,n=!1){const r={x:Ku(e,"x","max")},s={reductionIndices:t,keepDims:n};return Lu.runKernel("Max",r,s)}});const Xm=Ju({min_:function(e,t=null,n=!1){const r={x:Ku(e,"x","min")},s={axis:t,keepDims:n};return Lu.runKernel("Min",r,s)}});const Jm=Ju({pow_:function(e,t){let n=Ku(e,"base","pow"),r=Ku(t,"exp","pow");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Pow",s)}});const Ym=Ju({sqrt_:function(e){const t={x:Ku(e,"x","sqrt","float32")};return Lu.runKernel("Sqrt",t)}});const Qm=Ju({square_:function(e){const t=Ku(e,"x","square");return Lu.runKernel("Square",{x:t},{})}});function Zm(e,t,n=null){if(0===e.rank)return qm(e);if(1!==e.rank&&null===n)return Zm(Hp(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Xp(qm(e),n);if(t===1/0)return Km(qm(e),n);if(t===-1/0)return Xm(qm(e),n);if("euclidean"===t||2===t)return Ym(Xp(Jm(qm(e),jf(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Km(Xp(qm(e),n[0]),n[1]-1);if(t===1/0)return Km(Xp(qm(e),n[1]),n[0]);if(t===-1/0)return Xm(Xp(qm(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ym(Xp(Qm(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const eg=Ju({norm_:function(e,t="euclidean",n=null,r=!1){const s=Zm(e=Ku(e,"x","norm"),t,n);let a=s.shape;if(r){const t=Za(n,e.shape);a=gp(s.shape,t)}return Hp(s,a)}});const tg=Ju({squeeze_:function(e,t){const n=Ku(e,"x","squeeze","string_or_numeric");return Hp(n,ei(n.shape,t).newShape)}});const ng=Ju({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Pa(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Pa(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=zf(e,e.shape[0],0).map((e=>tg(e,[0])));Pa(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Lu.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Wp(Xp(Wp(n[r],e)),n[r]);e=_m(e,t)}return Dm(e,eg(e,"euclidean"))})));return t?Um(n,0):n}});const rg=Ju({expandDims_:function(e,t=0){const n=Ku(e,"x","expandDims","string_or_numeric");Pa(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Lu.runKernel("ExpandDims",r,s)}});const sg=Ju({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Zc([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Hp(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ym(rg(i,0),[n[0],1,1]);if(2===n.length)return ym(rg(rg(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ym(rg(rg(rg(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const ag=Ju({neg_:function(e){const t={x:Ku(e,"x","neg")};return Lu.runKernel("Neg",t)}});var ig={};e(ig,"transpose",(()=>og));const og=Ju({transpose_:function(e,t,n){const r=Ku(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Pa(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Pa(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Cf((()=>{let e=Mf(r),t=Of(r);return e=Lu.runKernel("Transpose",{x:e},a),t=Lu.runKernel("Transpose",{x:t},a),n&&(t=ag(t)),Yu(e,t)})):Lu.runKernel("Transpose",s,a)}});function ug(e,t=!1){return Lu.tidy((()=>{Pa(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=sg(n),a=th(e);const i=pm([[1]],[1,1]);let o=th(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=Lu.tidy((()=>{const t=Lf(a,[e,e],[n-e,1]),u=eg(t),l=Lf(a,[e,e],[1,1]),c=Lm(Rm(l,0),pm([[-1]]),pm([[1]])),h=_m(l,Wp(c,u)),p=Dm(t,h);o=1===p.shape[0]?th(i):_f([i,Lf(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=ag(Dm(rm(c,h),u)),f=Lf(a,[e,0],[n-e,r]),m=Wp(d,o),g=og(o);if(0===e)a=_m(f,rm(m,rm(g,f)));else{const t=_m(f,rm(m,rm(g,f)));a=_f([Lf(a,[0,0],[e,r]),t],0)}const y=og(m),b=Lf(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=_m(b,rm(rm(b,o),y));else{const t=_m(b,rm(rm(b,o),y));s=_f([Lf(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Ef([t,u,l])}return!t&&n>r&&(s=Lf(s,[0,0],[n,r]),a=Lf(a,[0,0],[r,r])),[s,a]}))}const lg=Ju({qr_:function(e,t=!1){if(Pa(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ug(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Gm(Hp(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=ug(e,t);s.push(n),a.push(r)}));return[Hp(Um(s,0),e.shape),Hp(Um(a,0),e.shape)]}}});var cg,hg;(hg=cg||(cg={}))[hg.NONE=0]="NONE",hg[hg.MEAN=1]="MEAN",hg[hg.SUM=2]="SUM",hg[hg.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const pg=Ju({mean_:function(e,t=null,n=!1){const r={x:Ku(e,"x","mean")},s={axis:t,keepDims:n};return Lu.runKernel("Mean",r,s)}});const dg=Ju({notEqual_:function(e,t){let n=Ku(e,"a","notEqual","string_or_numeric"),r=Ku(t,"b","notEqual","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("NotEqual",s)}});function fg(e,t="float32"){if("complex64"===t){const t=fg(e,"float32"),n=Pf(e,"float32");return Yu(t,n)}const n=bi(Ua(e),t);return Lu.makeTensor(n,e,t)}const mg=Ju({computeWeightedLoss_:function(e,t,n=cg.SUM_BY_NONZERO_WEIGHTS){const r=Ku(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ku(t,"weights","computeWeightedLoss"));const a=null==s?r:Wp(r,s);if(n===cg.NONE)return a;if(n===cg.SUM)return Xp(a);if(n===cg.MEAN){if(null==s)return pg(a);{const e=r.size/s.size,t=Dm(Xp(a),Xp(s));return e>1?Dm(t,jf(e)):t}}if(n===cg.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Dm(Xp(a),jf(r.size));{const e=Wp(s,fg(r.shape)),t=eh(Xp(dg(e,jf(0))),"float32");return Dm(Xp(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const gg=Ju({absoluteDifference_:function(e,t,n,r=cg.SUM_BY_NONZERO_WEIGHTS){const s=Ku(e,"labels","absoluteDifference"),a=Ku(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ku(n,"weights","absoluteDifference")),Ba(s.shape,a.shape,"Error in absoluteDifference: ");const o=qm(_m(s,a));return mg(o,i,r)}});const yg=Ju({cosineDistance_:function(e,t,n,r,s=cg.SUM_BY_NONZERO_WEIGHTS){const a=Ku(e,"labels","cosineDistance"),i=Ku(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ku(r,"weights","cosineDistance")),Ba(a.shape,i.shape,"Error in cosineDistance: ");const u=jf(1),l=_m(u,Xp(Wp(a,i),n,!0));return mg(l,o,s)}});const bg=Ju({hingeLoss_:function(e,t,n,r=cg.SUM_BY_NONZERO_WEIGHTS){let s=Ku(e,"labels","hingeLoss");const a=Ku(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ku(n,"weights","hingeLoss")),Ba(s.shape,a.shape,"Error in hingeLoss: ");const o=jf(1);s=_m(Wp(jf(2),s),o);const u=Gp(_m(o,Wp(s,a)));return mg(u,i,r)}});const xg=Ju({minimum_:function(e,t){let n=Ku(e,"a","minimum"),r=Ku(t,"b","minimum");[n,r]=Eu(n,r),"bool"===n.dtype&&(n=eh(n,"int32"),r=eh(r,"int32")),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("Minimum",s)}});const vg=Ju({huberLoss_:function(e,t,n,r=1,s=cg.SUM_BY_NONZERO_WEIGHTS){const a=Ku(e,"labels","huberLoss"),i=Ku(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ku(n,"weights","huberLoss")),Ba(a.shape,i.shape,"Error in huberLoss: ");const u=jf(r),l=qm(_m(i,a)),c=xg(l,u),h=_m(l,c),p=Kf(Wp(jf(.5),Qm(c)),Wp(u,h));return mg(p,o,s)}});const wg=Ju({log_:function(e){const t={x:Ku(e,"x","log","float32")};return Lu.runKernel("Log",t)}});const kg=Ju({logLoss_:function(e,t,n,r=1e-7,s=cg.SUM_BY_NONZERO_WEIGHTS){const a=Ku(e,"labels","logLoss"),i=Ku(t,"predictions","logLoss");let o=null;null!=n&&(o=Ku(n,"weights","logLoss")),Ba(a.shape,i.shape,"Error in logLoss: ");const u=jf(1),l=jf(r),c=ag(Wp(a,wg(Kf(i,l)))),h=Wp(_m(u,a),wg(Kf(_m(u,i),l))),p=_m(c,h);return mg(p,o,s)}});const Ig=Ju({squaredDifference_:function(e,t){let n=Ku(e,"a","squaredDifference"),r=Ku(t,"b","squaredDifference");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("SquaredDifference",s,{})}});const Sg=Ju({meanSquaredError_:function(e,t,n,r=cg.SUM_BY_NONZERO_WEIGHTS){const s=Ku(e,"labels","meanSquaredError"),a=Ku(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ku(n,"weights","meanSquaredError")),Ba(s.shape,a.shape,"Error in meanSquaredError: ");const o=Ig(s,a);return mg(o,i,r)}});const Ng=Ju({exp_:function(e){const t={x:Ku(e,"x","exp")};return Lu.runKernel("Exp",t)}});const Tg=Ju({log1p_:function(e){const t={x:Ku(e,"x","log1p")};return Lu.runKernel("Log1p",t)}});const Cg=Ju({sigmoidCrossEntropy_:function(e,t,n,r=0,s=cg.SUM_BY_NONZERO_WEIGHTS){let a=Ku(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ku(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ku(n,"weights","sigmoidCrossEntropy")),Ba(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=jf(r),t=jf(1),n=jf(.5);a=Kf(Wp(a,_m(t,e)),Wp(n,e))}const u=function(e,t){const n=Ku(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ku(t,"logits","sigmoidCrossEntropyWithLogits");Ba(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Gp(r),a=Wp(r,n),i=Tg(Ng(ag(qm(r))));return Kf(_m(s,a),i)}(a,i);return mg(u,o,s)}});const Eg=Ju({logSumExp_:function(e,t=null,n=!1){const r=Ku(e,"x","logSumExp"),s=Za(t,r.shape),a=Km(r,s,!0),i=_m(r,a),o=Ng(i),u=Xp(o,s),l=wg(u),c=Kf(Hp(a,l.shape),l);if(n){const e=gp(c.shape,s);return Hp(c,e)}return c}});const $g=Ju({softmaxCrossEntropy_:function(e,t,n,r=0,s=cg.SUM_BY_NONZERO_WEIGHTS){let a=Ku(e,"onehotLabels","softmaxCrossEntropy");const i=Ku(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ku(n,"weights","softmaxCrossEntropy")),Ba(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=jf(r),t=jf(1),n=jf(a.shape[1]);a=Kf(Wp(a,_m(t,e)),Dm(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Ff(((e,t,r)=>{const s=Eg(t,[n],!0),a=_m(eh(t,"float32"),s);r([e,a]);const i=ag(Wp(a,e));return{value:Xp(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=gp(e.shape,[n]);return[Wp(Hp(e,a),_m(eh(r,"float32"),Ng(s))),Wp(Hp(e,a),_m(Ng(s),eh(r,"float32")))]}}}));return r(e,t)}(a,i);return mg(u,o,s)}});const Ag=Ju({sparseFillEmptyRows_:function(e,t,n,r){const s=Ku(e,"indices","sparseFillEmptyRows","int32"),a=Ku(t,"values","sparseFillEmptyRows"),i=Ku(n,"denseShape","sparseFillEmptyRows","int32"),o=Ku(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:s,values:a,denseShape:i,defaultValue:o},l=Lu.runKernel("SparseFillEmptyRows",u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const Rg=Ju({sparseReshape_:function(e,t,n){const r=Ku(e,"inputIndices","sparseReshape","int32"),s=Ku(t,"inputShape","sparseReshape","int32"),a=Ku(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Lu.runKernel("SparseReshape",i);return{outputIndices:o[0],outputShape:o[1]}}});const Fg=Ju({sparseSegmentMean_:function(e,t,n){const r=Ku(e,"data","sparseSegmentMean"),s=Ku(t,"indices","sparseSegmentMean","int32"),a=Ku(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Lu.runKernel("SparseSegmentMean",i)}});const Dg=Ju({sparseSegmentSum_:function(e,t,n){const r=Ku(e,"data","sparseSegmentSum"),s=Ku(t,"indices","sparseSegmentSum","int32"),a=Ku(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Lu.runKernel("SparseSegmentSum",i)}});const _g=Ju({stringNGrams_:function(e,t,n,r,s,a,i,o){const u=Ku(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ku(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},p=Lu.runKernel("StringNGrams",h,c);return{nGrams:p[0],nGramsSplits:p[1]}}});const Og=Ju({stringSplit_:function(e,t,n=!0){const r=Ku(e,"input","stringSplit","string"),s=Ku(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=Lu.runKernel("StringSplit",i,a);return{indices:o[0],values:o[1],shape:o[2]}}});const Mg=Ju({stringToHashBucketFast_:function(e,t){const n=Ku(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Lu.runKernel("StringToHashBucketFast",s,r)}});const Lg=Ju({acos_:function(e){const t={x:Ku(e,"x","acos")};return Lu.runKernel("Acos",t)}});const zg=Ju({acosh_:function(e){const t={x:Ku(e,"x","acosh")};return Lu.runKernel("Acosh",t)}});const Pg=Ju({addN_:function(e){Pa(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Pa(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ku(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ja(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Lu.runKernel("AddN",r)}});const Bg=Ju({all_:function(e,t=null,n=!1){const r={x:Ku(e,"x","all","bool")},s={axis:t,keepDims:n};return Lu.runKernel("All",r,s)}});const Vg=Ju({any_:function(e,t=null,n=!1){const r={x:Ku(e,"x","any","bool")},s={axis:t,keepDims:n};return Lu.runKernel("Any",r,s)}});const Wg=Ju({argMax_:function(e,t=0){const n={x:Ku(e,"x","argMax")},r={axis:t};return Lu.runKernel("ArgMax",n,r)}});const Ug=Ju({argMin_:function(e,t=0){const n={x:Ku(e,"x","argMin")},r={axis:t};return Lu.runKernel("ArgMin",n,r)}});const Gg=Ju({asin_:function(e){const t={x:Ku(e,"x","asin")};return Lu.runKernel("Asin",t)}});const jg=Ju({asinh_:function(e){const t={x:Ku(e,"x","asinh")};return Lu.runKernel("Asinh",t)}});const Hg=Ju({atan_:function(e){const t={x:Ku(e,"x","atan")};return Lu.runKernel("Atan",t)}});const qg=Ju({atan2_:function(e,t){let n=Ku(e,"a","atan2"),r=Ku(t,"b","atan2");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Atan2",s)}});const Kg=Ju({atanh_:function(e){const t={x:Ku(e,"x","atanh")};return Lu.runKernel("Atanh",t)}});const Xg=Ju({avgPool_:function(e,t,n,r,s){const a=Ku(e,"x","avgPool","float32");Pa(Mp(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Hp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Pa(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),zp("avgPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Lu.runKernel("AvgPool",u,l);return c=eh(c,a.dtype),o?Hp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Jg=Ju({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ku(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Pa(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Pa("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),zp("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Lu.runKernel("AvgPool3D",l,c);return h=eh(h,o.dtype),u?Hp(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Yg=Ju({tanh_:function(e){const t={x:Ku(e,"x","tanh","float32")};return Lu.runKernel("Tanh",t)}});const Qg=Ju({basicLSTMCell_:function(e,t,n,r,s,a){const i=Ku(e,"forgetBias","basicLSTMCell"),o=Ku(t,"lstmKernel","basicLSTMCell"),u=Ku(n,"lstmBias","basicLSTMCell"),l=Ku(r,"data","basicLSTMCell"),c=Ku(s,"c","basicLSTMCell"),h=Ku(a,"h","basicLSTMCell"),p=_f([l,h],1),d=rm(p,o),f=Kf(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Lf(f,[0,0],y),x=Lf(f,[0,g],y),v=Lf(f,[0,2*g],y),w=Lf(f,[0,3*g],y),k=Kf(Wp(qp(b),Yg(x)),Wp(c,qp(Kf(i,v))));return[k,Wp(Yg(k),qp(w))]}});const Zg=Ju({batchToSpaceND_:function(e,t,n){const r=Ku(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));Pa(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Pa(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Pa(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Lu.runKernel("BatchToSpaceND",a,i)}});function ey(e){let t;return t=0===e.rank||1===e.rank?Hp(e,[1,1,1,e.size]):2===e.rank?Hp(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Hp(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}const ty=Ju({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ku(e,"x","batchNorm"),o=Ku(t,"mean","batchNorm"),u=Ku(n,"variance","batchNorm");let l,c;null!=s&&(l=Ku(s,"scale","batchNorm")),null!=r&&(c=Ku(r,"offset","batchNorm")),Pa(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Pa(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Pa(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:ey(i),scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:a},d=Lu.runKernel("FusedBatchNorm",h,p);return Hp(d,i.shape)}});const ny=Ju({batchNorm2d_:function(e,t,n,r,s,a){const i=Ku(e,"x","batchNorm"),o=Ku(t,"mean","batchNorm"),u=Ku(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ku(s,"scale","batchNorm")),null!=r&&(c=Ku(r,"offset","batchNorm")),Pa(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),Pa(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Pa(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Pa(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&Pa(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ty(i,o,u,c,l,a)}});const ry=Ju({batchNorm3d_:function(e,t,n,r,s,a){const i=Ku(e,"x","batchNorm"),o=Ku(t,"mean","batchNorm"),u=Ku(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ku(s,"scale","batchNorm")),null!=r&&(c=Ku(r,"offset","batchNorm")),Pa(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),Pa(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Pa(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Pa(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&Pa(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ty(i,o,u,c,l,a)}});const sy=Ju({batchNorm4d_:function(e,t,n,r,s,a){const i=Ku(e,"x","batchNorm"),o=Ku(t,"mean","batchNorm"),u=Ku(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ku(s,"scale","batchNorm")),null!=r&&(c=Ku(r,"offset","batchNorm")),Pa(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),Pa(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Pa(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Pa(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&Pa(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ty(i,o,u,c,l,a)}});const ay=Ju({broadcastArgs_:function(e,t){const n=Ku(e,"s0","broadcastArgs","int32"),r=Ku(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Lu.runKernel("BroadcastArgs",s)}});const iy=Ju({ceil_:function(e){const t={x:Ku(e,"x","ceil","float32")};return Lu.runKernel("Ceil",t)}});const oy=Ju({clipByValue_:function(e,t,n){const r=Ku(e,"x","clipByValue");Pa(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Lu.runKernel("ClipByValue",s,a)}});const uy=Ju({concat1d_:function(e){return _f(e,0)}});const ly=Ju({concat2d_:function(e,t){return _f(e,t)}});const cy=Ju({concat3d_:function(e,t){return _f(e,t)}});const hy=Ju({concat4d_:function(e,t){return _f(e,t)}});const py=Ju({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ku(e,"x","conv1d"),u=Ku(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Hp(o,[1,o.shape[0],o.shape[1]])),Pa(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Pa(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),zp("conv1d",r,i),Pa(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Pa(Mp(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Pa("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Hp(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Hp(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Xf(p,h,[1,n],r,"NHWC",[1,a],i);return Hp(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});const dy=Ju({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ku(e,"x","conv2dTranspose"),o=Ku(t,"filter","conv2dTranspose");return Yf(n,i,o,r,s,"NHWC",a)}});const fy=Ju({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ku(e,"x","conv3d"),o=Ku(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Pa(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Pa(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Pa(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Pa(Mp(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Pa("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=Lu.runKernel("Conv3D",c,h);return l?Hp(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const my=Ju({conv3DBackpropInput_:function(e,t,n,r,s){Pa(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];Pa(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Pa(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Pa(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Pa(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Pa(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=Lu.runKernel("Conv3DBackpropInputV2",c,h);return o?Hp(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const gy=Ju({conv3dTranspose_:function(e,t,n,r,s){const a=Ku(e,"x","conv3dTranspose"),i=Ku(t,"filter","conv3dTranspose");return my(n,a,i,r,s)}});const yy=Ju({cos_:function(e){const t={x:Ku(e,"x","cos","float32")};return Lu.runKernel("Cos",t)}});const by=Ju({cosh_:function(e){const t={x:Ku(e,"x","cosh","float32")};return Lu.runKernel("Cosh",t)}});const xy=Ju({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ku(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Lu.runKernel("Cumprod",s,a)}});const vy=Ju({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ku(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Lu.runKernel("Cumsum",s,a)}});const wy=Ju({denseBincount_:function(e,t,n,r=!1){const s=Ku(e,"x","denseBincount"),a=Ku(t,"weights","denseBincount");Pa("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Pa(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Pa(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Pa(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return Lu.runKernel("DenseBincount",i,o)}});const ky=Ju({depthToSpace_:function(e,t,n="NHWC"){const r=Ku(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Pa(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Pa(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Pa(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Pa(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return Lu.runKernel("DepthToSpace",o,u)}});const Iy=Ju({diag_:function(e){const t={x:Ku(e,"x","diag")};return Lu.runKernel("Diag",t)}});const Sy=Ju({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ku(e,"x","dilation2d"),o=Ku(t,"filter","dilation2d");Pa(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Pa(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Pa("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,l=!1;3===i.rank&&(u=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},p=Lu.runKernel("Dilation2D",c,h);return l?Hp(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Ny=Ju({equal_:function(e,t){let n=Ku(e,"a","equal","string_or_numeric"),r=Ku(t,"b","equal","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("Equal",s)}});const Ty=Ju({divNoNan_:function(e,t){let n=Ku(e,"a","div"),r=Ku(t,"b","div");[n,r]=Eu(n,r);const s=Dm(n,r),a=Bf(s),i=Ny(r,a);return Lm(i,a,s)}});const Cy=Ju({dot_:function(e,t){const n=Ku(e,"t1","dot"),r=Ku(t,"t2","dot");Pa(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Pa(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Hp(n,[1,-1]),t=Hp(r,[-1,1]),s=rm(e,t);return Hp(s,[])}if(1===n.rank&&2===r.rank){const e=Hp(n,[1,-1]),t=Hp(r,[r.shape[0],r.shape[1]]),s=rm(e,t);return Hp(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Hp(r,[-1,1]),t=rm(n,e);return Hp(t,[t.size])}{const e=Hp(r,[r.shape[0],r.shape[1]]);return rm(n,e)}}});const Ey=Ju({einsum_:function(e,...t){const n=t.map(((e,t)=>Ku(e,`tensors${t}`,"einsum"))),r={equation:e};return Lu.runKernel("Einsum",n,r)}});const $y=Ju({erf_:function(e){let t=Ku(e,"x","erf");Pa("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=eh(t,"float32"));const n={x:t};return Lu.runKernel("Erf",n)}});const Ay=Ju({euclideanNorm_:function(e,t=null,n=!1){return eg(e,"euclidean",t,n)}});const Ry=Ju({expm1_:function(e){const t={x:Ku(e,"x","expm1")};return Lu.runKernel("Expm1",t)}});const Fy=Ju({floor_:function(e){const t={x:Ku(e,"x","floor","float32")};return Lu.runKernel("Floor",t)}});const Dy=Ju({gather_:function(e,t,n=0,r=0){const s={x:Ku(e,"x","gather"),indices:Ku(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Lu.runKernel("GatherV2",s,a)}});const _y=Ju({isFinite_:function(e){const t={x:Ku(e,"x","isFinite")};return Lu.runKernel("IsFinite",t)}});const Oy=Ju({isInf_:function(e){const t={x:Ku(e,"x","isInf")};return Lu.runKernel("IsInf",t)}});const My=Ju({isNaN_:function(e){const t={x:Ku(e,"x","isNaN")};return Lu.runKernel("IsNan",t)}});const Ly=Ju({less_:function(e,t){let n=Ku(e,"a","less","string_or_numeric"),r=Ku(t,"b","less","string_or_numeric");[n,r]=Eu(n,r),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("Less",s)}});function zy(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Lu.runKernel("LinSpace",{},r)}const Py=Ju({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ku(e,"x","localResponseNormalization");Pa(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Pa(Ha(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Hp(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Lu.runKernel("LRN",u,l);return o?Hp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const By=Ju({softplus_:function(e){const t={x:Ku(e,"x","softplus")};return Lu.runKernel("Softplus",t)}});const Vy=Ju({logSigmoid_:function(e){const t=Ku(e,"x","logSigmoid"),n=Ff((e=>({value:ag(By(ag(e))),gradFunc:t=>Wp(t,qp(ag(e)))})));return n(t)}});const Wy=Ju({logSoftmax_:function(e,t=-1){const n=Ku(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ff(((e,n)=>{const r=Km(e,t,!0),s=_m(e,r),a=_m(eh(s,"float32"),wg(Xp(Ng(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Ng(r);return _m(e,Wp(Xp(e,t,!0),s))}}}));return r(n)}});const Uy=Ju({logicalNot_:function(e){const t={x:Ku(e,"x","logicalNot","bool")};return Lu.runKernel("LogicalNot",t)}});const Gy=Ju({logicalOr_:function(e,t){const n=Ku(e,"a","logicalOr","bool"),r=Ku(t,"b","logicalOr","bool");Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("LogicalOr",s)}});const jy=Ju({logicalXor_:function(e,t){const n=Ku(e,"a","logicalXor","bool"),r=Ku(t,"b","logicalXor","bool");return Ch(n.shape,r.shape),Wm(Gy(e,t),Uy(Wm(e,t)))}});var Hy={};e(Hy,"searchSorted",(()=>qy));const qy=Ju({searchSorted_:function(e,t,n="left"){const r=Ku(e,"sortedSequence","searchSorted"),s=Ku(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=Hp(r,[-1,a]),u=Hp(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ua(u.shape)>=2147483648)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=2147483648)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const l={sortedSequence:o,values:u},c={side:n};return Lu.runKernel("SearchSorted",l,c)}});function Ky(e,t){return qy(e,t,"left")}const Xy=Ju({maxPool_:function(e,t,n,r,s){const a=Ku(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Hp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Pa(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Pa(Mp(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),zp("maxPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Lu.runKernel("MaxPool",u,l);return o?Hp(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Jy=Ju({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ku(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Pa(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Pa("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),zp("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Lu.runKernel("MaxPool3D",l,c);return u?Hp(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Yy=Ju({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Ku(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Lu.runKernel("MaxPoolWithArgmax",a,i);return{result:o[0],indexes:o[1]}}});const Qy=Ju({maximum_:function(e,t){let n=Ku(e,"a","maximum"),r=Ku(t,"b","maximum");[n,r]=Eu(n,r),"bool"===n.dtype&&(n=eh(n,"int32"),r=eh(r,"int32")),Ch(n.shape,r.shape);const s={a:n,b:r};return Lu.runKernel("Maximum",s)}});function Zy(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ku(e,"x","meshgrid",e instanceof hu?e.dtype:"float32");if(void 0===t)return[r];let s=Ku(t,"y","meshgrid",t instanceof hu?t.dtype:"float32");const a=Ua(r.shape),i=Ua(s.shape);return"xy"===n?(r=Hp(r,[1,-1]),s=Hp(s,[-1,1]),[rm(fg([i,1],r.dtype),r),rm(s,fg([1,a],s.dtype))]):(r=Hp(r,[-1,1]),s=Hp(s,[1,-1]),[rm(r,fg([1,i],r.dtype)),rm(fg([a,1],s.dtype),s)])}const eb=Ju({mirrorPad_:function(e,t,n){Pa("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ku(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Pa(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Pa(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pa(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Lu.runKernel("MirrorPad",i,a)}});const tb=Ju({mod_:function(e,t){let n=Ku(e,"a","mod"),r=Ku(t,"b","mod");[n,r]=Eu(n,r);const s={a:n,b:r};return Lu.runKernel("Mod",s)}});const nb=Ju({moments_:function(e,t=null,n=!1){const r=Za(t,(e=Ku(e,"x","moments")).shape),s=pg(e,r,n);let a=s.shape;n||(a=gp(s.shape,r));const i=Qm(_m(eh(e,"float32"),Hp(s,a)));return{mean:s,variance:pg(i,r,n)}}});const rb=Ju({multiRNNCell_:function(e,t,n,r){const s=Ku(t,"data","multiRNNCell"),a=Xu(n,"c","multiRNNCell"),i=Xu(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});const sb=Ju({multinomial_:function(e,t,n,r=!1){const s=Ku(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Hp(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=Lu.runKernel("Multinomial",o,u);return 1===i?Hp(l,[l.size]):l}});const ab=Ju({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ku(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return Lu.runKernel("OneHot",a,i)}});const ib=Ju({onesLike_:function(e){const t={x:Ku(e,"x","onesLike")};return Lu.runKernel("OnesLike",t)}});const ob=Ju({outerProduct_:function(e,t){const n=Ku(e,"v1","outerProduct"),r=Ku(t,"v2","outerProduct");Pa(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Hp(n,[-1,1]),a=Hp(r,[1,-1]);return rm(s,a)}});const ub=Ju({pad_:function(e,t,n=0){const r=Ku(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Lu.runKernel("PadV2",a,s)}});const lb=Ju({pad1d_:function(e,t,n=0){return Pa(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ub(e,[t],n)}});const cb=Ju({pad2d_:function(e,t,n=0){return Pa(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ub(e,t,n)}});const hb=Ju({pad3d_:function(e,t,n=0){return Pa(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ub(e,t,n)}});const pb=Ju({pad4d_:function(e,t,n=0){return Pa(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ub(e,t,n)}});const db=Ju({spaceToBatchND_:function(e,t,n){const r=Ku(e,"x","spaceToBatchND");Pa(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Pa(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Pa(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Lu.runKernel("SpaceToBatchND",s,a)}});const fb=Ju({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ku(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Pa(Mp(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Tp(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?u:db(u,h,f),b=("avg"===n?()=>Xg(y,t,a,g,i):()=>Xy(y,t,a,g,i))(),x=d?b:Zg(b,h,m);return l?Hp(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const mb=Ju({prod_:function(e,t=null,n=!1){let r=Ku(e,"x","prod");"bool"===r.dtype&&(r=eh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Lu.runKernel("Prod",s,a)}});const gb=Ju({raggedTensorToTensor_:function(e,t,n,r,s){const a=Ku(e,"shape","raggedTensorToTensor","int32"),i=Ku(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Ku(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>Ku(e,`tensors${t}`,"raggedTensorToTensor","int32")))},u={rowPartitionTypes:s};return Lu.runKernel("RaggedTensorToTensor",o,u)}});const yb=Ju({rand_:function(e,t,n){const r=Ua(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Lu.makeTensor(s,e,n)}});var bb={},xb=a("cmoHh"),vb=a("euRi5"),wb=a("hDsEw"),kb=a("3J2Zm"),Ib=a("6Px8M"),Sb=a("lDm0S"),Nb={};!function(e,t,n){var r,s=256,i=n.pow(s,6),o=n.pow(2,52),u=2*o,l=255;function c(a,l,c){var g=[],y=f(d((l=1==l?{entropy:!0}:l||{}).entropy?[a,m(t)]:null==a?function(){try{var n;return r&&(n=r.randomBytes)?n=n(s):(n=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(n)),m(n)}catch(n){var a=e.navigator,i=a&&a.plugins;return[+new Date,e,i,e.screen,m(t)]}}():a,3),g),b=new h(g),x=function(){for(var e=b.g(6),t=i,n=0;e<o;)e=(e+n)*s,t*=s,n=b.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,f(m(b.S),t),(l.pass||c||function(e,t,r,s){return s&&(s.S&&p(s,b),e.state=function(){return p(b,{})}),r?(n.random=e,t):e})(x,y,"global"in l?l.global:this==n,l.state)}function h(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=l&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=l&a+1],n=n*s+o[l&(o[a]=o[i=l&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function d(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(d(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function f(e,t){for(var n,r=e+"",s=0;s<r.length;)t[l&s]=l&(n^=19*t[l&s])+r.charCodeAt(s++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(f(n.random(),t),Nb){Nb=c;try{r=a("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return c})):n.seedrandom=c}("undefined"!=typeof self?self:Nb,[],Math),Nb.alea=xb,Nb.xor128=vb,Nb.xorwow=wb,Nb.xorshift7=kb,Nb.xor4096=Ib,Nb.tychei=Sb,bb=Nb;class Tb{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=bb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Cb{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=bb.alea(s.toString()),this.randn=new Tb(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Eb{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=bb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const $b=Ju({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Cb(t,n,r,s),i=Zc(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const Ab=Ju({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Tb(t,n,r,!1,s),i=Zc(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const Rb=Ju({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Ab(e,0,1,t,n)}});const Fb=Ju({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Zc(e,r),i=new Eb(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});const Db=Ju({reciprocal_:function(e){const t={x:Ku(e,"x","reciprocal")};return Lu.runKernel("Reciprocal",t)}});const _b=Ju({reverse1d_:function(e){const t=Ku(e,"x","reverse");return Pa(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Gf(t,0)}});const Ob=Ju({reverse2d_:function(e,t){const n=Ku(e,"x","reverse");return Pa(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Gf(n,t)}});const Mb=Ju({reverse3d_:function(e,t){const n=Ku(e,"x","reverse");return Pa(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Gf(n,t)}});const Lb=Ju({reverse4d_:function(e,t){const n=Ku(e,"x","reverse");return Pa(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Gf(n,t)}});const zb=Ju({rsqrt_:function(e){const t={x:Ku(e,"x","rsqrt","float32")};return Lu.runKernel("Rsqrt",t)}});const Pb=Ju({selu_:function(e){const t={x:Ku(e,"x","selu")};return Lu.runKernel("Selu",t)}});const Bb=Ju({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ku(e,"x","separableConv2d"),u=Ku(t,"depthwiseFilter","separableConv2d"),l=Ku(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Pa(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Pa(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Pa(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Pa(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Pa(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];Pa(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Zf(c,u,r,s,i,a),m=Xf(f,l,1,"valid",i);return h?Hp(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Vb=async function(e,t){const n=Ku(e,"x","setdiff1d"),r=Ku(t,"y","setdiff1d");Pa(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Pa(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Pa(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new ou([o],n.dtype),l=new ou([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};const Wb=Ju({sign_:function(e){const t={x:Ku(e,"x","sign")};return Lu.runKernel("Sign",t)}});const Ub=Ju({sin_:function(e){const t={x:Ku(e,"x","sin","float32")};return Lu.runKernel("Sin",t)}});const Gb=Ju({sinh_:function(e){const t={x:Ku(e,"x","sinh")};return Lu.runKernel("Sinh",t)}});const jb=Ju({slice1d_:function(e,t,n){const r=Ku(e,"x","slice1d");return Pa(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Lf(r,[t],[n])}});const Hb=Ju({slice2d_:function(e,t,n){const r=Ku(e,"x","slice2d");return Pa(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Lf(r,t,n)}});const qb=Ju({slice3d_:function(e,t,n){const r=Ku(e,"x","slice3d");return Pa(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Lf(r,t,n)}});const Kb=Ju({slice4d_:function(e,t,n){const r=Ku(e,"x","slice4d");return Pa(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Lf(r,t,n)}});const Xb=Ju({softmax_:function(e,t=-1){const n=Ku(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Lu.runKernel("Softmax",r,s)}});const Jb=Ju({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Ku(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Lu.runKernel("StridedSlice",l,c)}});const Yb=Ju({tan_:function(e){const t={x:Ku(e,"x","tan","float32")};return Lu.runKernel("Tan",t)}});function Qb(e,t,n){if(Va(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ju(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qu(e,t,r,n)}function Zb(e,t,n){if(Va(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ju(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qu(e,t,r,n)}function ex(e,t,n){if(Va(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ju(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Qu(e,t=t||r,r,n)}const tx=Ju({topk_:function(e,t=1,n=!0){const r=Ku(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=Lu.runKernel("TopK",a,i);return{values:o,indices:u}}});const nx=Ju({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Tb(t,n,r,!0,s),i=Zc(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const rx=Ju({unique_:function(e,t=0){const n=Ku(e,"x","unique","string_or_numeric");Pa(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Lu.runKernel("Unique",r,s);return{values:a,indices:i}}});const sx=Ju({unsortedSegmentSum_:function(e,t,n){const r=Ku(e,"x","unsortedSegmentSum"),s=Ku(t,"segmentIds","unsortedSegmentSum","int32");Pa(Ha(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Lu.runKernel("UnsortedSegmentSum",a,i)}});function ax(e,t){return qy(e,t,"right")}function ix(e,t=!0,n,r){return Lu.makeVariable(e,t,n,r)}const ox=async function(e){const t=Ku(e,"condition","whereAsync","bool"),n=await t.data(),r=Sf(t.shape,n);return e!==t&&t.dispose(),r};var ux={};e(ux,"booleanMaskAsync",(()=>lx));const lx=async function(e,t,n){const r=Ku(e,"tensor","boolMask"),s=Ku(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;Pa(i>0,(()=>"mask cannot be scalar")),Ba(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=Hp(r,l),h=Hp(s,[-1]),p=await ox(h),d=tg(p,[1]),f=Dy(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};var cx={};e(cx,"movingAverage",(()=>hx));const hx=Ju({movingAverage_:function(e,t,n,r,s=!0){const a=Ku(e,"v","movingAverage"),i=Ku(t,"x","movingAverage"),o=Ku(n,"decay","movingAverage");$u(a,i),Pa(ja(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=jf(1),l=_m(u,o);let c=Wp(_m(i,a),l);if(s){Pa(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ku(r,"step","movingAverage");c=Dm(c,_m(u,Jm(o,e)))}return Kf(a,c)}});var px={};e(px,"scatterND",(()=>dx));const dx=Ju({scatterND_:function(e,t,n){const r=Ku(e,"indices","scatterND","int32"),s=Ku(t,"updates","scatterND");xd(s,r,n);const a={indices:r,updates:s},i={shape:n};return Lu.runKernel("ScatterNd",a,i)}});var fx={};e(fx,"sparseToDense",(()=>mx));const mx=Ju({sparseToDense_:function(e,t,n,r=0){const s=Ku(e,"sparseIndices","sparseToDense","int32"),a=Ku(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ku(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return Lu.runKernel("SparseToDense",o,u)}});var gx={};e(gx,"gatherND",(()=>yx));const yx=Ju({gatherND_:function(e,t){const n=Ku(t,"indices","gatherND","int32"),r={params:Ku(e,"x","gatherND","string_or_numeric"),indices:n};return Lu.runKernel("GatherNd",r)}});var bx={};function xx(e,t){if(null==t)return e.shape.slice();if(ja(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}e(bx,"dropout",(()=>vx));const vx=Ju({dropout_:function(e,t,n,r){const s=Ku(e,"x","dropout");if(Pa("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Pa(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof hu?s.clone():s;const a=xx(s,n),i=1-t,o=Dm(Fy(Kf(Fb(a,0,1,"float32",r),i)),i);return Wp(s,o)}});var wx={};e(wx,"inTopKAsync",(()=>kx));const kx=async function(e,t,n=1){const r=Ku(e,"predictions","inTopK"),s=Ku(t,"targets","inTopK");Pa(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Pa(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),Ba(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Pa(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=ti("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Zu(c,s.shape,"bool")},Ix={fft:Vf,ifft:Uf,rfft:Wf,irfft:Hf},Sx={hammingWindow:lm,hannWindow:cm,frame:dm,stft:fm},Nx={flipLeftRight:gm,grayscaleToRGB:bm,resizeNearestNeighbor:Em,resizeBilinear:Cm,rotateWithOffset:xm,cropAndResize:mm,nonMaxSuppression:wm,nonMaxSuppressionAsync:km,nonMaxSuppressionWithScore:Im,nonMaxSuppressionWithScoreAsync:Sm,nonMaxSuppressionPadded:Nm,nonMaxSuppressionPaddedAsync:Tm,threshold:Pm,transform:Bm},Tx={bandPart:jm,gramSchmidt:ng,qr:lg},Cx={absoluteDifference:gg,computeWeightedLoss:mg,cosineDistance:yg,hingeLoss:bg,huberLoss:vg,logLoss:kg,meanSquaredError:Sg,sigmoidCrossEntropy:Cg,softmaxCrossEntropy:$g},Ex={sparseFillEmptyRows:Ag,sparseReshape:Rg,sparseSegmentMean:Fg,sparseSegmentSum:Dg},$x={stringNGrams:_g,stringSplit:Og,stringToHashBucketFast:Mg};n(Df,ux),n(Df,ig),n(Df,Hm),n(Df,cx),n(Df,px),n(Df,Hy),n(Df,fx),n(Df,gx),n(Df,bx),n(Df,am),n(Df,wx);class Ax extends tp{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Ef(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Rf(e,t)}dispose(){null!=this.iterations_&&Ef(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:jf(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ax,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Rx extends Ax{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Lu.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Lu.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Cf((()=>Bf(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Cf((()=>Bf(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Cf((()=>{const e=Kf(Wp(a,this.rho),Wp(Qm(s),1-this.rho)),t=Wp(Dm(Ym(Kf(i,this.epsilon)),Ym(Kf(a,this.epsilon))),s),n=Kf(Wp(i,this.rho),Wp(Qm(t),1-this.rho));a.assign(e),i.assign(n);const o=Kf(Wp(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ef(this.accumulatedGrads.map((e=>e.variable))),Ef(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Rx.className="Adadelta",rp(Rx);class Fx extends Ax{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Lu.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Cf((()=>hm(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Cf((()=>{const e=Kf(a,Qm(s));a.assign(e);const t=Kf(Wp(Dm(s,Ym(Kf(e,Lu.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ef(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Fx.className="Adagrad",rp(Fx);class Dx extends Ax{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Cf((()=>{this.accBeta1=jf(t).variable(),this.accBeta2=jf(n).variable()})),null==r&&(this.epsilon=Lu.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Cf((()=>{const n=_m(1,this.accBeta1),r=_m(1,this.accBeta2);t.forEach(((t,s)=>{const a=Lu.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Cf((()=>Bf(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Cf((()=>Bf(a).variable(false)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Kf(Wp(o,this.beta1),Wp(i,1-this.beta1)),c=Kf(Wp(u,this.beta2),Wp(Qm(i),1-this.beta2)),h=Dm(l,n),p=Dm(c,r);o.assign(l),u.assign(c);const d=Kf(Wp(Dm(h,Kf(Ym(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Wp(this.accBeta1,this.beta1)),this.accBeta2.assign(Wp(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ef(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ef(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Cf((()=>{this.accBeta1.assign(Jm(this.beta1,this.iterations_+1)),this.accBeta2.assign(Jm(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Dx.className="Adam",rp(Dx);class _x extends Ax{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Cf((()=>{this.iteration=jf(0).variable(),this.accBeta1=jf(t).variable()})),null==r&&(this.epsilon=Lu.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Cf((()=>{const n=_m(1,this.accBeta1),r=Dm(-this.learningRate,Kf(Wp(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Lu.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Bf(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Bf(a).variable(false)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Kf(Wp(o,this.beta1),Wp(i,1-this.beta1)),c=Wp(u,this.beta2),h=qm(i),p=Qy(c,h);o.assign(l),u.assign(p);const d=Kf(Wp(Dm(r,n),Dm(l,Kf(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Kf(this.iteration,1)),this.accBeta1.assign(Wp(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ef(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ef(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}_x.className="Adamax",rp(_x);class Ox extends Ax{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Lu.registeredVariables[t];Cf((()=>{const e=Kf(Wp(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=$f(jf(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ox.className="SGD",rp(Ox);class Mx extends Ox{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=jf(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Lu.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Cf((()=>Bf(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Cf((()=>{let e;const t=Kf(Wp(this.m,s),a);e=this.useNesterov?Kf(Wp(this.c,Kf(a,Wp(t,this.m))),r):Kf(Wp(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ef(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Mx.className="Momentum",rp(Mx);class Lx extends Ax{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Lu.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Lu.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Cf((()=>Bf(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Cf((()=>Bf(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Cf((()=>Bf(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Cf((()=>{const e=Kf(Wp(i,this.decay),Wp(Qm(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Kf(Wp(t,this.decay),Wp(a,1-this.decay)),u=Dm(Wp(a,this.learningRate),Ym(_m(e,Kf(Qm(s),this.epsilon)))),l=Kf(Wp(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=_m(r,l);r.assign(c)}else{const e=Kf(Wp(i,this.decay),Wp(Qm(a),1-this.decay)),t=Kf(Wp(o,this.momentum),Dm(Wp(a,this.learningRate),Ym(Kf(e,this.epsilon))));i.assign(e),o.assign(t);const n=_m(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ef(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ef(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ef(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Lx.className="RMSProp",rp(Lx);class zx{static sgd(e){return new Ox(e)}static momentum(e,t,n=!1){return new Mx(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Lx(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Dx(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Rx(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new _x(e,t,n,r,s)}static adagrad(e,t=.1){return new Fx(e,t)}}const Px={sgd:zx.sgd,momentum:zx.momentum,adadelta:zx.adadelta,adagrad:zx.adagrad,rmsprop:zx.rmsprop,adamax:zx.adamax,adam:zx.adam},Bx="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vx(){return new Promise((e=>Bx((()=>e()))))}const Wx={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,Kp(eh(n,"float32"),-1))}}},Ux={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qm(eh(n,"float32")),r=Ym(_m(jf(1),t));return ag(Dm(e,r))}}}},Gx={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ym(_m(Qm(eh(n,"float32")),1));return Dm(e,t)}}}},jx={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{let t=e;const r=Th(n.shape,s);return r.length>0&&(t=Xp(t,r)),Hp(t,n.shape)},b:()=>{let t=e;const n=Th(r.shape,s);return n.length>0&&(t=Xp(t,n)),Hp(t,r.shape)}}}},Hx={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},qx={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bf(n)}}},Kx={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bf(n)}}},Xx={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,Ym(_m(jf(1),Qm(eh(n,"float32")))))}}},Jx={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ym(Kf(jf(1),Qm(eh(n,"float32"))));return Dm(e,t)}}}},Yx={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{const t=Kf(Qm(n),Qm(r));let a=Wp(e,Dm(r,t));const i=Th(n.shape,s);return i.length>0&&(a=Xp(a,i)),Hp(a,n.shape)},b:()=>{const t=Kf(Qm(n),Qm(r));let a=ag(Wp(e,Dm(n,t)));const i=Th(r.shape,s);return i.length>0&&(a=Xp(a,i)),Hp(a,r.shape)}}}},Qx={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,Kf(Qm(eh(n,"float32")),1))}}},Zx={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,_m(jf(1),Qm(eh(n,"float32"))))}}};const ev=Ju({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ku(e,"dy","avgPool3dGrad"),o=Ku(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Pa(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),Pa(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),zp("avgPool3dGrad",s,a);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=Lu.runKernel("AvgPool3DGrad",h,p);return c?Hp(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),tv={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ev(e,r,s,a,i,o)}}};const nv=Ju({avgPoolGrad_:function(e,t,n,r,s){const a=Ku(e,"dy","avgPoolGrad"),i=Ku(t,"input","avgPoolGrad");Pa(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=Hp(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Hp(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Pa(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),Pa(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},p=Lu.runKernel("AvgPoolGrad",c,h);return l?Hp(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),rv={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>nv(e,r,s,a,i)}}},sv={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>rm(e,s,!1,!1),b:()=>rm(e,r,!0,!1)}:a&&!i?{a:()=>rm(s,e,!1,!0),b:()=>rm(r,e,!1,!1)}:{a:()=>rm(s,e,!0,!0),b:()=>rm(e,r,!0,!0)}:{a:()=>rm(e,s,!1,!0),b:()=>rm(r,e,!0,!1)}}},av={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>db(e,r,s)}}},iv={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Xp(e,o,!0)}}},ov={kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},uv={kernelName:"Ceil",gradFunc:e=>({x:()=>Bf(e)})},lv={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Lm(Wm(Vm(r,s),Am(r,a)),e,Bf(e))}}},cv={kernelName:"ComplexAbs",inputsToSave:["x"],gradFunc:Wx.gradFunc},hv={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=Za(s,t[0].shape)[0],i=r.map((e=>e[a]));return zf(e,i,a).map((e=>()=>e))}},pv={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return Pa(Op(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Yf(r.shape,e,s,i,o,u),filter:()=>Jf(r,e,s.shape,i,o,u)}}},dv={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Xf(e,s,a,i,o,1,u),filter:()=>Jf(e,r,s.shape,a,i,o,u)}}};const fv=Ju({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Hp(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Hp(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Pa(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Pa(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Pa(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Pa(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Pa(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return Lu.runKernel("Conv3DBackpropFilterV2",o,u)}}),mv={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;Pa(Op(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>my(i.shape,e,o,s,a),filter:()=>fv(i,e,o.shape,s,a)}}},gv={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(ag(Ub(eh(n,"float32"))),e)}}},yv={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(Gb(eh(n,"float32")),e)}}},bv={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=bp([s],r.rank);let n=vy(e,s,a,!i);return null!=t&&(n=og(n,t)),n}}}},xv={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Pa(Op(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return Pa(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Pa(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Pa(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Pa(Mp(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),zp("depthwiseConv2d",a,i),{x:()=>tm(u.shape,e,l,s,a,o,i),filter:()=>em(u,e,l.shape,s,a,o,i)}}},vv={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Lu.runKernel("Dilation2DBackpropInput",a,n),filter:()=>Lu.runKernel("Dilation2DBackpropFilter",i,n)}}},wv={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Lu.runKernel("EluGrad",r)}}},kv={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Wp(Ng(ag(Qm(n))),2/Math.sqrt(Math.PI));return{x:()=>Wp(e,r)}}},Iv={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,n)}}},Sv={kernelName:"ExpandDims",inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Hp(e,n.shape)}}},Nv={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,Ng(n))}}},Tv={kernelName:"Floor",gradFunc:e=>({x:()=>Bf(e)})},Cv={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{const t=Dm(e,eh(r,"float32")),a=Th(n.shape,s);return a.length>0?Hp(Xp(t,a),n.shape):t},b:()=>{let t=Wp(e,eh(n,"float32"));const a=Th(r.shape,s);a.length>0&&(t=Hp(Xp(t,a),r.shape));const i=Qm(r);return ag(Dm(t,eh(i,"float32")))}}}},Ev={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?jf(1):o,l=Th(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=_m(s,a),p=Wp(e,u),d=zb(Kf(i,jf(r))),f=Wp(Wp(Wp(d,d),d),jf(-.5));return{x:()=>1===a.rank?Hp(Wp(Wp(e,ym(Hp(d,[1,1,1,a.shape[0]]),c)),u),s.shape):Hp(Wp(Wp(e,d),u),s.shape),mean:()=>{let e=Wp(Wp(d,jf(-1)),p);return 1===a.rank&&(e=Xp(e,l)),Hp(e,a.shape)},variance:()=>{let e=Wp(Wp(f,h),p);return 1===a.rank&&(e=Xp(e,l)),Hp(e,a.shape)},scale:()=>{const t=Wp(h,d);let n=Wp(e,t);return 1===a.rank&&(n=Xp(n,l)),Hp(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Xp(t,l)),Hp(t,a.shape)}}}},$v={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=Za(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=Av(0,u),p=Av(u+1,u+1+c),d=Rv([o,[n],l]),f=Hp(e,d),m=Hp(s,[n]),g=Rv([[u],h,p]),y=og(f,g);let b=sx(y,m,r.shape[i]);const x=xp(g);return b=og(b,x),b},indices:()=>s}}};function Av(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Rv(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Fv={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Bf(n),b:()=>Bf(r)}}},Dv={kernelName:"Identity",gradFunc:e=>({x:()=>eh(e,"float32")})},_v={kernelName:"IsFinite",gradFunc:e=>({x:()=>Bf(e)})},Ov={kernelName:"IsInf",gradFunc:e=>({x:()=>Bf(e)})},Mv={kernelName:"IsNan",gradFunc:e=>({x:()=>Bf(e)})},Lv={kernelName:"LeakyRelu",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Rm(r,0);return{x:()=>Lm(a,e,Wp(e,s))}}},zv={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,Kf(n,1))}}},Pv={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,eh(n,"float32"))}}},Bv={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Ng(r);return _m(e,Wp(Xp(e,s,!0),t))}}}};const Vv=Ju({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return Lu.runKernel("LRNGrad",o,u)}}),Wv={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Vv(r,s,e,a,i,o,u)}}};function Uv(e,t,n,r){return t.rank<n.rank&&(t=Hp(t,gp(t.shape,r))),e.rank<n.rank&&(e=Hp(e,gp(e.shape,r))),{x:()=>Wp(e,eh(Ny(n,t),e.dtype))}}const Gv={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Uv(e,t[1],a,Za(s,a.shape));return{x:()=>i.x()}}},jv={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Wp(e,eh(Vm(n,r),"float32")),b:()=>Wp(e,eh(Ly(n,r),"float32"))}}};const Hv=Ju({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ku(e,"dy","maxPool3dGrad"),u=Ku(t,"input","maxPool3dGrad"),l=Ku(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=Hp(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Hp(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Hp(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Pa(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Pa(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Pa(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),zp("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Lu.runKernel("MaxPool3DGrad",f,m);return d?Hp(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),qv={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Hv(e,r,s,a,i,o,u)}}};const Kv=Ju({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ku(e,"dy","maxPoolGrad"),u=Ku(t,"input","maxPoolGrad"),l=Ku(n,"output","maxPoolGrad");Pa(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),Pa(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Pa(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),zp("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Lu.runKernel("MaxPoolGrad",c,h)}}),Xv={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Lf(e,a,r.shape)}}};function Jv(e,t,n){const r=e.shape.length,s=r-n.length,a=sp.getAxesPermutation(n,r);let i=e;null!=a&&(i=og(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Hp(t,r),a=xy(e,n,!0,!1),i=xy(e,n,!0,!0),o=Wp(a,i);return Wp(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=sp.getUndoAxesPermutation(a);l=og(l,e)}return l}const Yv={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Zg(e,r,s)}}},Qv={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>_f(e,r)}}};const Zv=[Wx,Ux,Gx,jx,Hx,qx,Kx,Xx,Jx,Yx,Qx,Zx,tv,rv,sv,av,iv,ov,uv,lv,cv,hv,dv,pv,mv,gv,yv,bv,xv,vv,{kernelName:"RealDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{const t=Dm(e,eh(r,"float32")),a=Th(n.shape,s);return a.length>0?Hp(Xp(t,a),n.shape):t},b:()=>{let t=Wp(e,eh(n,"float32"));const a=Th(r.shape,s);a.length>0&&(t=Hp(Xp(t,a),r.shape));const i=Qm(r);return ag(Dm(t,eh(i,"float32")))}}}},wv,kv,Iv,Sv,Nv,Cv,Tv,Ev,$v,Fv,Dv,_v,Ov,Mv,Lv,zv,Pv,Bv,Wv,Gv,Gv,jv,qv,{kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Kv(e,r,s,a,i,o)}}},{kernelName:"Mean",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=Za(s,r.shape),i=Ua(mp(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Hp(e,t);return Dm(Wp(n,fg(r.shape,"float32")),i)}}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Uv(e,i,a,Za(s,a.shape));return{x:()=>o.x()}}},{kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Wp(e,eh(Am(n,r),"float32")),b:()=>Wp(e,eh(Rm(n,r),"float32"))}}},{kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Lf(e,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{const t=Th(n.shape,s);return t.length>0?Hp(Xp(e,t),n.shape):e},b:()=>{const t=Wp(e,ag(Fy(Dm(n,r)))),a=Th(r.shape,s);return a.length>0?Hp(Xp(t,a),r.shape):t}}}},{kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{const t=Wp(e,eh(r,"float32")),a=Th(n.shape,s);return a.length>0?Hp(Xp(t,a),n.shape):t},b:()=>{const t=Wp(e,eh(n,"float32")),a=Th(r.shape,s);return a.length>0?Hp(Xp(t,a),r.shape):t}}}},{kernelName:"Neg",gradFunc:e=>({x:()=>ag(e)})},{kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Pf(n.shape,"float32")}}},{kernelName:"OnesLike",gradFunc:e=>({x:()=>Bf(e)})},{kernelName:"Pack",saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Gm(e,r).map((e=>()=>e))}},Xv,Xv,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ch(a.shape,i.shape);return{a:()=>{const t=eh(i,"float32");let n=Wp(e,Wp(t,Jm(a,_m(t,jf(1)))));const r=Th(a.shape,o);return r.length>0&&(n=Xp(n,r)),Hp(n,a.shape)},b:()=>{const t=Rm(a,0),n=Lm(t,wg(a),Bf(a));let r=Wp(e,Wp(s,n));const u=Th(i.shape,o);return u.length>0&&(r=Xp(r,u)),Hp(r,i.shape)}}}},{kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Rm(n,0);return{x:()=>Lm(s,e,Wp(e,r)),alpha:()=>{let t=Lm(s,Bf(e),Wp(e,n));const a=Th(r.shape,e.shape);return a.length>0&&(t=Xp(t,a)),Hp(t,r.shape)}}}},{kernelName:"Prod",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>Jv(r,e,a)}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,ag(Qm(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Wp(Am(n,6),Kp(n));return{x:()=>Wp(e,eh(r,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,eh(Kp(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hp(e,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Lu.runKernel("ResizeBilinearGrad",s,n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Lu.runKernel("ResizeNearestNeighborGrad",s,n)}}},{kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,s=Za(r,e.shape);return{x:()=>Gf(e,s)}}},{kernelName:"Round",gradFunc:e=>({x:()=>Bf(e)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ag(Dm(e,Wp(Jm(n,1.5),2)))}}},{kernelName:"Select",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>eh(Bf(n),"float32"),t:()=>Wp(e,eh(n,e.dtype)),e:()=>Wp(e,eh(Uy(n),e.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Rm(n,jf(0)),r=jf(kd),s=jf(Id),a=Wp(e,s),i=Wp(Wp(e,r),Ng(eh(n,"float32")));return Lm(t,a,i)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,Wp(n,_m(jf(1),n)))}}},{kernelName:"Sign",gradFunc:e=>({x:()=>Bf(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(yy(eh(n,"float32")),e)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(by(eh(n,"float32")),e)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=Yh(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>ub(e,l)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Wp(e,r);return{logits:()=>_m(a,Wp(Xp(a,[s],true),r))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,qp(n))}}},Yv,Yv,Qv,Qv,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,Wp(Ym(eh(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=jf(2);return{a:()=>Wp(e,Wp(s,_m(n,r))),b:()=>Wp(e,Wp(s,_m(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(e,Wp(eh(n,"float32"),2))}}},{kernelName:"Step",gradFunc:e=>({x:()=>Bf(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ch(n.shape,r.shape);return{a:()=>{let t=e;const r=Th(n.shape,s);return r.length>0&&(t=Xp(t,r)),Hp(t,n.shape)},b:()=>{let t=e;const n=Th(r.shape,s);return n.length>0&&(t=Xp(t,n)),Hp(ag(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;Za(a,r.shape).forEach((e=>{s[e]=1}));const i=Hp(e,s),o=Wp(i,fg(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dm(e,Qm(yy(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wp(_m(jf(1),Qm(n)),e)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Bf(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Kf(t,Lf(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Kf(t,Lf(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=Kf(t,Lf(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Kf(t,Lf(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=xp(s);return{x:()=>og(e,a)}}},{kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Um(e,s)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Qy(t,Bf(t)),r=Dy(e,n);let s=Vm(t,jf(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=rg(s,e+1);s=Wm(s,fg(r.shape,"bool"));const i=Bf(r);return Lm(s,r,i)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>Bf(e)})}];for(const e of Zv)no(e);function ew(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(sw(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=ew(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function tw(e,t=rw){return nw(e,t)}function nw(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(sw(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=nw(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function rw(e){return null===e?null:sw(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function sw(e){let t=!1;if(Ci().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=a("kjyEk");t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof hu)&&!(e instanceof Promise)&&!t)}function aw(e){return ew(e,iw)}function iw(e){return e instanceof hu?{value:e.clone(),recurse:!1}:sw(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}pu().prototype.abs=function(){return this.throwIfDisposed(),qm(this)},pu().prototype.acos=function(){return this.throwIfDisposed(),Lg(this)},pu().prototype.acosh=function(){return this.throwIfDisposed(),zg(this)},pu().prototype.add=function(e){return this.throwIfDisposed(),Kf(this,e)},pu().prototype.all=function(e,t){return this.throwIfDisposed(),Bg(this,e,t)},pu().prototype.any=function(e,t){return this.throwIfDisposed(),Vg(this,e,t)},pu().prototype.argMax=function(e){return this.throwIfDisposed(),Wg(this,e)},pu().prototype.argMin=function(e){return this.throwIfDisposed(),Ug(this,e)},pu().prototype.asScalar=function(){return this.throwIfDisposed(),Pa(1===this.size,(()=>"The array must have only 1 element.")),Hp(this,[])},pu().prototype.asType=function(e){return this.throwIfDisposed(),eh(this,e)},pu().prototype.as1D=function(){return this.throwIfDisposed(),Hp(this,[this.size])},pu().prototype.as2D=function(e,t){return this.throwIfDisposed(),Hp(this,[e,t])},pu().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Hp(this,[e,t,n])},pu().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Hp(this,[e,t,n,r])},pu().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Hp(this,[e,t,n,r,s])},pu().prototype.asin=function(){return this.throwIfDisposed(),Gg(this)},pu().prototype.asinh=function(){return this.throwIfDisposed(),jg(this)},pu().prototype.atan=function(){return this.throwIfDisposed(),Hg(this)},pu().prototype.atan2=function(e){return this.throwIfDisposed(),qg(this,e)},pu().prototype.atanh=function(){return this.throwIfDisposed(),Kg(this)},pu().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Xg(this,e,t,n,r)},pu().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Zg(this,e,t)},pu().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),ty(this,e,t,n,r,s)},pu().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Mm(this,e)},pu().prototype.cast=function(e){return this.throwIfDisposed(),eh(this,e)},pu().prototype.ceil=function(){return this.throwIfDisposed(),iy(this)},pu().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),oy(this,e,t)},pu().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof hu&&(e=[e]),_f([this,...e],t)},pu().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),py(this,e,t,n,r,s,a)},pu().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),dy(this,e,t,n,r,s)},pu().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Xf(this,e,t,n,r,s,a)},pu().prototype.cos=function(){return this.throwIfDisposed(),yy(this)},pu().prototype.cosh=function(){return this.throwIfDisposed(),by(this)},pu().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),xy(this,e,t,n)},pu().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),vy(this,e,t,n)},pu().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ky(this,e,t)},pu().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Zf(this,e,t,n,r,s,a)},pu().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Sy(this,e,t,n,r,s)},pu().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ty(this,e)},pu().prototype.div=function(e){return this.throwIfDisposed(),Dm(this,e)},pu().prototype.dot=function(e){return this.throwIfDisposed(),Cy(this,e)},pu().prototype.elu=function(){return this.throwIfDisposed(),Bp(this)},pu().prototype.equal=function(e){return this.throwIfDisposed(),Ny(this,e)},pu().prototype.erf=function(){return this.throwIfDisposed(),$y(this)},pu().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Ay(this,e,t)},pu().prototype.exp=function(){return this.throwIfDisposed(),Ng(this)},pu().prototype.expandDims=function(e){return this.throwIfDisposed(),rg(this,e)},pu().prototype.expm1=function(){return this.throwIfDisposed(),Ry(this)},pu().prototype.fft=function(){return this.throwIfDisposed(),Vf(this)},pu().prototype.flatten=function(){return this.throwIfDisposed(),Hp(this,[this.size])},pu().prototype.floor=function(){return this.throwIfDisposed(),Fy(this)},pu().prototype.floorDiv=function(e){return this.throwIfDisposed(),Fm(this,e)},pu().prototype.gather=function(e,t){return this.throwIfDisposed(),Dy(this,e,t)},pu().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vm(this,e)},pu().prototype.greater=function(e){return this.throwIfDisposed(),Rm(this,e)},pu().prototype.ifft=function(){return this.throwIfDisposed(),Uf(this)},pu().prototype.irfft=function(){return this.throwIfDisposed(),Hf(this)},pu().prototype.isFinite=function(){return this.throwIfDisposed(),_y(this)},pu().prototype.isInf=function(){return this.throwIfDisposed(),Oy(this)},pu().prototype.isNaN=function(){return this.throwIfDisposed(),My(this)},pu().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Vp(this,e)},pu().prototype.lessEqual=function(e){return this.throwIfDisposed(),Am(this,e)},pu().prototype.less=function(e){return this.throwIfDisposed(),Ly(this,e)},pu().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Py(this,e,t,n,r)},pu().prototype.logSigmoid=function(){return this.throwIfDisposed(),Vy(this)},pu().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Wy(this,e)},pu().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Eg(this,e,t)},pu().prototype.log=function(){return this.throwIfDisposed(),wg(this)},pu().prototype.log1p=function(){return this.throwIfDisposed(),Tg(this)},pu().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Wm(this,e)},pu().prototype.logicalNot=function(){return this.throwIfDisposed(),Uy(this)},pu().prototype.logicalOr=function(e){return this.throwIfDisposed(),Gy(this,e)},pu().prototype.logicalXor=function(e){return this.throwIfDisposed(),jy(this,e)},pu().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),rm(this,e,t,n)},pu().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Xy(this,e,t,n,r)},pu().prototype.max=function(e,t){return this.throwIfDisposed(),Km(this,e,t)},pu().prototype.maximum=function(e){return this.throwIfDisposed(),Qy(this,e)},pu().prototype.mean=function(e,t){return this.throwIfDisposed(),pg(this,e,t)},pu().prototype.min=function(e,t){return this.throwIfDisposed(),Xm(this,e,t)},pu().prototype.minimum=function(e){return this.throwIfDisposed(),xg(this,e)},pu().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),eb(this,e,t)},pu().prototype.mod=function(e){return this.throwIfDisposed(),tb(this,e)},pu().prototype.mul=function(e){return this.throwIfDisposed(),Wp(this,e)},pu().prototype.neg=function(){return this.throwIfDisposed(),ag(this)},pu().prototype.norm=function(e,t,n){return this.throwIfDisposed(),eg(this,e,t,n)},pu().prototype.notEqual=function(e){return this.throwIfDisposed(),dg(this,e)},pu().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ab(this,e,t,n)},pu().prototype.onesLike=function(){return this.throwIfDisposed(),ib(this)},pu().prototype.pad=function(e,t){return this.throwIfDisposed(),ub(this,e,t)},pu().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),fb(this,e,t,n,r,s,a)},pu().prototype.pow=function(e){return this.throwIfDisposed(),Jm(this,e)},pu().prototype.prelu=function(e){return this.throwIfDisposed(),Up(this,e)},pu().prototype.prod=function(e,t){return this.throwIfDisposed(),mb(this,e,t)},pu().prototype.reciprocal=function(){return this.throwIfDisposed(),Db(this)},pu().prototype.relu=function(){return this.throwIfDisposed(),Gp(this)},pu().prototype.relu6=function(){return this.throwIfDisposed(),jp(this)},pu().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Hp(this,e.shape)},pu().prototype.reshape=function(e){return this.throwIfDisposed(),Hp(this,e)},pu().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Cm(this,e,t,n)},pu().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Em(this,e,t,n)},pu().prototype.reverse=function(e){return this.throwIfDisposed(),Gf(this,e)},pu().prototype.rfft=function(){return this.throwIfDisposed(),Wf(this)},pu().prototype.round=function(){return this.throwIfDisposed(),Om(this)},pu().prototype.rsqrt=function(){return this.throwIfDisposed(),zb(this)},pu().prototype.selu=function(){return this.throwIfDisposed(),Pb(this)},pu().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bb(this,e,t,n,r,s,a)},pu().prototype.sigmoid=function(){return this.throwIfDisposed(),qp(this)},pu().prototype.sign=function(){return this.throwIfDisposed(),Wb(this)},pu().prototype.sin=function(){return this.throwIfDisposed(),Ub(this)},pu().prototype.sinh=function(){return this.throwIfDisposed(),Gb(this)},pu().prototype.slice=function(e,t){return this.throwIfDisposed(),Lf(this,e,t)},pu().prototype.softmax=function(e){return this.throwIfDisposed(),Xb(this,e)},pu().prototype.softplus=function(){return this.throwIfDisposed(),By(this)},pu().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),db(this,e,t)},pu().prototype.split=function(e,t){return this.throwIfDisposed(),zf(this,e,t)},pu().prototype.sqrt=function(){return this.throwIfDisposed(),Ym(this)},pu().prototype.square=function(){return this.throwIfDisposed(),Qm(this)},pu().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ig(this,e)},pu().prototype.squeeze=function(e){return this.throwIfDisposed(),tg(this,e)},pu().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof hu?[this,e]:[this,...e];return Um(n,t)},pu().prototype.step=function(e){return this.throwIfDisposed(),Kp(this,e)},pu().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Jb(this,e,t,n,r,s,a,i,o)},pu().prototype.sub=function(e){return this.throwIfDisposed(),_m(this,e)},pu().prototype.sum=function(e,t){return this.throwIfDisposed(),Xp(this,e,t)},pu().prototype.tan=function(){return this.throwIfDisposed(),Yb(this)},pu().prototype.tanh=function(){return this.throwIfDisposed(),Yg(this)},pu().prototype.tile=function(e){return this.throwIfDisposed(),ym(this,e)},pu().prototype.toBool=function(){return this.throwIfDisposed(),eh(this,"bool")},pu().prototype.toFloat=function(){return this.throwIfDisposed(),eh(this,"float32")},pu().prototype.toInt=function(){return this.throwIfDisposed(),eh(this,"int32")},pu().prototype.topk=function(e,t){return this.throwIfDisposed(),tx(this,e,t)},pu().prototype.transpose=function(e){return this.throwIfDisposed(),og(this,e)},pu().prototype.unique=function(e){return this.throwIfDisposed(),rx(this,e)},pu().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),sx(this,e,t)},pu().prototype.unstack=function(e){return this.throwIfDisposed(),Gm(this,e)},pu().prototype.where=function(e,t){return this.throwIfDisposed(),Lm(e,this,t)},pu().prototype.zerosLike=function(){return this.throwIfDisposed(),Bf(this)};class ow{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class uw extends ow{constructor(){super(uw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function lw(e){return new dw(e)}function cw(e){return new fw(e)}function hw(e,t){return new Nw(e,t)}uw.INITIAL_CAPACITY=32;class pw{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ww(this,e)}filter(e){return new xw(this,e)}map(e){return new vw(this,e)}mapAsync(e){return new kw(this,e)}serialMapAsync(e){return new kw(this,e).serial()}flatmap(e){return new Sw(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new bw(this,e,t)}columnMajorBatch(e,t=!0,n=rw){return this.rowMajorBatch(e,t).map((e=>tw(e,n)))}concatenate(e,t){return new Nw(lw([this,e]),t)}take(e){return e<0||null==e?this:new yw(this,e)}skip(e){return e<0||null==e?this:new gw(this,e)}prefetch(e){return new Ew(this,e)}shuffle(e,t){return new $w(this,e,t)}serial(){return new mw(this)}}class dw extends pw{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:aw(e),done:!1}}}class fw extends pw{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class mw extends pw{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class gw extends pw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ef(e.value)}return this.upstream.next()}}class yw extends pw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class bw extends pw{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class xw extends pw{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ef(e.value)}}}class vw extends pw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Su.getTensorsInContainer(e.value),n=this.transform(e.value),r=Su.getTensorsInContainer(n);for(const e of t)Su.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class ww extends pw{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class kw extends pw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Su.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Su.getTensorsInContainer(n);for(const e of t)Su.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Iw extends pw{constructor(){super(),this.outputQueue=new uw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Sw extends Iw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Su.getTensorsInContainer(e.value),n=this.transform(e.value),r=Su.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)Su.isTensorInList(e,r)||e.dispose();return!0}}class Nw extends pw{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Tw,Cw;(Cw=Tw||(Tw={}))[Cw.FAIL=0]="FAIL",Cw[Cw.SHORTEST=1]="SHORTEST",Cw[Cw.LONGEST=2]="LONGEST";class Ew extends pw{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ow(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class $w extends Ew{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=bb.alea(n||so.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Aw{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return so.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Rw((async()=>(await n.iterator()).columnMajorBatch(e,t,Fw)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Rw((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Rw((async()=>(await t.iterator()).filter((t=>Cf((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Rw((async()=>(await t.iterator()).map((t=>Cf((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Rw((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Rw((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Rw((async()=>hw(cw((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Rw((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=bb.alea(t||so.now().toString());return Rw((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Rw((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Rw(e,t=null){return new class extends Aw{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Fw(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof hu||so.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof hu?Um(e):Zu(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}Aw.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Dw(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&so.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function _w(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Dw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=so.sizeFromShape(i.shape),c=n||i.dtype,h=so.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,h)}}function Ow(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Dw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}const Mw=_w("Elu",(e=>e>=0?e:Math.exp(e)-1)),Lw={kernelName:"Elu",backendName:"cpu",kernelFunc:Mw};function zw(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Pw={kernelName:"Identity",backendName:"cpu",kernelFunc:zw};function Bw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Dw([s],"leakyRelu");const i=so.sizeFromShape(s.shape),o=n.data.get(s.dataId).values,u=so.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const Vw={kernelName:"LeakyRelu",backendName:"cpu",kernelFunc:Bw};function Ww(e){return(t,n,r,s,a)=>{const i=sp.assertAndGetBroadcastShape(t,n),o=i.length,u=so.computeStrides(i),l=so.sizeFromShape(i),c=so.getTypedArrayFromDType(a,l),h=t.length,p=n.length,d=so.computeStrides(t),f=so.computeStrides(n),m=sp.getBroadcastDims(t,i),g=sp.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<c.length;++t){const n=so.indexToLoc(t,o,u),a=n.slice(-h);m.forEach((e=>a[e]=0));const i=so.locToIndex(a,h,d),l=n.slice(-p);g.forEach((e=>l[e]=0));const y=so.locToIndex(l,p,f);c[t]=e(r[i],s[y])}return[c,i]}}const Uw=Ww(((e,t)=>e<0?t*e:e));function Gw(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Dw([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Uw(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const jw={kernelName:"Prelu",backendName:"cpu",kernelFunc:Gw},Hw=_w("Relu",(e=>Math.max(0,e))),qw={kernelName:"Relu",backendName:"cpu",kernelFunc:Hw},Kw=_w("Relu6",(e=>Math.min(Math.max(0,e),6))),Xw={kernelName:"Relu6",backendName:"cpu",kernelFunc:Kw};function Jw(e){return(t,n,r)=>{const s=so.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const Yw=Jw((e=>1/(1+Math.exp(-e)))),Qw=_w("Sigmoid",(e=>1/(1+Math.exp(-e)))),Zw={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:Qw};function ek(e,t,n,r,s){if("linear"===n)return zw({inputs:{x:t},backend:e});if("relu"===n)return Hw({inputs:{x:t},backend:e});if("elu"===n)return Mw({inputs:{x:t},backend:e});if("relu6"===n)return Kw({inputs:{x:t},backend:e});if("prelu"===n)return Gw({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Bw({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return Qw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function tk(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const nk={kernelName:"Complex",backendName:"cpu",kernelFunc:tk};function rk(e,t,n="float32"){if("complex64"===n){return tk({inputs:{real:rk(e,t,"float32"),imag:rk(e,t,"float32")},backend:e})}const r=so.makeZerosTypedArray(so.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function sk(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ak={kernelName:"Real",backendName:"cpu",kernelFunc:sk};function ik(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=so.toTypedArray([0],n),[s,a]=Ww(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function ok(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return zw({inputs:{x:s},backend:n});const e=rk(n,s.shape,s.dtype),t=ok({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=tk({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=sk({inputs:{input:s},backend:n}),t=ok({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!so.hasEncodingLoss(s.dtype,a)){const e=zw({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,u,l]=ik(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,u,l)}const uk={kernelName:"Cast",backendName:"cpu",kernelFunc:ok};function lk(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;Dw([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?sp.fromUint8ToStringArray(u):u,h="string"===a.dtype?sp.fromUint8ToStringArray(l):l,p=r||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a:a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=ok({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=ok({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=tk({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function ck(e){return(t,n,r,s,a,i)=>{const o=sp.assertAndGetBroadcastShape(t,n),u=so.sizeFromShape(o),l=o.length,c=so.computeStrides(o),h=so.getTypedArrayFromDType("float32",u),p=so.getTypedArrayFromDType("float32",u),d=sp.getBroadcastDims(t,o),f=sp.getBroadcastDims(n,o),m=sp.mergeRealAndImagArrays(r,s),g=sp.mergeRealAndImagArrays(a,i),y=t.length,b=so.computeStrides(t),x=n.length,v=so.computeStrides(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=so.indexToLoc(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=so.locToIndex(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=so.locToIndex(a,x,v),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const hk=Ww(((e,t)=>e+t)),pk=ck(((e,t,n,r)=>({real:e+n,imag:t+r}))),dk=lk("Add",hk,pk),fk={kernelName:"Add",backendName:"cpu",kernelFunc:dk};function mk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=so.sizeFromShape(s.shape),o=so.inferFromImplicitShape(a,i),u=so.sizeFromShape(o);so.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const gk={kernelName:"Reshape",backendName:"cpu",kernelFunc:mk};function yk(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Dw([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=so.sizeFromShape(f),y=so.sizeFromShape(m),b=Sh.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);so.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=mk({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=mk({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=so.computeStrides(v.shape),$=so.computeStrides(w.shape),[A,R,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,_,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],M=I*S,L=Zc([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){const s=Math.min(t+P,I),a=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,g-1)*A,a=Math.min(e,y-1)*O;n+=T[r+o*R+s*F]*C[s*D+t*_+a]}z[e*M+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const bk={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:yk};const xk={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=yk({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=dk({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=ek(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function vk(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const wk={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Dw(t,"abs");let r=new Float32Array(so.sizeFromShape(t.shape));return r=vk(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},kk={kernelName:"Acos",backendName:"cpu",kernelFunc:_w("Acos",(e=>Math.acos(e)))},Ik={kernelName:"Acosh",backendName:"cpu",kernelFunc:_w("Acosh",(e=>Math.acosh(e)))};const Sk={kernelName:"AddN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Dw(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=Zc(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Nk(e,t,n,r,s){const a=t.length,i=so.sizeFromShape(t),o=so.computeStrides(t),u=so.computeStrides(s),l=so.getTypedArrayFromDType(n,so.sizeFromShape(s));for(let t=0;t<i;++t){const n=so.indexToLoc(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[so.locToIndex(s,a,u)]=e[t]}return l}function Tk(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Dw(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=Nk(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Ck={kernelName:"Transpose",backendName:"cpu",kernelFunc:Tk};const Ek={kernelName:"All",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Dw(s,"all");const o=so.parseAxisParam(a,s.shape);let u=o;const l=sp.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Tk({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sp.getInnerMostAxes(u.length,s.shape.length)),sp.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,p]=sp.computeOutAndReduceShapes(c.shape,u),d=so.sizeFromShape(p),f=so.makeZerosTypedArray(so.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=mk({inputs:{x:g},backend:n,attrs:{shape:sp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const $k={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Dw(s,"any");const o=so.parseAxisParam(a,s.shape);let u=o;const l=sp.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Tk({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sp.getInnerMostAxes(u.length,s.shape.length)),sp.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,p]=sp.computeOutAndReduceShapes(c.shape,u),d=so.sizeFromShape(p),f=so.makeZerosTypedArray(so.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=mk({inputs:{x:g},backend:n,attrs:{shape:sp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Ak={kernelName:"ArgMax",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Dw(s,"argMax");let i=so.parseAxisParam(a,s.shape);const o=sp.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Tk({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],sp.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=sp.computeOutAndReduceShapes(u.shape,i),p=so.sizeFromShape(c),d=so.makeZerosTypedArray(p,"int32"),f=so.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const Rk={kernelName:"ArgMin",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Dw(s,"argMin");let i=so.parseAxisParam(a,s.shape);const o=sp.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Tk({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],sp.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=sp.computeOutAndReduceShapes(u.shape,i),p=so.sizeFromShape(c),d=so.makeZerosTypedArray(p,"int32"),f=so.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Fk={kernelName:"Asin",backendName:"cpu",kernelFunc:_w("Asin",(e=>Math.asin(e)))},Dk={kernelName:"Asinh",backendName:"cpu",kernelFunc:_w("Asinh",(e=>Math.asinh(e)))},_k={kernelName:"Atan",backendName:"cpu",kernelFunc:_w("Atan",(e=>Math.atan(e)))},Ok={kernelName:"Atan2",backendName:"cpu",kernelFunc:lk("Atan2",Ww(((e,t)=>Math.atan2(e,t))))},Mk={kernelName:"Atanh",backendName:"cpu",kernelFunc:_w("Atanh",(e=>Math.atanh(e)))};function Lk(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Zc(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/v:y}}}return m}function zk(e,t,n,r,s=!1,a=!1){const i=Zc(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Zc(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(w,e,n,o,t)}}return i}function Pk(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Zc(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=l;const C=Math.min(s.inDepth,p+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=l){const s=x+n*r[1];for(let n=p;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<d;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/N:k}}}}return x}function Bk(e,t){const n=Zc(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-d,o=e.get(m,t,r,a,g);o>=S&&(S=o,N=n*c*h+s*c+i)}}}n.set(N,m,y,r,s,g)}}}return n}const Vk={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Dw(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;so.assert(sp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=sp.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&so.arraysEqual(l.inShape,l.outShape))c=zw({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=so.computeStrides(s.shape),r=Lk(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const Wk={kernelName:"AvgPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;Dw(s,"avgPool3d");const c=sp.computePool3DInfo(s.shape,a,i,1,o,u,l),h=Pk(n.data.get(s.dataId).values,s.shape,s.dtype,so.computeStrides(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Uk={kernelName:"AvgPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;Dw([s,a],"avgPool3DGrad");const c=sp.computePool3DInfo(a.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=Zc(a.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-S;let u=0;for(let n=0;n<v;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const s=(i+n)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;u+=E.get(e,r,s,a,t)}}}T.set(u*C,e,n,r,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Gk={kernelName:"AvgPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Dw([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=sp.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Zc(i.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,S=Zc(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=S.get(e,r,s,t)}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const jk={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;so.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),so.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),so.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Dw([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function Hk(e,t,n,r,s){const a=Mh.isSliceContinous(r,t,n),i=so.sizeFromShape(n),o=so.computeStrides(r);if(a){const n=Mh.computeFlatOffset(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=Zc(r,s,"string"===s?sp.fromUint8ToStringArray(e):e),l=Zc(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?sp.fromStringArrayToUint8(l.values):l.values}function qk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Dw(s,"slice");const[o,u]=Mh.parseSliceParams(s,a,i);Mh.assertParamsValid(s,o,u);const l=Hk(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const Kk={kernelName:"Slice",backendName:"cpu",kernelFunc:qk};const Xk={kernelName:"BatchToSpaceND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Dw([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=sp.getReshaped(s.shape,a,o),l=sp.getPermuted(u.length,a.length),c=sp.getReshapedPermuted(s.shape,a,o),h=sp.getSliceBeginCoords(i,a.length),p=sp.getSliceSize(c,i,a.length),d=mk({inputs:{x:s},backend:n,attrs:{shape:u}}),f=Tk({inputs:{x:d},backend:n,attrs:{perm:l}}),m=mk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=qk({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Jk(e,t,n,r,s){const a=so.sizeFromShape(r),i=so.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function Yk(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=Zc([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const Qk={kernelName:"Bincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Jk(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};const Zk={kernelName:"BroadcastArgs",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=sp.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},eI=Jw((e=>Math.ceil(e))),tI={kernelName:"Ceil",backendName:"cpu",kernelFunc:Ow("Ceil",eI)},nI={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:_w("ClipByValue",((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}))},rI={kernelName:"ComplexAbs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(so.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function sI(e,t,n,r){const s=so.getArrayFromDType(n,so.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=so.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?sp.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function aI(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const iI={kernelName:"Imag",backendName:"cpu",kernelFunc:aI};function oI(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=so.parseAxisParam(s,t[0].shape)[0];let i=sp.computeOutShape(t.map((e=>e.shape)),a);if(0===so.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>so.sizeFromShape(e.shape)>0));if(1===o.length)return zw({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(sp.assertParamsConsistent(u,a),"complex64"===o[0].dtype){const e=o.map((e=>sk({inputs:{input:e},backend:n}))),t=o.map((e=>aI({inputs:{input:e},backend:n}))),r=oI({inputs:e,backend:n,attrs:{axis:a}}),s=oI({inputs:t,backend:n,attrs:{axis:a}}),i=tk({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=so.sizeFromShape(e.shape.slice(a));return mk({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=sp.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],p=sI(c,i,t[0].dtype,h),d=sp.computeOutShape(o.map((e=>e.shape)),a),f=n.makeTensorInfo(d,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const uI={kernelName:"Concat",backendName:"cpu",kernelFunc:oI};function lI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Dw([s,a],"conv2d");const h=sp.convertConv2DDataFormat(u),p=sp.computeConv2DInfo(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new ou(p.outShape,s.dtype),w=so.computeStrides(s.shape),k=so.computeStrides(a.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,D=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const r=n+e*E,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[s+e*T];for(let e=0;e<p.outChannels;++e)D[t+e*A]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const cI={kernelName:"Conv2D",backendName:"cpu",kernelFunc:lI};const hI={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Dw([s,a],"conv2dBackpropFilter");const h=sp.convertConv2DDataFormat(u),p=sp.computeConv2DInfo(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ou(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new ou(s.shape,s.dtype,w),S=new ou(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const pI={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Dw([s,a],"conv2dBackpropInput");const h=so.computeStrides(a.shape),p=so.computeStrides(s.shape);let d=sp.convertConv2DDataFormat(l);const f=sp.computeConv2DInfo(i,a.shape,o,1,u,c,!1,d),m=new ou(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:A,strideHeight:R,strideWidth:F}=f;d=f.dataFormat;const D=I-1-f.padInfo.top,_=S-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],V=O?p[1]:p[2],W=O?p[2]:1,U=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-D,s=Math.max(0,Math.ceil(r/R)),a=Math.min($,(I+r)/R);for(let i=0;i<C;++i){const o=i-_,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(S+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=B*e+V*n+W*r,i=x*(I-1-s)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<E;++e){c+=y[a+U*e]*b[i+e]}}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const dI={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;Dw([s,a],"conv3d");const l=sp.computeConv3DInfo(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new ou(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,S=so.computeStrides(s.shape),N=so.computeStrides(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*N[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const fI={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;Dw([s,a],"conv3dBackpropFilterV2");const l=so.computeStrides(s.shape),c=so.computeStrides(a.shape),h=sp.computeConv3DInfo(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ou(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,C,E]=c,$=n.data.get(s.dataId).values,[A,R,F,D]=l,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/p)),n=Math.min(h.outDepth,(h.inDepth+_-e)/p),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/d)),i=Math.min(h.outHeight,(h.inHeight+M-s)/d),o=s*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*N;for(let m=t;m<n;++m){const t=(e+m*p-_)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(s+e*d-M)*F+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*E+i;g+=$[(r+e*f-O)*D+a+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const mI={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;Dw([s],"conv3dBackpropInputV2");const l=so.computeStrides(s.shape),c=so.computeStrides(a.shape),h=sp.computeConv3DInfo(u,a.shape,o,1,i),p=new ou(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=l,I=n.data.get(a.dataId).values,[S,N,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:F,inDepth:D,inHeight:_,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:W}=h,U=$-1-h.padInfo.front,G=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-U,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,($+r)/B);for(let i=0;i<_;++i){const o=i-G,u=Math.max(0,Math.ceil(o/V)),l=Math.min(z,(A+o)/V);for(let c=0;c<O;++c){const h=c-j,p=Math.max(0,Math.ceil(h/W)),E=Math.min(P,(R+h)/W);let F=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=u;r<l;++r){const a=r*V-o;for(let i=p;i<E;++i){const o=x*e+v*n+w*r+k*i,u=S*($-1-s)+N*(A-1-a)+T*(R-1-(i*W-h))+C*t;for(let e=0;e<M;++e){F+=b[o+e]*I[u+e]}}}}d[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},gI={kernelName:"Cos",backendName:"cpu",kernelFunc:_w("Cos",(e=>Math.cos(e)))},yI={kernelName:"Cosh",backendName:"cpu",kernelFunc:_w("Cosh",(e=>Math.cosh(e)))};const bI={kernelName:"CropAndResize",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=Zc([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=so.computeStrides(s.shape),k=so.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const l=v[a];a=r+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const p=v[a];a=r+m*w[2]+s*w[1]+i*w[0];const d=l+(c-l)*b,f=p+(v[a]-p)*b;a=r+u*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<d;r++){const s=r+o*w[2]+u*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const xI={kernelName:"Cumprod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Dw(s,"cumprod");const u=sp.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=Tk({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sp.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Tu(l.dtype,"int32"),p=so.makeOnesTypedArray(so.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const r=m(e,t-1);p[n]=i?d[r]*p[r]:d[n]*p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Tk({inputs:{x:g},backend:n,attrs:{perm:sp.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const vI={kernelName:"Cumsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Dw(s,"cumsum");const u=sp.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=Tk({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sp.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Tu(l.dtype,"int32"),p=so.makeZerosTypedArray(so.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Tk({inputs:{x:g},backend:n,attrs:{perm:sp.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const wI={kernelName:"DenseBincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Jk(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=Yk(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const kI={kernelName:"DepthToSpace",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;so.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,p=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*d;for(let t=0;t<d;++t){const r=t+i+c*(s+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],s.dtype,m)}};function II(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;Dw([s,a],"depthwiseConv2DNative");const c=so.computeStrides(s.shape),h=so.computeStrides(a.shape);let p=u;null==p&&(p=[1,1]),so.assert(sp.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=sp.computeConv2DInfo(s.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new ou(d.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],s=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],o=i+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[u+e]+=t*S[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const SI={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:II};const NI={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Dw([s,a],"depthwiseConv2dNativeBackpropFilter");const h=sp.computeConv2DInfo(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new ou(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new ou(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new ou(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const TI={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Dw([s,a],"depthwiseConv2DNativeBackpropInput");const h=so.computeStrides(s.shape),p=so.computeStrides(a.shape),d=sp.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new ou(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:_,outWidth:O,strideHeight:M,strideWidth:L}=d,z=E-1-d.padInfo.top,P=$-1-d.padInfo.left,B=D/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),a=Math.min(_,(E+r)/M);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,($+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=u;r<l;++r){const a=v*e+w*n+k*r,i=S*(E-1-s)+N*($-1-(r*L-o))+T*t;for(let e=0;e<B;++e){c+=x[a+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const CI={kernelName:"Diag",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=so.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,i=Zc([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},EI={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=sp.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",o),C=so.sizeFromShape(T),E=T.length,$=so.getArrayFromDType(r.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*N;if(d>=0&&d<m){const i=so.locToIndex([e,a,d,o],c,so.computeStrides(r.shape)),f=so.locToIndex([t,n,o],p,so.computeStrides(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}$[so.locToIndex([e,t,a,o],E,so.computeStrides(T))]=u}}}return{dataId:u.write(so.toTypedArray($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},$I={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=so.toNestedArray(r.shape,l.data.get(r.dataId).values),h=so.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=sp.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);so.assert(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=so.toNestedArray(N,l.data.get(a.dataId).values),C=so.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}C[o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(so.toTypedArray(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},AI={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=so.toNestedArray(r.shape,l.data.get(r.dataId).values),h=so.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=sp.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);so.assert(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=so.toNestedArray(N,l.data.get(a.dataId).values),C=so.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}C[e][o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(so.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},RI=Ww(((e,t)=>e*t)),FI=ck(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),DI=lk("Multiply",RI,FI),_I={kernelName:"Multiply",backendName:"cpu",kernelFunc:DI};function OI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;Dw(s,"sum"),o="bool"===s.dtype?ok({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):zw({inputs:{x:s},backend:n});const u=o.shape.length,l=so.parseAxisParam(a,o.shape),c=sp.getAxesPermutation(l,u);let h=l,p=o;null!=c&&(p=Tk({inputs:{x:o},backend:n,attrs:{perm:c}}),h=sp.getInnerMostAxes(h.length,u)),sp.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[d,f]=sp.computeOutAndReduceShapes(p.shape,h);let m=rk(n,d,sp.upcastType(p.dtype,"int32"));const g=so.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=mk({inputs:{x:m},backend:n,attrs:{shape:sp.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const MI={kernelName:"Sum",backendName:"cpu",kernelFunc:OI};const LI={kernelName:"Einsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=sp.decodeEinsumEquation(s,a.length);sp.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=sp.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=sp.getEinsumPermutation(d,u[t]);let s;sp.isIdentityPermutation(e)?s=a[t]:(s=Tk({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);so.arraysEqual(s.shape,i)||(s=mk({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=DI({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=OI({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}};const zI={kernelName:"EluGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Dw([r,s],"eluGrad");const a=new Float32Array(so.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},PI=Ww(((e,t)=>e===t?1:0)),BI=lk("Equal",PI,null,"bool"),VI={kernelName:"Equal",backendName:"cpu",kernelFunc:BI},WI=sp.ERF_P,UI=sp.ERF_A1,GI=sp.ERF_A2,jI=sp.ERF_A3,HI=sp.ERF_A4,qI=sp.ERF_A5,KI={kernelName:"Erf",backendName:"cpu",kernelFunc:_w("Erf",(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+WI*n);return t*(1-((((qI*r+HI)*r+jI)*r+GI)*r+UI)*r*Math.exp(-n*n))}))},XI=Jw((e=>Math.exp(e))),JI=Ow("Exp",XI,"float32"),YI={kernelName:"Exp",backendName:"cpu",kernelFunc:JI};function QI(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(so.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),mk({inputs:{x:s},backend:n,attrs:{shape:o}})}const ZI={kernelName:"ExpandDims",backendName:"cpu",kernelFunc:QI},eS=Jw((e=>Math.expm1(e))),tS={kernelName:"Expm1",backendName:"cpu",kernelFunc:Ow("Expm1",eS)},nS=lk("RealDiv",Ww(((e,t)=>e/t))),rS={kernelName:"RealDiv",backendName:"cpu",kernelFunc:nS},sS=Ww(((e,t)=>e-t)),aS=ck(((e,t,n,r)=>({real:e-n,imag:t-r}))),iS=lk("Sub",sS,aS),oS={kernelName:"Sub",backendName:"cpu",kernelFunc:iS};function uS(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=so.sizeFromShape(l),h=so.getTypedArrayFromDType("float32",c),p=so.getTypedArrayFromDType("float32",c);for(let e=0;e<s;e++){const r=qk({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=qk({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=tk({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=lS(i,t,n),d=sp.mergeRealAndImagArrays(l,c);for(let t=0;t<a;t++){const n=sp.getComplexWithIndex(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=tk({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function lS(e,t,n){const r=so.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=cS(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",so.createScalarValue(r,"float32")),i=zw({inputs:{x:a},backend:n}),u=rS.kernelFunc({inputs:{a:e,b:a},backend:n}),l=rS.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=sp.exponent(s*r,t,n),u=sp.getComplexWithIndex(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),sp.assignToTypedArray(r,a,i,s)}return r}(sp.mergeRealAndImagArrays(a,i),r,t);return sp.splitRealAndImagArrays(e)}var o}function cS(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=sp.mergeRealAndImagArrays(e,t),i=n/2,o=sp.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=tk({inputs:{real:h,imag:p},backend:s}),f=sp.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=tk({inputs:{real:b,imag:x},backend:s}),w=cS(u,l,i,r,s),k=w.real,I=w.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",I),C=tk({inputs:{real:N,imag:T},backend:s}),E=cS(m,g,i,r,s),$=E.real,A=E.imag,R=[$.length],F=s.makeTensorInfo(R,"float32",$),D=s.makeTensorInfo(R,"float32",A),_=tk({inputs:{real:F,imag:D},backend:s}),O=sp.exponents(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=tk({inputs:{real:L,imag:z},backend:s}),B=DI({inputs:{a:P,b:_},backend:s}),V=dk({inputs:{a:C,b:B},backend:s}),W=iS({inputs:{a:C,b:B},backend:s}),U=sk({inputs:{input:V},backend:s}),G=sk({inputs:{input:W},backend:s}),j=aI({inputs:{input:V},backend:s}),H=aI({inputs:{input:W},backend:s}),q=oI({inputs:[U,G],backend:s,attrs:{axis:0}}),K=oI({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,J=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:J}}const hS={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=so.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=mk({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=uS(i,!1,n),u=mk({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function pS(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||so.inferDtype(s),o=so.getArrayFromDType(i,so.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const dS={kernelName:"Fill",backendName:"cpu",kernelFunc:pS};const fS={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=so.getTypedArrayFromDType(r.dtype,so.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];if(i>=0&&i<u){h=c[t+n+i*l+s]}a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},mS=Jw((e=>Math.floor(e))),gS={kernelName:"Floor",backendName:"cpu",kernelFunc:Ow("Floor",mS)},yS={kernelName:"FloorDiv",backendName:"cpu",kernelFunc:lk("FloorDiv",Ww(((e,t)=>Math.floor(e/t))),null,"int32")};const bS={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=lI({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=mk({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=dk({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=dk({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=mk({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ek(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=ek(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const xS={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=II({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=dk({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=ek(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function vS(e,t,n,r,s,a,i,o,u){const l=Zc([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}const wS={kernelName:"GatherNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=so.sizeFromShape(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=sp.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=vS(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,p.values)}};function kS(e,t,n){const r=Zc(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const IS={kernelName:"GatherV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Dw([s,a],"gatherV2");const u=so.parseAxisParam(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];so.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=so.sizeFromShape(a.shape),d=sp.segment_util.collectGatherOpShapeInfo(s,a,u,h),f=mk({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=mk({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=kS(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},SS=Ww(((e,t)=>e>t?1:0)),NS={kernelName:"Greater",backendName:"cpu",kernelFunc:lk("Greater",SS,null,"bool")},TS=Ww(((e,t)=>e>=t?1:0)),CS={kernelName:"GreaterEqual",backendName:"cpu",kernelFunc:lk("GreaterEqual",TS,null,"bool")};const ES={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=so.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=mk({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=uS(i,!0,n),u=mk({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},$S={kernelName:"IsFinite",backendName:"cpu",kernelFunc:_w("IsFinite",(e=>Number.isFinite(e)?1:0),"bool")},AS={kernelName:"IsInf",backendName:"cpu",kernelFunc:_w("IsInf",(e=>Math.abs(e)===1/0?1:0),"bool")},RS={kernelName:"IsNan",backendName:"cpu",kernelFunc:_w("IsNan",(e=>Number.isNaN(e)?1:0),"bool")},FS=Ww(((e,t)=>e<t?1:0)),DS={kernelName:"Less",backendName:"cpu",kernelFunc:lk("Less",FS,null,"bool")},_S=Ww(((e,t)=>e<=t?1:0)),OS={kernelName:"LessEqual",backendName:"cpu",kernelFunc:lk("LessEqual",_S,null,"bool")};function MS(e,t,n){const r=(t-e)/(n-1),s=so.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const LS={kernelName:"LinSpace",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=MS(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},zS=Jw((e=>Math.log(e))),PS={kernelName:"Log",backendName:"cpu",kernelFunc:Ow("Log",zS)},BS={kernelName:"Log1p",backendName:"cpu",kernelFunc:_w("Log1p",(e=>Math.log1p(e)))},VS={kernelName:"LogicalAnd",backendName:"cpu",kernelFunc:lk("LogicalAnd",Ww(((e,t)=>e&&t)),null,"bool")},WS={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:_w("LogicalNot",(e=>e?0:1),"bool")},US={kernelName:"LogicalOr",backendName:"cpu",kernelFunc:lk("LogicalOr",Ww(((e,t)=>e||t)),null,"bool")};const GS={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;Dw(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=so.sizeFromShape(s.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}};const jS={kernelName:"LRNGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;Dw(i,"LRNGrad");const h=so.sizeFromShape(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function HS(e,t,n,r){const s=so.getTypedArrayFromDType(r,so.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function qS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=so.parseAxisParam(a,u);let h=c;const p=sp.getAxesPermutation(h,l);let d=o.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=Nk(d,u,s.dtype,p,e),h=sp.getInnerMostAxes(h.length,l),u=e}Dw(s,"max"),sp.assertAxesAreInnerMostDims("max",h,l);const[f,m]=sp.computeOutAndReduceShapes(u,h),g=HS(d,so.sizeFromShape(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;if(i){b=sp.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const KS={kernelName:"Max",backendName:"cpu",kernelFunc:qS},XS=Ww(((e,t)=>Math.max(e,t))),JS={kernelName:"Maximum",backendName:"cpu",kernelFunc:lk("Maximum",XS)};const YS={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Dw(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;so.assert(sp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=sp.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&so.arraysEqual(l.inShape,l.outShape))c=zw({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=so.computeStrides(s.shape),r=Lk(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const QS={kernelName:"MaxPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;Dw(s,"maxPool3d");const c=sp.computePool3DInfo(s.shape,a,i,1,o,u,l),h=Pk(n.data.get(s.dataId).values,s.shape,s.dtype,so.computeStrides(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const ZS={kernelName:"MaxPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;Dw([s,a],"maxPool3DGrad");const c=sp.computePool3DInfo(a.shape,i,o,1,u,l),h=Bk(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Zc(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let u=0;for(let n=0;n<b;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=b*x*v-1-h.get(e,r,a,l,t)===n*x*v+s*v+i?1:0;if(0===p)continue;u+=N.get(e,r,a,l,t)*p}}}S.set(u,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const eN={kernelName:"MaxPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Dw([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=sp.computePool2DInfo(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=Zc(p.outShape,o.dtype,zk(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=Zc(o.shape,"float32"),S=n.data.get(s.dataId).values,N=Zc(s.shape,"float32",S);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;if(0===u)continue;i+=N.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};function tN(e,t,n,r,s){const a=Lk(e,0,n,so.computeStrides(t),s,"max"),i=zk(e,t,n,s,!0,r);return[a.values,i.values]}const nN={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;Dw(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=sp.computePool2DInfo(r.shape,s,a,[1,1],i),[h,p]=tN(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const rN={kernelName:"Mean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=so.parseAxisParam(a,s.shape),u=sp.computeOutAndReduceShapes(s.shape,o)[1],l=so.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const p=ok({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=nS({inputs:{a:p,b:h},backend:n});c.push(d);const f=OI({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const sN={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Dw(s,"min");const o=so.parseAxisParam(a,s.shape);let u=o;const l=sp.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=Tk({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sp.getInnerMostAxes(u.length,s.shape.length)),sp.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,p]=sp.computeOutAndReduceShapes(c.shape,u),d=so.sizeFromShape(p),f=so.makeZerosTypedArray(so.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=mk({inputs:{x:g},backend:n,attrs:{shape:sp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},aN=Ww(((e,t)=>Math.min(e,t))),iN={kernelName:"Minimum",backendName:"cpu",kernelFunc:lk("Minimum",aN)};const oN={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Dw(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=so.computeStrides(s.shape),f=so.sizeFromShape(o),m=o.length,g=so.computeStrides(o),y=so.getTypedArrayFromDType(s.dtype,f);for(let e=0;e<f;e++){let t=so.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=so.locToIndex(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},uN={kernelName:"Mod",backendName:"cpu",kernelFunc:lk("Mod",Ww(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})))};function lN(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=so.parseAxisParam([o],s.shape),l=qS({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=sp.expandShapeToKeepDim(l.shape,u),h=mk({inputs:{x:l},backend:n,attrs:{shape:c}}),p=iS({inputs:{a:s,b:h},backend:n}),d=JI({inputs:{x:p},backend:n}),f=OI({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=mk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=nS({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const cN={kernelName:"Softmax",backendName:"cpu",kernelFunc:lN};const hN={kernelName:"Multinomial",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Dw(s,"multinomial");const u=o?s:lN({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],d=so.makeZerosTypedArray(so.sizeFromShape(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=bb.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();d[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};function pN(e,t,n){const r=so.createScalarValue(-1,n);return RI([],t,r,e,n)}const dN={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Dw(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=pN(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},fN=ff.nonMaxSuppressionV3Impl;const mN={kernelName:"NonMaxSuppressionV3",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Dw(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=fN(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gN=ff.nonMaxSuppressionV4Impl;const yN={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;Dw(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=gN(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},bN=ff.nonMaxSuppressionV5Impl;const xN={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;Dw(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=bN(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},vN=Ww(((e,t)=>e!==t?1:0)),wN={kernelName:"NotEqual",backendName:"cpu",kernelFunc:lk("NotEqual",vN,null,"bool")};const kN={kernelName:"OneHot",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;Dw(s,"oneHot");const l=so.sizeFromShape(s.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function IN(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=sk({inputs:{input:r},backend:n}),t=IN({inputs:{x:e},backend:n}),s=aI({inputs:{input:r},backend:n}),a=IN({inputs:{x:s},backend:n}),i=tk({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return pS({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const SN={kernelName:"ZerosLike",backendName:"cpu",kernelFunc:IN};const NN={kernelName:"OnesLike",backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=sk({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=aI({inputs:{input:s},backend:r}),i=IN({inputs:{x:a},backend:r}),o=tk({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return pS({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function TN(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return QI({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{so.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),so.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=oI({inputs:t.map((e=>{const t=QI({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const CN={kernelName:"Pack",backendName:"cpu",kernelFunc:TN};const EN={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Dw(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=so.sizeFromShape(s.shape),h=s.shape.length,p=so.computeStrides(s.shape),d=so.sizeFromShape(o),f=o.length,m=so.computeStrides(o),g=so.getTypedArrayFromDType(s.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=so.indexToLoc(e,h,p).map(((e,t)=>e+u[t]));g[so.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},$N={kernelName:"Pow",backendName:"cpu",kernelFunc:lk("Pow",Ww(((e,t)=>Math.pow(e,t))))};function AN(e,t,n,r){const[s,a]=sp.computeOutAndReduceShapes(e,r),i=Tu(t,"int32"),o=so.makeZerosTypedArray(so.sizeFromShape(s),i),u=so.sizeFromShape(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const RN={kernelName:"Prod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Dw(s,"prod");const o=s.shape.length,u=so.parseAxisParam(a,s.shape),l=sp.getAxesPermutation(u,o);let c=u,h=s;const p=[];null!=l&&(h=Tk({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),c=sp.getInnerMostAxes(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=AN(h.shape,h.dtype,d,c);let y=m;return i&&(y=sp.expandShapeToKeepDim(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};var FN=sp.RowPartitionType;class DN{constructor(e,t,n,r,s,a,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=sp.getRowPartitionTypesHelper(l),this.raggedRank=sp.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===FN.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===FN.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case FN.VALUE_ROWIDS:return DN.getMaxWidthValueRowID(t);case FN.ROW_SPLITS:return DN.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${FN[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ON(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;sp.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=sp.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return so.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case FN.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case FN.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${FN[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case FN.FIRST_DIM_SIZE:return e[0];case FN.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case FN.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${FN[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=ON(t,!1),s=so.getArrayFromDType(this.valuesDType,so.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=so.sizeFromShape(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;Cf((()=>{const t=Hp(l,e),n=Mm(t,i);l=n.dataSync()}))}let c=0,h=0,p=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==p){if(h<p){const e=s.subarray(c*o);_N(a.subarray(h*o),e,(p-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>p)if(1===this.defaultValue.length)a.subarray(p*o,r*o).fill(this.defaultValue[0]),p=r;else for(;r>p;){_N(a.slice(p*o),l,o),++p}r<0?(c=e+1,h=p):(c=e,h=p,p=h+1)}else++p}}}function _N(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function ON(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function MN(e,t,n,r,s,a,i,o,u,l){return new DN(e,t,n,r,s,a,i,o,u,l).compute()}const LN={kernelName:"RaggedTensorToTensor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=MN(l,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}};function zN(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return so.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),a=so.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const PN={kernelName:"Range",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=zN(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},BN={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:_w("Reciprocal",(e=>1/e))};const VN={kernelName:"ResizeBilinear",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Dw(s,"resizeBilinear");const u=so.computeStrides(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(so.sizeFromShape([h,l,c,f])),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+a*u[2],y=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};const WN={kernelName:"ResizeBilinearGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Dw([a,s],"resizeBilinearGrad");const o=so.computeStrides(s.shape),[u,l,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*l,k=p*s,I=u*l,S=u*s;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};const UN={kernelName:"ResizeNearestNeighbor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Dw(s,"resizeNearestNeighbor");const u=so.computeStrides(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}};const GN={kernelName:"ResizeNearestNeighborGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Dw([a,s],"resizeNearestNeighborGrad");const o=so.computeStrides(s.shape),u=so.computeStrides(a.shape),[l,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*u[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const jN={kernelName:"Reverse",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Dw(s,"reverse");const i=s.shape.length,o=so.parseAxisParam(a,s.shape);if(0===i)return zw({inputs:{x:s},backend:n});const u=new ou(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},HN={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=so.getTypedArrayFromDType(r.dtype,so.sizeFromShape(r.shape)),[l,c,h,p]=r.shape,[d,f]=sp.getImageCenter(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c){k=y[t+w*(h*p)+v*p+i]}u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},qN={kernelName:"Round",backendName:"cpu",kernelFunc:_w("Round",(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}))},KN=Jw((e=>1/Math.sqrt(e))),XN={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:Ow("Rsqrt",KN)};function JN(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return Zc(n,t.dtype);const d=Zc(c,t.dtype);"string"==typeof u||"number"==typeof u?d.values.fill(u):"boolean"==typeof u&&d.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[e*s+n]:d.values[u*s+n]=0===t.rank?p[0]:p[e*s+n]}return d}const YN={kernelName:"ScatterNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=sp.calculateShapes(a,s,i),p=JN(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function QN(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function ZN(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function eT(e,t,n,r,s,a){const i=so.getArrayFromDType("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?QN(n,t[e+u]):ZN(n,t[e+u])}return i}const tT={kernelName:"SearchSorted",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=eT(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const nT={kernelName:"Select",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Dw([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=Tu(s.dtype,a.dtype),h=so.makeZerosTypedArray(so.sizeFromShape(s.shape),c);let p=0;const d=0===i||i>1||1===s.shape.length?1:so.sizeFromShape(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},rT=sp.SELU_SCALEALPHA,sT=sp.SELU_SCALE,aT={kernelName:"Selu",backendName:"cpu",kernelFunc:_w("Selu",(e=>e>=0?sT*e:rT*(Math.exp(e)-1)))},iT={kernelName:"Sign",backendName:"cpu",kernelFunc:_w("Sign",(e=>e<0?-1:e>0?1:0))},oT={kernelName:"Sin",backendName:"cpu",kernelFunc:_w("Sin",(e=>Math.sin(e)))},uT={kernelName:"Sinh",backendName:"cpu",kernelFunc:_w("Sinh",(e=>Math.sinh(e)))},lT=Math.log(1.1920928955078125e-7)+2,cT={kernelName:"Softplus",backendName:"cpu",kernelFunc:_w("Softplus",(e=>{const t=e>-lT,n=e<lT,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}))};const hT={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Dw([s],"spaceToBatchND");const o=so.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=EN.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=sp.getReshaped(l.shape,a,o,!1),h=sp.getPermuted(c.length,a.length,!1),p=sp.getReshapedPermuted(l.shape,a,o,!1),d=mk({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Tk({inputs:{x:d},backend:n,attrs:{perm:h}}),m=mk({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function pT(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(sp.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[so.getArrayFromDType(n,0),[0,h],so.getArrayFromDType(s,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(sp.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(sp.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=so.getArrayFromDType(n,t*h),p=so.getArrayFromDType(s,t),d=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=d[n],i=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e){if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}}return[a,[t,h],p,l,c]}}const dT={kernelName:"SparseFillEmptyRows",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=pT(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function fT(e,t,n,r,s){const a=so.sizeFromShape(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(sp.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(sp.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error(sp.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/l);if(l*e!==a)throw new Error(sp.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(so.sizeFromShape(u)!==a)throw new Error(sp.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*u[e+1]}const f=so.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],u]}const mT={kernelName:"SparseReshape",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=fT(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function gT(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error(sp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const p=h.reduce(((e,t)=>e*t),1),d=so.getArrayFromDType(n,p);if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error(sp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=s[f];for(;;){let t=0;if(m<o){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error(sp.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(sp.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&d.fill(i,g*l,y*l);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(sp.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<l;t++)d[y*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&d.fill(i,g*l,c*l),[d,h]}const yT={kernelName:"SparseSegmentMean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=gT(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const bT={kernelName:"SparseSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=gT(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const xT={kernelName:"SparseToDense",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=sp.calculateShapes(a,s,o),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=JN(f,n.bufferSync(a),o,p,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":m=JN(f,n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],d);break;case"int32":m=JN(f,n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],d);break;case"string":m=JN(f,n.bufferSync(a),o,p,c,l,u,h,so.decodeString(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const vT={kernelName:"SplitV",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=so.parseAxisParam(i,s.shape)[0],u=sp.prepareSplitSize(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=qk({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},wT=Jw((e=>Math.sqrt(e))),kT={kernelName:"Sqrt",backendName:"cpu",kernelFunc:_w("Sqrt",(e=>Math.sqrt(e)))},IT={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Dw(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ST=Ww(((e,t)=>{const n=e-t;return n*n})),NT={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:lk("SquaredDifference",ST)},TT={kernelName:"Step",backendName:"cpu",kernelFunc:_w("Step",((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}))};function CT(e,t,n,r){const s=Zc(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const ET={kernelName:"StridedSlice",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;Dw(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Mh.sliceInfo(s.shape,a,i,o,u,l,c,h,p);let w;if(m)w=mk({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){so.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Mh.computeOutShape(b,x,v),t=qk({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=mk({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=CT(d,n.bufferSync(s),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class $T{constructor(e,t,n,r,s,a){this.separator=so.encodeString(e),this.nGramWidths=t,this.leftPad=so.encodeString(n),this.rightPad=so.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length;p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=so.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function AT(e,t,n,r,s,a,i,o){return new $T(n,r,s,a,i,o).compute(e,t)}const RT={kernelName:"StringNGrams",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=AT(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function FT(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function DT(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;FT(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=so.getArrayFromDType("int32",2*a),l=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}const _T={kernelName:"StringSplit",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=DT(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function OT(e,t){const n=so.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=so.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const MT={kernelName:"StringToHashBucketFast",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=OT(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},LT={kernelName:"Tan",backendName:"cpu",kernelFunc:_w("Tan",(e=>Math.tan(e)))},zT=_w("Tanh",(e=>Math.tanh(e)));function PT(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Zc(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const BT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function VT(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);VT(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(so.swap(e,n,t),BT(e[r],s)>0&&so.swap(e,n,r);a<i;){for(so.swap(e,a,i),a++,i--;BT(e[a],s)<0;)a+=1;for(;BT(e[i],s)>0;)i-=1}0===BT(e[n],s)?so.swap(e,n,i):(i+=1,so.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function WT(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=so.getTypedArrayFromDType(n,i*r),l=so.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(VT(i,r),i=i.slice(0,r)),s&&i.sort(BT);const c=t*r,h=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Zc(c,n,u),Zc(c,"int32",l)]}function UT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return so.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return so.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return so.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function GT(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function jT(e,t,n,r,s,a,i,o,u,l,c){return GT(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function HT(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*GT(e,t,n,r,s,a,i,h,p,l,c)+(u-p)*GT(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*GT(e,t,n,r,s,a,i,d,p,l,c)+(u-p)*GT(e,t,n,r,s,a,i,d,f,l,c))}function qT(e,t,n,r){const s=so.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new ou(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new ou(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const KT=[xk,wk,kk,Ik,fk,Sk,Ek,$k,Ak,Rk,Fk,Dk,_k,Ok,Mk,Vk,Wk,Uk,Gk,bk,jk,Xk,Qk,Zk,uk,tI,nI,nk,rI,uI,cI,hI,pI,dI,fI,mI,gI,yI,bI,xI,vI,wI,kI,SI,NI,TI,CI,EI,$I,AI,LI,Lw,zI,VI,KI,YI,ZI,tS,hS,dS,fS,gS,yS,bS,xS,wS,IS,NS,CS,Pw,ES,iI,$S,AS,RS,Vw,DS,OS,LS,PS,BS,VS,WS,US,GS,jS,KS,JS,YS,QS,ZS,eN,nN,rN,sN,iN,oN,uN,hN,_I,dN,mN,yN,xN,wN,kN,NN,CN,EN,$N,jw,RN,LN,PN,ak,rS,BN,qw,Xw,gk,VN,WN,UN,GN,jN,HN,qN,XN,YN,tT,nT,aT,Zw,iT,oT,uT,Kk,cN,cT,hT,dT,mT,yT,bT,xT,vT,kT,IT,NT,TT,ET,RT,_T,MT,oS,MI,LT,{kernelName:"Tanh",backendName:"cpu",kernelFunc:zT},{kernelName:"Tile",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Dw(s,"tile");const i=PT(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:"TopK",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;Dw(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=WT(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:"Transform",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=so.computeStrides(s.shape),b=y[0],x=y[1],v=y[2],w=so.computeStrides(g),k=w[0],I=w[1],S=w[2],N=so.getTypedArrayFromDType(s.dtype,so.sizeFromShape(g));N.fill(u);const T=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<d;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=UT(c,p,o),m=UT(d,h,o);switch(i){case"nearest":a=jT(T,h,p,b,x,v,e,m,f,s,u);break;case"bilinear":a=HT(T,h,p,b,x,v,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+r*S+s]=a}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}},Ck,{kernelName:"Unique",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Dw(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=qT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:"Unpack",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=qk({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=mk({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},{kernelName:"UnsortedSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;Dw(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=QI({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=so.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=BI({inputs:{a:r,b:c},backend:n}),i=ok({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=DI({inputs:{a:i,b:s},backend:n}),h=OI({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=TN({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},SN];for(const e of KT)to(e);const XT=ff.whereImpl;class JT extends Ea{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ca(this,Nf())}nextDataId(){return JT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ci().get("IS_NODE")&&sp.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&so.isString(n[0])){const s=n.map((e=>so.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return sp.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>so.decodeString(e)));return Zc(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zc(e.shape,e.dtype,t)}makeOutput(e,t,n){return Nf().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=so.now();e();return{kernelMs:so.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Dw([e],"where");const t=this.readSync(e.dataId);return XT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}JT.nextDataId=0;function YT(){let e,t,n,r,s,a,i,o,u,l;return 2===Ci().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function QT(e,t,n="index"){const r=so.computeStrides(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function ZT(e,t,n="index"){const r=so.computeStrides(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function eC(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function tC(e){const t=so.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Af("cpu",(()=>new JT),1);const nC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:rC}=sp;function sC(e,t,n){const r=[];if(e.forEach((e=>{const t=so.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=mC(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?iC(e,r):aC(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=rC(e.shapeInfo.logicalShape,t.logicalShape),u=fC(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===so.sizeFromShape(e.shapeInfo.logicalShape),m=1===so.sizeFromShape(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&so.arraysEqual(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=fC(u),c=rC(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=YT(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${oC}\n    ${uC}\n    ${lC}\n  `}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return hC();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(so.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return hC();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(so.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ZT(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=QT(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ZT(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=QT(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=QT(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=QT(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=cC);return[h,u,c,s,l,a,n.userCode].join("\n")}function aC(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=pC(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${dC(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=pC(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;return t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&so.arraysEqual(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=so.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${aC(gC(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${yC(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${dC(e)}\n      }\n    `;const l=a[0],c=a[1],h=pC(r);if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;return t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=so.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${aC(gC(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${yC(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${dC(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=pC(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=so.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${aC(gC(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${yC(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${dC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=pC(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=so.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${aC(gC(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${yC(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${dC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=pC(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=so.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${aC(gC(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${yC(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${dC(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=pC(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function iC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=YT();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=YT();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=YT();if(null!=a&&so.arraysEqual(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${iC(gC(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${yC(a,r)});\n        }\n      `}const o=YT();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=YT();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const oC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",uC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function hC(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function pC(e){return`offset${e}`}function dC(e){const t=e.name,n=so.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function fC(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function mC(e,t,n){const{newShape:r,keptDims:s}=so.squeezeShape(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!so.arraysEqual(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function gC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function yC(e,t){return t.map((t=>e[t])).join(", ")}const bC={},xC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vC(e,t){bC[e]=t}function wC(e,t){if(!(e in bC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete bC[e]}),!1),Ci().getBool("SOFTWARE_WEBGL_ENABLED")&&(xC.failIfMajorPerformanceCaveat=!1);return 1===e?n.getContext("webgl",xC)||n.getContext("experimental-webgl",xC):n.getContext("webgl2",xC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;bC[e]=n}const n=bC[e];return null==n||n.isContextLost()?(delete bC[e],wC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),bC[e])}var kC,IC,SC,NC,TC,CC;function EC(e,t){return[t,e]}function $C(e){const t=so.sizeFromShape(e),n=Math.ceil(t/4);return so.sizeToSquarishShape(n)}function AC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function RC(e,t){const n=e;let r,s,a,i,o,u,l,c,h,p;return 2===Ci().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function FC(e,t){const n=t();return Ci().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}(IC=kC||(kC={}))[IC.DENSE=0]="DENSE",IC[IC.SHARED_BATCH=1]="SHARED_BATCH",(NC=SC||(SC={}))[NC.RENDER=0]="RENDER",NC[NC.UPLOAD=1]="UPLOAD",NC[NC.PIXELS=2]="PIXELS",NC[NC.DOWNLOAD=3]="DOWNLOAD",(CC=TC||(TC={}))[CC.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",CC[CC.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",CC[CC.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",CC[CC.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",CC[CC.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function DC(e){return!!(Ci().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function _C(e,t){return GC(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function OC(e,t){const n=GC(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(FC(e,(()=>e.shaderSource(n,t))),FC(e,(()=>e.compileShader(n))),Ci().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw LC(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const MC=/ERROR: [0-9]+:([0-9]+):/g;function LC(e,t){const n=MC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>so.rightPad((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${so.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function zC(e,t){if(FC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function PC(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(FC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),FC(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),FC(e,(()=>e.enableVertexAttribArray(o))),!0)}function BC(e,t,n,r){FC(e,(()=>function(e,t,n){jC(e,n),FC(e,(()=>e.activeTexture(e.TEXTURE0+n))),FC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),FC(e,(()=>e.uniform1i(n,r)))}function VC(e,t,n){FC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),FC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function WC(e,t){FC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),FC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function UC(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function GC(e,t,n){const r=FC(e,(()=>t()));if(null==r)throw new Error(n);return r}function jC(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function HC(e,t=2){return so.sizeFromShape(e.slice(0,e.length-t))}function qC(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function KC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[HC(e),...qC(e)]),t}function XC(e){return e%2==0}function JC(e,t){if(e=e.slice(-2),t=t.slice(-2),so.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(XC(n)&&XC(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&XC(e[0])&&XC(t[0])}let YC,QC;function ZC(e){if(null==YC){const t=wC(e);YC=t.getParameter(t.MAX_TEXTURE_SIZE)}return YC}function eE(e){if(null==QC){const t=wC(e);QC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,QC)}function tE(e){if(0===e)return 0;let t;const n=wC(e);return t=nE(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:nE(n,"EXT_disjoint_timer_query")?1:0,t}function nE(e,t){return null!=e.getExtension(t)}function rE(e){try{if(null!=wC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function sE(e){if(0===e)return!1;const t=wC(e);if(1===e){if(!nE(t,"OES_texture_float"))return!1}else if(!nE(t,"EXT_color_buffer_float"))return!1;return iE(t)}function aE(e){if(0===e)return!1;const t=wC(e);if(1!==e){if(nE(t,"EXT_color_buffer_float"))return iE(t);const e="EXT_color_buffer_half_float";if(nE(t,e)){const n=t.getExtension(e);return function(e,t){const n=RC(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!nE(t,"OES_texture_float"))return!1;if(!nE(t,"WEBGL_color_buffer_float"))return!1;return iE(t)}function iE(e){const t=RC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function oE(e){if(2!==e)return!1;return null!=wC(e).fenceSync}function uE(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&so.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}function lE(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=sC(s,i,t),u=OC(e.gl,o),l=e.createProgram(u);return Ci().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},cE(e,t,l))}function cE(e,t,n){const r={},s={},a={},i=[];let o,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Ci().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];r[o]=e.getUniformLocation(n,o,p),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),l=e.getUniformLocation(n,"outShapeStrides",p),u=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function hE(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!so.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!so.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function pE(e){return Ci().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class dE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=sp.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=pE(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}function fE(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function mE(e,t){return 1===t?[e]:fE(e,t)}function gE(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}class yE{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=sp.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=pE(s);let a="";if(r)if(0===s||1===so.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${fC(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=mE("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function bE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const xE={kernelName:"Identity",backendName:"webgl",kernelFunc:bE};function vE(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=bE({inputs:{x:r},backend:n}),u=bE({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const wE={kernelName:"Complex",backendName:"webgl",kernelFunc:vE},kE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const IE={kernelName:"LeakyRelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",so.createScalarValue(a,"float32")),o=Ci().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yE(kE,s.shape,i.shape):new dE("return (a < 0.) ? b * a : a;",s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},SE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const NE={kernelName:"Prelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Ci().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yE(SE,r.shape,s.shape):new dE("return (a < 0.) ? b * a : a;",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};class TE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class CE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}function EE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Ci().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new CE(i.shape,t):new TE(i.shape,e),o.runWebGLProgram(l,[i],u)}}function $E({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new dE(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],Tu(n.dtype,r.dtype))})),a=vE({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Tu(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?sp.fromUint8ToStringArray(e):e,r="string"===u.dtype?sp.fromUint8ToStringArray(t):t,[a,i]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=Ci().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new yE(t,u.shape,l.shape,n):new dE(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function AE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?SE:"return (a < 0.) ? b * a : a;";if("leakyrelu"===e)return t?kE:"return (a < 0.) ? b * a : a;";if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class RE{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pE(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const FE="return areal * breal - aimag * bimag;",DE="return areal * bimag + aimag * breal;";class _E{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=sp.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}var OE={};e(OE,"simpleAbsImpl",(()=>vk)),e(OE,"addImpl",(()=>hk)),e(OE,"bincountImpl",(()=>Jk)),e(OE,"bincountReduceImpl",(()=>Yk)),e(OE,"castImpl",(()=>ik)),e(OE,"ceilImpl",(()=>eI)),e(OE,"concatImpl",(()=>sI)),e(OE,"equalImpl",(()=>PI)),e(OE,"expImpl",(()=>XI)),e(OE,"expm1Impl",(()=>eS)),e(OE,"floorImpl",(()=>mS)),e(OE,"gatherNdImpl",(()=>vS)),e(OE,"gatherV2Impl",(()=>kS)),e(OE,"greaterImpl",(()=>SS)),e(OE,"greaterEqualImpl",(()=>TS)),e(OE,"lessImpl",(()=>FS)),e(OE,"lessEqualImpl",(()=>_S)),e(OE,"linSpaceImpl",(()=>MS)),e(OE,"logImpl",(()=>zS)),e(OE,"maxImpl",(()=>HS)),e(OE,"maximumImpl",(()=>XS)),e(OE,"minimumImpl",(()=>aN)),e(OE,"multiplyImpl",(()=>RI)),e(OE,"negImpl",(()=>pN)),e(OE,"notEqualImpl",(()=>vN)),e(OE,"prodImpl",(()=>AN)),e(OE,"raggedTensorToTensorImpl",(()=>MN)),e(OE,"rangeImpl",(()=>zN)),e(OE,"rsqrtImpl",(()=>KN)),e(OE,"scatterImpl",(()=>JN)),e(OE,"sigmoidImpl",(()=>Yw)),e(OE,"sliceImpl",(()=>Hk)),e(OE,"sparseFillEmptyRowsImpl",(()=>pT)),e(OE,"sparseReshapeImpl",(()=>fT)),e(OE,"sparseSegmentReductionImpl",(()=>gT)),e(OE,"sqrtImpl",(()=>wT)),e(OE,"squaredDifferenceImpl",(()=>ST)),e(OE,"stridedSliceImpl",(()=>CT)),e(OE,"stringNGramsImpl",(()=>AT)),e(OE,"stringSplitImpl",(()=>DT)),e(OE,"stringToHashBucketFastImpl",(()=>OT)),e(OE,"subImpl",(()=>sS)),e(OE,"tileImpl",(()=>PT)),e(OE,"topKImpl",(()=>WT)),e(OE,"transposeImpl",(()=>Nk)),e(OE,"uniqueImpl",(()=>qT));const{addImpl:ME,bincountImpl:LE,bincountReduceImpl:zE,castImpl:PE,ceilImpl:BE,concatImpl:VE,equalImpl:WE,expImpl:UE,expm1Impl:GE,floorImpl:jE,gatherNdImpl:HE,gatherV2Impl:qE,greaterImpl:KE,greaterEqualImpl:XE,lessImpl:JE,lessEqualImpl:YE,linSpaceImpl:QE,logImpl:ZE,maxImpl:e$,maximumImpl:t$,minimumImpl:n$,multiplyImpl:r$,negImpl:s$,notEqualImpl:a$,prodImpl:i$,raggedTensorToTensorImpl:o$,rangeImpl:u$,rsqrtImpl:l$,scatterImpl:c$,sigmoidImpl:h$,simpleAbsImpl:p$,sliceImpl:d$,sparseFillEmptyRowsImpl:f$,sparseReshapeImpl:m$,sparseSegmentReductionImpl:g$,sqrtImpl:y$,stridedSliceImpl:b$,stringNGramsImpl:x$,stringSplitImpl:v$,stringToHashBucketFastImpl:w$,subImpl:k$,tileImpl:I$,topKImpl:S$,transposeImpl:N$,uniqueImpl:T$}=OE;function C$(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=sp.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new _E(FE,r.shape,s.shape),i=new _E(DE,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=vE({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=r$(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=Ci().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yE("return a * b;",r.shape,s.shape):new dE("return a * b;",r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const E$={kernelName:"Multiply",backendName:"webgl",kernelFunc:C$};class $${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?eC(["r","c","d"],"inputShape"):QT(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function A$(e,t,n){const r=[HC(e.shape),...qC(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[HC(t),...qC(t)],i=new $$(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function R$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=so.sizeFromShape(s.shape),u=so.inferFromImplicitShape(a,o),l=so.sizeFromShape(u);so.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||JC(s.shape,u)||null!==c.texture&&JC(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):A$(s,u,i)}const F$={kernelName:"Reshape",backendName:"webgl",kernelFunc:R$};class D${constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${so.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class _${constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function O$(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=sp.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new D$({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new D$({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new _$({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class M${constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=fC(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class L${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=fC(this.rank),s=fE("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function z$(e,t,n){const r=Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new L$(e.shape,t):new M$(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function P$(e,t,n,r){const s=t,a=e.shape.length,i=so.parseAxisParam(s,e.shape);let o=i;const u=sp.getAxesPermutation(o,a),l=null!=u;let c=e;l&&(c=z$(e,u,r),o=sp.getInnerMostAxes(o.length,a)),sp.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=sp.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=sp.expandShapeToKeepDim(h,i));const f=so.sizeFromShape(p),m=R$({inputs:{x:c},attrs:{shape:[so.sizeFromShape(e.shape)/f,f]},backend:r}),g=O$(m,Cu(e.dtype),"sum",r),y=R$({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}function B$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return P$(s,a,i,n)}const V$={kernelName:"Sum",backendName:"webgl",kernelFunc:B$};function W$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=N$(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype);i.texData.get(l.dataId).values=t}else l=z$(s,a,i);return l}const U$={kernelName:"Transpose",backendName:"webgl",kernelFunc:W$};function G$({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=so.sizeFromShape(m),b=so.sizeFromShape(g),x=Sh.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);so.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,d]:[y,d,h],w=r?[b,f,p]:[b,p,f],k=R$({inputs:{x:e},backend:s,attrs:{shape:v}}),I=R$({inputs:{x:t},backend:s,attrs:{shape:w}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,E=null!=i,$="leakyrelu"===u,A=null!=u?AE(u,!0):null;let R;if((1===d||1===f)&&T>1e3&&!1===(C||E||$||null!=A)){let e=k,t=I;n&&(e=W$({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=W$({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=R$({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;a&&(u=R$({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),S.push(u));const l=C$({inputs:{a:i,b:u},backend:s});R=B$({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=Tu(e.dtype,t.dtype),l=new RE(v,w,[N,d,f],n,r,C,A,E,$),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),$){const e=s.makeTensorInfo([],"float32",so.createScalarValue(o,"float32"));c.push(e),S.push(e)}R=s.runWebGLProgram(l,c,u)}const F=R$({inputs:{x:R},backend:s,attrs:{shape:x}});S.push(R);for(const e of S)s.disposeIntermediateTensorInfo(e);return F}const j$={kernelName:"_FusedMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return G$({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}};const H$={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=p$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Ci().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CE(r.shape,"return abs(x);"):new TE(r.shape,"return abs(x);"),n.runWebGLProgram(s,[r],r.dtype)}},q$={kernelName:"Acos",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"})},K$={kernelName:"Acosh",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"})},X$={kernelName:"Add",backendName:"webgl",kernelFunc:$E({opSnippet:"return a + b;",packedOpSnippet:"return a + b;",supportsComplex:!0,cpuKernelImpl:ME})};class J${constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Y${constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Q$={kernelName:"AddN",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return bE({inputs:{x:s[0]},backend:r});if(s.length>Ci().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Tu(e,t))),i=s.map((e=>e.shape)),o=Ci().getBool("WEBGL_PACK")?new Y$(s[0].shape,i):new J$(s[0].shape,i);return r.runWebGLProgram(o,s,a)}};const Z$={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=so.parseAxisParam(a,s.shape);let l=u;const c=sp.getAxesPermutation(l,o);let h=s;null!=c&&(h=W$({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sp.getInnerMostAxes(l.length,o)),sp.assertAxesAreInnerMostDims("all",l,o);const[p,d]=sp.computeOutAndReduceShapes(h.shape,l),f=R$({inputs:{x:h},backend:n,attrs:{shape:[-1,so.sizeFromShape(d)]}}),m=O$(f,f.dtype,"all",n);let g;if(i){g=R$({inputs:{x:m},backend:n,attrs:{shape:sp.expandShapeToKeepDim(p,u)}})}else g=R$({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const eA={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=so.parseAxisParam(a,s.shape);let l=u;const c=sp.getAxesPermutation(l,o);let h=s;null!=c&&(h=W$({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sp.getInnerMostAxes(l.length,o)),sp.assertAxesAreInnerMostDims("any",l,o);const[p,d]=sp.computeOutAndReduceShapes(h.shape,l),f=R$({inputs:{x:h},backend:n,attrs:{shape:[-1,so.sizeFromShape(d)]}}),m=O$(f,f.dtype,"any",n);let g;if(i){g=R$({inputs:{x:m},backend:n,attrs:{shape:sp.expandShapeToKeepDim(p,u)}})}else g=R$({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class tA{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class nA{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,so.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=fC(o),l=mE("coords",o);let c,h;if(1===a){h=o+1;const e=fC(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=mE("sourceLocR",h-1).concat("inIdx.r"),g=mE("sourceLocG",h-1).concat("inIdx.g"),y=mE("sourceLocB",h-1).concat("inIdx.b"),b=mE("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function rA(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=sp.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new tA(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=rA(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function sA(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],i=sp.computeOptimalWindowSize(a),o=new nA(s,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=sA(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function aA(e,t,n,r){const s=[n];if(sp.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ci().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=sp.computeOutAndReduceShapes(i.shape,s),l=so.sizeFromShape(u),c=R$({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=rA(e,c,r);n.push(h);const p=R$({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return sA(e,t,r)}const iA={kernelName:"ArgMax",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=so.parseAxisParam(a,s.shape);const o=sp.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=W$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sp.getInnerMostAxes(i.length,u.shape.length)),sp.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=aA(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const oA={kernelName:"ArgMin",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=so.parseAxisParam(a,s.shape);const o=sp.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=W$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sp.getInnerMostAxes(i.length,u.shape.length)),sp.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=aA(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},uA={kernelName:"Asin",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"})},lA={kernelName:"Asinh",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"})},cA={kernelName:"Atan",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"})},hA={kernelName:"Atan2",backendName:"webgl",kernelFunc:$E({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})},pA={kernelName:"Atanh",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"})};class dA{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class fA{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const mA={kernelName:"AvgPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;uE(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;so.assert(sp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=sp.computePool2DInfo(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&so.arraysEqual(l.inShape,l.outShape))return bE({inputs:{x:s},backend:n});const c=new dA(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const gA={kernelName:"AvgPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=sp.computePool3DInfo(s.shape,a,i,[1,1,1],o,u,l),h=new fA(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class yA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xA={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=sp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new bA(h);return n.runWebGLProgram(p,[s],i.dtype)}};const vA={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;uE([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=sp.computePool2DInfo(i.shape,o,u,1,l),h=new yA(c);return n.runWebGLProgram(h,[s],i.dtype)}};const wA={kernelName:"BatchMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return G$({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class kA{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],sp.assertAndGetBroadcastShape(e,t),sp.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(sp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(sp.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class IA{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],sp.assertAndGetBroadcastShape(e,t),sp.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(sp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(sp.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const SA={kernelName:"FusedBatchNorm",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;so.assert(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),so.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),so.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=Ci().getBool("WEBGL_PACK_NORMALIZATION")?new IA(r.shape,s.shape,a.shape,c,h,u):new kA(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class NA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=fC(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return TA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${TA[t]} = start[${t}] + coords.${TA[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const TA=["x","y","z","w","u","v"];class CA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=fC(this.rank),n=mE("coords",this.rank),r=mE("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function EA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=Mh.parseSliceParams(s,a,i);if(Mh.assertParamsValid(s,o,u),0===so.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=d$(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=Mh.isSliceContinous(s.shape,o,u);if(l||!c){const e=Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CA(u):new NA(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Mh.computeFlatOffset(t,so.computeStrides(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const $A={kernelName:"Slice",backendName:"webgl",kernelFunc:EA},AA={kernelName:"BatchToSpaceND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;so.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=sp.getReshaped(s.shape,a,o),l=sp.getPermuted(u.length,a.length),c=sp.getReshapedPermuted(s.shape,a,o),h=sp.getSliceBeginCoords(i,a.length),p=sp.getSliceSize(c,i,a.length),d=[],f=R$({inputs:{x:s},backend:n,attrs:{shape:u}}),m=W$({inputs:{x:f},backend:n,attrs:{perm:l}}),g=R$({inputs:{x:m},backend:n,attrs:{shape:c}}),y=EA({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const RA={kernelName:"Bincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=LE(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};const FA={kernelName:"BroadcastArgs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=sp.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},DA=$E({opSnippet:"return float(a != b);",cpuKernelImpl:a$,dtype:"bool"}),_A={kernelName:"NotEqual",backendName:"webgl",kernelFunc:DA};function OA(e){const{inputs:t,backend:n}=e,{input:r}=t;return bE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const MA={kernelName:"Real",backendName:"webgl",kernelFunc:OA};function LA(e,t){const n=new TE(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const zA={kernelName:"Cast",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return bE({inputs:{x:a},backend:r});const t=Pf(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=vE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=OA({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!so.hasEncodingLoss(a.dtype,i)){const e=bE({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=PE(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return LA(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",so.getTypedArrayFromDType("bool",1)),t=DA({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},PA={kernelName:"Ceil",backendName:"webgl",kernelFunc:EE({opSnippet:"return ceil(x);",packedOpSnippet:"return ceil(x);",cpuKernelImpl:BE})};class BA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class VA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const WA={kernelName:"ClipByValue",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Ci().getBool("WEBGL_PACK_CLIP")?new VA(s.shape):new BA(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class UA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function GA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const jA={kernelName:"ComplexAbs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new UA(r.shape),i=[GA(r,s.complexTensorInfos.real),GA(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class HA{constructor(e){this.outputShape=[],this.outputShape=sp.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class qA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=sp.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=fC(r),a=mE("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${KA(i,u,t)}),\n            vec2(${KA(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${KA(i,u,d)}),\n          vec2(${KA(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function KA(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function XA(e){const{inputs:t,backend:n}=e,{input:r}=t;return bE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const JA={kernelName:"Imag",backendName:"webgl",kernelFunc:XA};function YA(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>OA({inputs:{input:e},backend:n}))),s=e.map((e=>XA({inputs:{input:e},backend:n}))),a=YA(r,t,n),i=YA(s,t,n),o=vE({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=so.sizeFromShape(e.shape.slice(t));return R$({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=sp.computeOutShape(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=VE(a,i,r,o),l=sp.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=Ci().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){const r=[];for(let s=0;s<e.length;s+=a){const i=e.slice(s,s+a);r.push(YA(i,t,n))}const s=YA(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return s}if(Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new qA(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:i,outShape:o}=function(e,t,n){const r=sp.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>R$({inputs:{x:e},attrs:{shape:[-1,so.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new HA(i.map((e=>e.shape))),l=n.runWebGLProgram(u,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=R$({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function QA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=so.parseAxisParam(s,t[0].shape)[0],i=sp.computeOutShape(t.map((e=>e.shape)),a);if(0===so.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>so.sizeFromShape(e.shape)>0));if(1===o.length)return bE({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return sp.assertParamsConsistent(u,a),YA(o,a,n)}const ZA={kernelName:"Concat",backendName:"webgl",kernelFunc:QA};class eR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class tR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pE(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=a%2==0?so.nearestLargerEven(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class rR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length);const{dataFormat:n}=t,r=YT(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function sR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function aR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=sR(a.shape,d);null!=e&&(a=R$({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=sR(s.shape,d);null!=e&&(s=R$({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(!((1===h||1===p)&&c>1e3)&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&so.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,so.assert(JC(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=R$({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=G$({a:h,b:d,backend:r,transposeA:false,transposeB:false,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(g.dataId);so.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,f=bE({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=R$({inputs:{x:e},backend:r,attrs:{shape:d?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=R$({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=G$({a:d?l:c,b:d?c:l,transposeA:!d,transposeB:false,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=R$({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function iR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=sR(a.shape,f);null!=e&&(a=R$({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=sR(s.shape,f);null!=e&&(s=R$({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=R$({inputs:{x:t},backend:r,attrs:{shape:[1,m,so.sizeFromShape(t.shape)/m]}});b.push(x);const v=new rR(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),I=R$({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=s,N=null!=a,T="leakyrelu"===o,C=o?AE(o,!0):null,E=new RE(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),$=f?[I,x]:[x,I];if(s&&$.push(s),N&&$.push(a),T){const e=r.makeTensorInfo([],"float32",so.createScalarValue(i,"float32"));$.push(e),b.push(e)}const A=r.runWebGLProgram(E,$,"float32"),R=R$({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const oR={kernelName:"Conv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=sp.convertConv2DDataFormat(u),p=sp.computeConv2DInfo(s.shape,a.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&Ci().getBool("WEBGL_EXP_CONV")){const e=new nR(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Ci().getBool("WEBGL_CONV_IM2COL"))d=iR({x:s,filter:a,convInfo:p,backend:n});else{const e=new eR(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=aR({x:s,filter:a,convInfo:p,backend:n});const f=R$({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class uR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const pR={kernelName:"Conv2DBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=sp.convertConv2DDataFormat(u),p=sp.computeConv2DInfo(s.shape,c,i,1,o,l,!1,h),d=new uR(p);return n.runWebGLProgram(d,[s,a],"float32")}};const dR={kernelName:"Conv2DBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=sp.convertConv2DDataFormat(l),p=sp.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h),d=new lR(p);return n.runWebGLProgram(d,[s,a],"float32")}};const fR={kernelName:"Conv3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=sp.computeConv3DInfo(s.shape,a.shape,i,u,o),c=new tR(l);return n.runWebGLProgram(c,[s,a],"float32")}};const mR={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=sp.computeConv3DInfo(s.shape,u,i,1,o),c=new cR(l);return n.runWebGLProgram(c,[s,a],"float32")}};const gR={kernelName:"Conv3DBackpropInputV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=sp.computeConv3DInfo(u,a.shape,o,1,i),c=new hR(l);return n.runWebGLProgram(c,[s,a],"float32")}},yR={kernelName:"Cos",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"})},bR={kernelName:"Cosh",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"})};class xR{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const vR={kernelName:"CropAndResize",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new xR(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var wR,kR;(kR=wR||(wR={})).Prod="*",kR.Sum="+";class IR{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===wR.Prod?"1.0":"0.0",i=n?a:`getX(${SR(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${fC(s)} coords = getOutputCoords();\n        int end = ${NR(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${NR(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${SR(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function SR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function NR(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function TR(e,t,n,r,s,a){const i=t.shape.length,o=sp.getAxesPermutation([r],i);let u=t;null!=o&&(u=W$({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=sp.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=bE({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new IR(e,u.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new IR(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=W$({inputs:{x:h},backend:n,attrs:{perm:sp.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const CR={kernelName:"Cumprod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return TR(wR.Prod,s,n,a,i,o)}};const ER={kernelName:"Cumsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return TR(wR.Sum,s,n,a,i,o)}};const $R={kernelName:"DenseBincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=LE(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=zE(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class AR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const RR={kernelName:"DepthToSpace",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new AR("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class FR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pE(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class DR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pE(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?so.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const _R={kernelName:"DepthwiseConv2dNative",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),so.assert(sp.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=sp.computeConv2DInfo(s.shape,a.shape,i,c,o,l,!0);let p;p=Ci().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new DR(h):new FR(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}};class OR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const LR={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=sp.computeConv2DInfo(s.shape,c,i,o,u,l,!0),p=new OR(h);return n.runWebGLProgram(p,[s,a],"float32")}};const zR={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=sp.computeConv2DInfo(c,a.shape,i,o,u,l,!0),p=new MR(h);return n.runWebGLProgram(p,[s,a],"float32")}};class PR{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const BR={kernelName:"Diag",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=so.sizeFromShape(r.shape),i=R$({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new PR(a),u=n.runWebGLProgram(o,[i],i.dtype),l=R$({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class VR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const WR={kernelName:"Dilation2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=sp.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new VR(l);c=n.runWebGLProgram(h,[s,a],"float32");const p=R$({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}};const UR={kernelName:"Einsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=sp.decodeEinsumEquation(s,a.length);sp.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=sp.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=sp.getEinsumPermutation(d,u[t]);let s;sp.isIdentityPermutation(e)?s=a[t]:(s=W$({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);so.arraysEqual(s.shape,i)||(s=R$({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=C$({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=B$({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},GR={kernelName:"Elu",backendName:"webgl",kernelFunc:EE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},jR={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Ci().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new dE("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},HR={kernelName:"Equal",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:WE})},qR={kernelName:"Erf",backendName:"webgl",kernelFunc:EE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${sp.ERF_P};\n  float a1 = ${sp.ERF_A1};\n  float a2 = ${sp.ERF_A2};\n  float a3 = ${sp.ERF_A3};\n  float a4 = ${sp.ERF_A4};\n  float a5 = ${sp.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},KR=EE({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:UE,dtype:"float32"}),XR={kernelName:"Exp",backendName:"webgl",kernelFunc:KR};function JR(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(so.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),R$({inputs:{x:a},backend:r,attrs:{shape:o}})}const YR={kernelName:"ExpandDims",backendName:"webgl",kernelFunc:JR},QR={kernelName:"Expm1",backendName:"webgl",kernelFunc:EE({opSnippet:"return exp(x) - 1.0;",packedOpSnippet:"return exp(x) - 1.0;",cpuKernelImpl:GE})};class ZR{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function eF(e,t,n){const r=n.texData.get(e.dataId),s=so.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=R$({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new ZR("real",o,t),l=new ZR("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=vE({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=R$({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const tF={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eF(r,!1,n)}};class nF{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function rF(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||so.inferDtype(s),"string"===a){const e=so.getArrayFromDType(a,so.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new nF(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const sF={kernelName:"Fill",backendName:"webgl",kernelFunc:rF};class aF{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const iF={kernelName:"FlipLeftRight",backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new aF(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},oF={kernelName:"Floor",backendName:"webgl",kernelFunc:EE({opSnippet:"return floor(x);",packedOpSnippet:"return floor(x);",cpuKernelImpl:jE})},uF={kernelName:"FloorDiv",backendName:"webgl",kernelFunc:$E({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"})};class lF{constructor(e){this.variableNames=["A"];const t=YT(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class cF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=YT(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const hF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(o||i){const e=Ci().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=pF&&e===dF||(dF=e,pF=document.createElement("canvas").getContext("2d",{willReadFrequently:dF})),pF.canvas.width=u,pF.canvas.height=l,pF.drawImage(s,0,0,u,l),s=pF.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=SC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Ci().getBool("WEBGL_PACK")?new cF(h):new lF(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let pF,dF=Ci().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const fF={kernelName:"FusedConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=sp.convertConv2DDataFormat(c),g=sp.computeConv2DInfo(s.shape,a.shape,u,h,l,p,!1,m);let y;const b=[],x=null!=i,v=null!=o,w="leakyrelu"===d,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=R$({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",so.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Ci().getBool("WEBGL_EXP_CONV")){const e=d?AE(d,!0):null,t=new nR(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Ci().getBool("WEBGL_CONV_IM2COL"))y=iR({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?AE(d,!1):null,t=new eR(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=aR({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const I=R$({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const mF={kernelName:"FusedDepthwiseConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),so.assert(sp.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=sp.computeConv2DInfo(s.shape,a.shape,u,m,l,h,!0),y=Ci().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?AE(p,y):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",so.createScalarValue(d,"float32"));x.push(e),f.push(e)}let I;I=y?new DR(g,v,b,w,k):new FR(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class gF{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=fC(t.length),a=fC(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=fC(r.length),u=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${u};\n            flattenIndex += index * ${i};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const yF={kernelName:"GatherNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=so.sizeFromShape(r.shape),[u,l,c,h]=sp.prepareAndValidate(r,s),p=R$({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=R$({inputs:{x:r},backend:n,attrs:{shape:[so.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=HE(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new gF(i,h,[l,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=R$({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class bF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=fC(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function xF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=so.parseAxisParam(i,s.shape)[0];if(Ci().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];so.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=sp.segment_util.collectGatherOpShapeInfo(s,a,u,o),c=so.sizeFromShape(a.shape),h=[],p=R$({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=R$({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=qE(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new bF(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=R$({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const vF={kernelName:"GatherV2",backendName:"webgl",kernelFunc:xF},wF={kernelName:"Greater",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:KE,dtype:"bool"})},kF={kernelName:"GreaterEqual",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:XE})};const IF={kernelName:"IFFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eF(r,!0,n)}},SF={kernelName:"IsFinite",backendName:"webgl",kernelFunc:EE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"})},NF={kernelName:"IsInf",backendName:"webgl",kernelFunc:EE({opSnippet:"return float(isinf(x));",dtype:"bool"})},TF={kernelName:"IsNan",backendName:"webgl",kernelFunc:EE({opSnippet:"return float(isnan(x));",dtype:"bool"})},CF={kernelName:"Less",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:JE,dtype:"bool"})},EF={kernelName:"LessEqual",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:YE,dtype:"bool"})};const $F={kernelName:"LinSpace",backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=QE(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},AF={kernelName:"Log",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:ZE})},RF={kernelName:"Log1p",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"})},FF={kernelName:"LogicalAnd",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"})},DF={kernelName:"LogicalNot",backendName:"webgl",kernelFunc:EE({opSnippet:"return float(!(x >= 1.0));"})},_F={kernelName:"LogicalOr",backendName:"webgl",kernelFunc:$E({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"})};class OF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class MF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const LF={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=Ci().getBool("WEBGL_PACK_NORMALIZATION")?new MF(s.shape,a,i,o,u):new OF(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class zF{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const PF={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new zF(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function BF(e,t,n,r){const s=so.sizeFromShape(t),a=R$({inputs:{x:e},attrs:{shape:[so.sizeFromShape(e.shape)/s,s]},backend:r}),i=O$(a,e.dtype,"max",r),o=R$({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}function VF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=so.parseAxisParam(a,s.shape);let l=u;const c=sp.getAxesPermutation(l,o),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=N$(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype);n.texData.get(d.dataId).values=r}else d=z$(s,c,n);l=sp.getInnerMostAxes(l.length,o)}sp.assertAxesAreInnerMostDims("max",l,o);const[f,m]=sp.computeOutAndReduceShapes(d.shape,l);let g,y=f;if(i&&(y=sp.expandShapeToKeepDim(f,u)),p){const e=n.texData.get(d.dataId).values,t=e$(e,so.sizeFromShape(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=BF(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const WF={kernelName:"Max",backendName:"webgl",kernelFunc:VF},UF={kernelName:"Maximum",backendName:"webgl",kernelFunc:$E({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:t$})};const GF={kernelName:"MaxPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;uE(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;so.assert(sp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=sp.computePool2DInfo(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&so.arraysEqual(l.inShape,l.outShape))return bE({inputs:{x:s},backend:n});const c=new dA(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const jF={kernelName:"MaxPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=sp.computePool3DInfo(s.shape,a,i,[1,1,1],o,l,u),h=new fA(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class HF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KF={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=sp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new fA(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new qF(h),m=n.runWebGLProgram(f,[s,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}};const XF={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;uE([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=sp.computePool2DInfo(o.shape,u,l,1,c,h),d=new dA(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new HF(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};function JF(e,t,n,r){let s=new dA(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");s=new dA(n,"max",!0,!0,t);return[a,r.runWebGLProgram(s,[e],"float32")]}const YF={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;so.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];so.assert(sp.eitherStridesOrDilationsAreOne(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=sp.computePool2DInfo(r.shape,s,a,l,i),[h,p]=JF(r,o,c,u);return[h,p]}};function QF(e,t,n,r){const s=so.sizeFromShape(t),a=R$({inputs:{x:e},attrs:{shape:[so.sizeFromShape(e.shape)/s,s]},backend:r}),i=O$(a,"float32","mean",r),o=R$({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}const ZF={kernelName:"Mean",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=so.parseAxisParam(a,r.shape);let l=u;const c=sp.getAxesPermutation(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=N$(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=z$(r,c,i);d.push(f),l=sp.getInnerMostAxes(l.length,o)}sp.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=sp.computeOutAndReduceShapes(f.shape,l);let y=m;s&&(y=sp.expandShapeToKeepDim(m,u));const b=QF(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}};const eD={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=so.parseAxisParam(a,s.shape);let l=u;const c=sp.getAxesPermutation(l,o);let h=s;null!=c&&(h=W$({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sp.getInnerMostAxes(l.length,s.shape.length)),sp.assertAxesAreInnerMostDims("min",l,o);const[p,d]=sp.computeOutAndReduceShapes(h.shape,l),f=R$({inputs:{x:h},backend:n,attrs:{shape:[-1,so.sizeFromShape(d)]}}),m=O$(f,f.dtype,"min",n);let g;if(i){g=R$({inputs:{x:m},backend:n,attrs:{shape:sp.expandShapeToKeepDim(p,u)}})}else g=R$({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},tD={kernelName:"Minimum",backendName:"webgl",kernelFunc:$E({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:n$})};class nD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=fC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class rD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=fC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=mE("rc",r),u=mE("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const sD={kernelName:"MirrorPad",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rD(r.shape,s,a):new nD(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},aD={kernelName:"Mod",backendName:"webgl",kernelFunc:$E({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};class iD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const oD=$E({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uD={kernelName:"RealDiv",backendName:"webgl",kernelFunc:oD},lD=$E({opSnippet:"return a - b;",packedOpSnippet:"return a - b;",supportsComplex:!0,cpuKernelImpl:k$}),cD={kernelName:"Sub",backendName:"webgl",kernelFunc:lD};function hD(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=so.parseAxisParam([a],s.shape),o=VF({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=sp.expandShapeToKeepDim(o.shape,i),l=R$({inputs:{x:o},backend:n,attrs:{shape:u}}),c=lD({inputs:{a:s,b:l},backend:n}),h=KR({inputs:{x:c},backend:n}),p=B$({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=R$({inputs:{x:p},backend:n,attrs:{shape:u}}),f=oD({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const pD={kernelName:"Softmax",backendName:"webgl",kernelFunc:hD};const dD={kernelName:"Multinomial",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:hD({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new iD(l,c,a),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}};const fD={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=s$(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Ci().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CE(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new TE(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},mD=ff.nonMaxSuppressionV3Impl;const gD={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:function(e){sp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=mD(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},yD=ff.nonMaxSuppressionV4Impl;const bD={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:function(e){sp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=yD(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},xD=ff.nonMaxSuppressionV5Impl;const vD={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){sp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=xD(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class wD{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const kD={kernelName:"OneHot",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r,l=so.sizeFromShape(s.shape),c=new wD(l,i,o,u),h=R$({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=R$({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function ID(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=OA({inputs:{input:r},backend:n}),t=ID({inputs:{x:e},backend:n}),s=XA({inputs:{input:r},backend:n}),a=ID({inputs:{x:s},backend:n}),i=vE({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return rF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const SD={kernelName:"ZerosLike",backendName:"webgl",kernelFunc:ID};const ND={kernelName:"OnesLike",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=OA({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=XA({inputs:{input:s},backend:r}),i=ID({inputs:{x:a},backend:r}),o=vE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return rF({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const TD={kernelName:"Pack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return JR({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{so.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),so.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=QA({inputs:t.map((e=>{const t=JR({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class CD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=fC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ED{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=fC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=mE("rc",r),u=mE("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const $D=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===so.sizeFromShape(s.shape)){return rF({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}})}const o=Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ED(s.shape,a,i):new CD(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},AD={kernelName:"PadV2",backendName:"webgl",kernelFunc:$D},RD={kernelName:"Pow",backendName:"webgl",kernelFunc:$E({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};const FD={kernelName:"Prod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=so.parseAxisParam(a,s.shape);let c=l;const h=sp.getAxesPermutation(c,o);let p,d=s;if(null!=h&&(d=W$({inputs:{x:s},backend:n,attrs:{perm:h}}),c=sp.getInnerMostAxes(c.length,o),u.push(d)),sp.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=i$(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=sp.computeOutAndReduceShapes(d.shape,c),r=so.sizeFromShape(t),a=R$({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=O$(a,Cu(s.dtype),"prod",n);p=R$({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(p);const e=sp.expandShapeToKeepDim(p.shape,l);p=R$({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const DD={kernelName:"RaggedTensorToTensor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=o$(l,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}},_D=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=u$(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},OD={kernelName:"Range",backendName:"webgl",kernelFunc:_D},MD={kernelName:"Reciprocal",backendName:"webgl",kernelFunc:EE({opSnippet:"return 1.0 / x;"})},LD={kernelName:"Relu",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})},zD={kernelName:"Relu6",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})};class PD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class BD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VD={kernelName:"ResizeBilinear",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ci().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BD(s.shape,u,l,a,i):new PD(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class WD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const UD={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new WD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class GD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class jD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const HD={kernelName:"ResizeNearestNeighbor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ci().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jD(s.shape,u,l,a,i):new GD(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class qD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const KD={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new qD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class XD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=fC(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class JD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=mE("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=fC(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const YD={kernelName:"Reverse",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=so.parseAxisParam(a,s.shape);if(0===i)return bE({inputs:{x:s},backend:n});const u=Ci().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JD(s.shape,o):new XD(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class QD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ZD={kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new QD(r.shape,a),[l,c]=sp.getImageCenter(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},e_={kernelName:"Round",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"})},t_={kernelName:"Rsqrt",backendName:"webgl",kernelFunc:EE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:l$})};class n_{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=fC(s.length),u=fC(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const r_={kernelName:"ScatterNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=sp.calculateShapes(a,s,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const d=R$({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=R$({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new n_(u,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=R$({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class s_{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Ci().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const a_={kernelName:"SearchSorted",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new s_(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class i_{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=fC(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const o_={kernelName:"Select",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new i_(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Tu(s.dtype,a.dtype))}},u_={kernelName:"Selu",backendName:"webgl",kernelFunc:EE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${sp.SELU_SCALEALPHA};\n  float scale = ${sp.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`})},l_={kernelName:"Sigmoid",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:h$})},c_={kernelName:"Sign",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"})},h_={kernelName:"Sin",backendName:"webgl",kernelFunc:EE({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"})},p_={kernelName:"Sinh",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"})},d_={kernelName:"Softplus",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"})},f_={kernelName:"SpaceToBatchND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;so.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=$D({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=sp.getReshaped(c.shape,a,o,!1),p=sp.getPermuted(h.length,a.length,!1),d=sp.getReshapedPermuted(c.shape,a,o,!1),f=R$({inputs:{x:c},backend:n,attrs:{shape:h}}),m=W$({inputs:{x:f},backend:n,attrs:{perm:p}}),g=R$({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const m_={kernelName:"SparseFillEmptyRows",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=f$(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const g_={kernelName:"SparseReshape",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=m$(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const y_={kernelName:"SparseSegmentMean",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=g$(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const b_={kernelName:"SparseSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=g$(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const x_={kernelName:"SparseToDense",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=sp.calculateShapes(a,s,o);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=so.decodeString(n.readSync(i.dataId)[0]),d=c$(e,t,o,p,c,l,u,h,r,false);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new n_(l,u,s.shape.length,a.shape.length,h,[p,1],false),f=n.runWebGLProgram(d,[a,s,i],a.dtype),m=R$({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const v_={kernelName:"SplitV",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=so.parseAxisParam(i,s.shape)[0],u=sp.prepareSplitSize(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=EA({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},w_={kernelName:"Sqrt",backendName:"webgl",kernelFunc:EE({opSnippet:"return sqrt(x);",packedOpSnippet:"return sqrt(x);",cpuKernelImpl:y$})},k_={kernelName:"Square",backendName:"webgl",kernelFunc:EE({opSnippet:"return x * x;"})},I_={kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:$E({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"})};const S_={kernelName:"Step",backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new TE(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class N_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=fC(n.length),a=fC(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const T_={kernelName:"StridedSlice",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Mh.sliceInfo(s.shape,a,i,o,u,l,c,h,p);let w;if(m)w=R$({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){so.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Mh.computeOutShape(b,x,v),t=EA({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=R$({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Zc(s.shape,s.dtype,e),r=b$(d,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new N_(b,v,d);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=R$({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const C_={kernelName:"StringNGrams",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=x$(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const E_={kernelName:"StringSplit",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=v$(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const $_={kernelName:"StringToHashBucketFast",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=w$(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},A_={kernelName:"Tan",backendName:"webgl",kernelFunc:EE({opSnippet:"return tan(x);"})},R_={kernelName:"Tanh",backendName:"webgl",kernelFunc:EE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"})};class F_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=fC(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function D_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>so.decodeString(e))):e,r=Zc(s.shape,s.dtype,t),i=I$(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new F_(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const __={kernelName:"Tile",backendName:"webgl",kernelFunc:D_};class O_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class M_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function L_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function z_(e){let t=1;for(;t<e;)t*=2;return t}const P_={kernelName:"TopK",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Ci().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Ci().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=S$(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,rF({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=so.sizeFromShape(l)/c,m=R$({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&L_(n,d);const g=z_(a),y=z_(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const s=x(),a=new O_(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),L_(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new M_([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),L_(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=EA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),L_(n,w);let k=xF({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});L_(n,m);const I=l.slice(0,-1);I.push(a),w=b,b=R$({inputs:{x:b},attrs:{shape:I},backend:n}),L_(n,w);const S=k;return k=R$({inputs:{x:k},attrs:{shape:I},backend:n}),L_(n,S),[k,b]}};class B_{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const V_={kernelName:"Transform",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=new B_(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}};const W_={kernelName:"Unique",backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;uE(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=T$(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const U_={kernelName:"Unpack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=EA({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=R$({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class G_{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const j_=[j$,H$,q$,K$,X$,Q$,Z$,eA,iA,oA,uA,lA,cA,hA,pA,mA,gA,xA,vA,wA,SA,AA,RA,FA,zA,PA,WA,wE,jA,ZA,oR,pR,dR,fR,mR,gR,yR,bR,vR,CR,ER,$R,RR,_R,LR,zR,BR,WR,UR,GR,jR,HR,qR,XR,YR,QR,tF,sF,iF,oF,uF,hF,fF,mF,yF,vF,wF,kF,xE,IF,JA,SF,NF,TF,IE,CF,EF,$F,AF,RF,FF,DF,_F,LF,PF,WF,UF,GF,jF,KF,XF,YF,ZF,eD,tD,sD,aD,dD,E$,fD,gD,bD,vD,_A,kD,ND,TD,AD,RD,NE,FD,DD,OD,MA,uD,MD,LD,zD,F$,VD,UD,HD,KD,YD,ZD,e_,t_,r_,a_,o_,u_,l_,c_,h_,p_,$A,pD,d_,f_,m_,g_,y_,b_,x_,v_,w_,k_,I_,S_,T_,C_,E_,$_,cD,V$,A_,R_,__,P_,V_,U$,W_,U_,{kernelName:"UnsortedSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=sp.getAxesPermutation([l],o);let h=s;null!=c&&(h=W$({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=sp.getInnerMostAxes(1,o)[0]);const p=sp.segment_util.computeOutShape(h.shape,l,i),d=so.sizeFromShape([h.shape[l]]),f=R$({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=Cu(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=sp.segment_util.segOpComputeOptimalWindowSize(o,a),c=new G_({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const p=_D({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=D_({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});u.push(p),u.push(d);return g(h,t,d,s,a)},y=R$({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=sp.getUndoAxesPermutation(c);b=W$({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},SD];for(const e of j_)to(e);const H_=Ci();H_.registerFlag("HAS_WEBGL",(()=>H_.getNumber("WEBGL_VERSION")>0)),H_.registerFlag("WEBGL_VERSION",(()=>rE(2)?2:rE(1)?1:0)),H_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),H_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===H_.get("WEBGL_VERSION"))),H_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),H_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),H_.registerFlag("WEBGL_PACK",(()=>H_.getBool("HAS_WEBGL"))),H_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_CLIP",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_PACK_REDUCE",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_CONV_IM2COL",(()=>H_.getBool("WEBGL_PACK"))),H_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ZC(H_.getNumber("WEBGL_VERSION")))),H_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>eE(H_.getNumber("WEBGL_VERSION")))),H_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=H_.getNumber("WEBGL_VERSION");return 0===e?0:tE(e)})),H_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>H_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Pu.isMobile())),H_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>sE(H_.getNumber("WEBGL_VERSION")))),H_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!H_.getBool("WEBGL_FORCE_F16_TEXTURES")&&H_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),H_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>aE(H_.getNumber("WEBGL_VERSION")))),H_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>oE(H_.getNumber("WEBGL_VERSION")))),H_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>H_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),H_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),H_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Pu.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),H_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),H_.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),H_.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),H_.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),H_.registerFlag("WEBGL_EXP_CONV",(()=>!1)),H_.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>H_.getBool("IS_TEST")));class q_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=kC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=YT();this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZT(["r","c","d"],e):QT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class K_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=kC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=YT();this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZT(["r","c","d"],e):QT(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class X_{constructor(e){this.variableNames=["A"],this.outTexUsage=SC.DOWNLOAD;const t=YT();this.outputShape=e,this.userCode=`\n      ${nC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class J_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=SC.DOWNLOAD;const t=YT();this.outputShape=e,this.userCode=`\n      ${nC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Y_{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=YT();this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Q_{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=YT();this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function Z_(e){const t=YT();return function(e,t){const n=GC(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(FC(e,(()=>e.shaderSource(n,t))),FC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function eO(e){return function(e,t){const n=GC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return FC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),FC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function tO(e){return function(e,t){const n=GC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return FC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),FC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function nO(e,t,n,r,s,a){!function(e,t){const n=Ci().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return GC(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return FC(e,(()=>e.bindTexture(o,i))),FC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),FC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),FC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),FC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ci().getNumber("WEBGL_VERSION")?FC(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):FC(e,(()=>e.texStorage2D(o,1,r,t,n))),FC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function rO(e){return e.internalFormatFloat}function sO(e){return e.internalFormatHalfFloat}function aO(e){return e.downloadTextureFormat}function iO(e){return e.internalFormatPackedFloat}function oO(e){return e.internalFormatPackedHalfFloat}function uO(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=AC(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class lO{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ci().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,vC(t,e)):this.gl=wC(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ci().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=_C(this.gl,e),nE(this.gl,t))this.textureHalfFloatExtension=_C(this.gl,t);else if(Ci().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),nE(this.gl,r))this.colorBufferHalfFloatExtension=_C(this.gl,r);else if(Ci().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",nE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!nE(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=eO(this.gl),this.indexBuffer=tO(this.gl),this.framebuffer=function(e){return GC(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=RC(this.gl,this.textureHalfFloatExtension)}get debug(){return Ci().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;FC(e,(()=>e.finish())),FC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),FC(e,(()=>e.deleteFramebuffer(this.framebuffer))),FC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),FC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),FC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EC(t,n);return nO(e,s,a,rO(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EC(t,n);return nO(e,s,a,sO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EC(t,n);return nO(e,s,a,aO(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){FC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ci().getNumber("WEBGL_VERSION")?FC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):FC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ci().getNumber("WEBGL_VERSION")?FC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):FC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),FC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;FC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===Ci().getNumber("WEBGL_VERSION")?FC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):FC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),FC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=AC(t,n);return nO(e,s,a,oO(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=AC(t,n);return nO(e,s,a,iO(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(WC(this.gl,this.framebuffer),this.outputTexture=null),FC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=EC(t,n),i=new Uint8Array(t*n*4);return FC(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return uO(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();FC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return FC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),FC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),FC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ci().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return FC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=Z_(t));const n=function(e){return GC(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return FC(t,(()=>t.attachShader(n,this.vertexShader))),FC(t,(()=>t.attachShader(n,e))),function(e,t){if(FC(e,(()=>e.linkProgram(t))),!Ci().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&zC(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return FC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),PC(e,t,"clipSpacePos",n,3,20,0)&&PC(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&FC(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&zC(this.gl,this.program),FC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return GC(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),FC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),BC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=AC(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&zC(this.gl,this.program),UC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),FC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),FC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=_C(this.gl,2===Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await so.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||so.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),VC(this.gl,e,this.framebuffer),this.debug&&UC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(VC(this.gl,this.outputTexture,this.framebuffer),this.debug&&UC(this.gl)):WC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;VC(r,e,this.framebuffer),this.debug&&UC(r),this.outputTexture=e,FC(r,(()=>r.viewport(0,0,t,n))),FC(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),FC(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}class cO{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pE(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=mE("rc",this.rank),t=fC(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class hO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=dO(t,n),s=fO(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=pO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===TC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===TC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===TC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===TC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===TC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=dO(n,r),a=fO(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=pO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ci().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pO(e,t,n,r,s){const a=function(e,t){switch(e){case TC.PACKED_2X2_FLOAT32:return iO(t);case TC.PACKED_2X2_FLOAT16:return oO(t);case TC.UNPACKED_FLOAT32:return rO(t);case TC.UNPACKED_FLOAT16:return sO(t);case TC.PACKED_4X1_UNSIGNED_BYTE:return aO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=AC(e[0],e[1]);i=t*n}else{const[t,n]=EC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function dO(e,t){if(e===SC.UPLOAD)return TC.PACKED_2X2_FLOAT32;if(e===SC.RENDER||null==e)return function(e){return Ci().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TC.PACKED_2X2_FLOAT32:TC.UNPACKED_FLOAT32:e?TC.PACKED_2X2_FLOAT16:TC.UNPACKED_FLOAT16}(t);if(e===SC.DOWNLOAD||e===SC.PIXELS)return TC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function fO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class mO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pE(this.outputShape.length);const t=e.length,n=mE("rc",t),r=fC(t),s=gE(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const gO=ff.whereImpl,yO={};const bO=Ci().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class xO extends Ea{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ci().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof lO)t=e;else{const n=wC(Ci().getNumber("WEBGL_VERSION"),e);t=new lO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=wC(Ci().getNumber("WEBGL_VERSION"));t=new lO(e),this.binaryCache=((n=Ci().getNumber("WEBGL_VERSION"))in yO||(yO[n]={}),yO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new hO(this.gpgpu),this.numMBBeforeWarning=null==Ci().global.screen?1024:Ci().global.screen.height*Ci().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Ca(this,Nf())}nextDataId(){return xO.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ci().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ci().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:SC.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(Ci().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:SC.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new CE(i,"return x;"):new TE(i,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=so.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=sp.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=so.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new CE(r,"return x;"):new TE(r,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ci().getBool("DEBUG")&&!Ci().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ci().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Ci().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...$C(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=sp.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=so.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;FC(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Nf().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new CE(s,"return x;"):new TE(s,"return x;");const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Nf().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>so.decodeString(e)));return Zc(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zc(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!DC(n)){if(Ci().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=so.sizeFromShape(t);if(Ci().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...$C(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Ci().getBool("WEBGL_PACK")&&!0===r,i=a?KC(t):t,o=a?new J_(i):new X_(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=so.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=so.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=so.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:so.now(),endMs:null}}endTimer(e){return Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=so.now(),e)}async getQueryTime(e){if(Ci().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=bO){return Ci().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&so.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){sp.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return gO(e.shape,t)}packedUnaryOp(e,t,n){const r=new CE(e.shape,t),s=this.compileAndRun(r,[e],n);return Nf().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=p$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ci().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"return abs(x);",e.dtype);const t=new TE(e.shape,"return abs(x);"),n=this.compileAndRun(t,[e]);return Nf().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&so.isString(n[0])){const s=n.map((e=>so.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Nf().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new mO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new cO(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[HC(e.shape),...qC(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[HC(t),...qC(t)],a=new $$(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){const e=so.sizeFromShape(s),n=t[0]*t[1]*4;so.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=KC(s);let o;o=r?new K_(i):new q_(i);const u=[null!=t?t:$C(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===kC.DENSE){const t=null!=a?a:$C(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===so.sizeFromShape(i.shape))return o.values=so.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&so.sizeFromShape(t.shape)<=Ci().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!JC(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=mC(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=so.computeStrides(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&so.arraysEqual(t.shape,a),f=1===so.sizeFromShape(t.shape),m=sp.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&so.arraysEqual(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Ci().getNumber("WEBGL_VERSION")}`,a}(e,l,c),p=this.getAndSaveBinary(h,(()=>lE(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),Ci().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(hE(t.inShapeInfos,n),hE([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ci().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=mC(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(so.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=so.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ci().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=so.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ci().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ci().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Cf((()=>{if(!Ci().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ci().getBool("DEBUG");Ci().set("DEBUG",!1);const t=this.abs(jf(1e-8)).dataSync()[0];if(Ci().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=so.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Ci().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?so.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=so.squeezeShape(e);e=t.newShape}let r=so.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=HC(e);let n=2,s=2;return e.length&&([n,s]=qC(e)),r=t*(n/2)*(s/2),so.sizeToSquarishShape(r).map((e=>2*e))}return so.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=s){const e=KC(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&p||([i,h]=AC(c[0],c[1])),a=o?new Q_(e,p):new Y_(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?SC.PIXELS:SC.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ci().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=so.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*so.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Vx(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw LC(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=cE(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}xO.nextDataId=0;Pu.isBrowser()&&Af("webgl",(()=>new xO),2);class vO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vO.prototype)}}class wO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wO.prototype)}}class kO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kO.prototype)}}class IO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,IO.prototype)}}class SO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,SO.prototype)}}class NO extends Error{constructor(e){super(e),Object.setPrototypeOf(this,NO.prototype)}}class TO{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function CO(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function EO(e,t){if(!e)throw new SO(t)}function $O(e,t){let n=0;for(const r of e)r===t&&n++;return n}function AO(e){return 1===e.length?e[0]:e}function RO(e){return Array.isArray(e)?e:[e]}function FO(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function DO(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let _O={};function OO(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function MO(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>MO(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?MO(t):e[n]=t.value)}}}function LO(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in _O)a=_O[s];else if(a=t[s],null==a)throw new kO(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new kO(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in _O?[o,u]=_O.className:i in t&&([o,u]=t[i]),null==o)throw new kO(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(_O))e[t]=_O[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},_O);for(const e of Object.keys(n))_O[e]=n[e];MO(a.config);const r=u(o,a.config,n,s);return _O=Object.assign({},t),r}{const e=Object.assign({},_O);for(const e of Object.keys(n))_O[e]=n[e];const t=new o(a.config);return _O=Object.assign({},e),t}}}function zO(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function PO(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function BO(e){if(null==e)throw new kO(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function VO(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new kO(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function WO(e,t,n=0,r=1/0){return EO(n>=0),EO(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function UO(e,t){Array.isArray(e)?(so.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>UO(e,`element ${n+1} of ${t}`)))):so.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${GO(e)}.`))}function GO(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>GO(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function jO(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let HO=0;function qO(){return HO++}const KO={};function XO(e=""){return e in KO||(KO[e]=0),KO[e]+=1,e+KO[e].toString()}const JO=["channelsFirst","channelsLast"],YO=["nearest","bilinear"],QO=["valid","same","causal"],ZO=["max","avg"],eM=["sum","mul","concat","ave"],tM=new Map;function nM(e){VO(JO,"DataFormat",e)}function rM(e){VO(QO,"PaddingMode",e)}function sM(e){VO(ZO,"PoolMode",e)}const aM=[];function iM(e,t){aM.push(e);try{const e=t();return aM.pop(),e}catch(e){throw aM.pop(),e}}function oM(e){if(!cM(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===aM.length?"":aM.join("/")+"/")+e}function uM(e){if(!cM(e))throw new Error("Not a valid tensor name: '"+e+"'");tM.has(e)||tM.set(e,0);const t=tM.get(e);if(tM.set(e,tM.get(e)+1),t>0){const n=`${e}_${t}`;return tM.set(n,1),n}return e}const lM=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cM(e){return!!e.match(lM)}function hM(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function pM(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function dM(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function fM(e,t){if(t<e)throw new kO(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let mM;function gM(){return null==mM&&(mM=Lu.backend.epsilon()),mM}function yM(e,t){return eh(e,t)}function bM(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Hp(e,n)}function xM(e,t,n){return Cf((()=>{switch(e.rank){case 1:return jb(e,t,n);case 2:return Hb(e,[t,0],[n,e.shape[1]]);case 3:return qb(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Kb(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Lf(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Lf(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new kO(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function vM(e,t,n){return Cf((()=>{switch(e.rank){case 1:return jb(e,t,n);case 2:return Hb(e,[0,t],[e.shape[0],n]);case 3:return qb(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Kb(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new kO(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function wM(e,t,n,r){return Cf((()=>{switch(e.rank){case 1:return jb(e,t,n);case 2:switch(r){case 1:return xM(e,t,n);case 2:return vM(e,t,n);default:throw new kO(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return xM(e,t,n);case 2:return qb(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return vM(e,t,n);default:throw new kO(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return xM(e,t,n);case 2:return Kb(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Kb(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return vM(e,t,n);default:throw new kO(`The axis is not within the rank of the tensor ${r}`)}default:throw new kO(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function kM(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),_f(e,t)}function IM(e,t){switch(e.rank){case 1:return uy([e,t]);case 2:return ly([e,t],0);case 3:return cy([e,t],0);case 4:return hy([e,t],0);default:throw new kO(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function SM(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new kO(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ym(e,t)}function NM(e,t=0,n=1,r,s){return Ab(e,t,n,r,s)}function TM(e,t,n,r){if(e.rank<2||t.rank<2)throw new IO(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new IO(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const s=!1,a=!1;return qf.matMul({a:e,b:t,transposeA:s,transposeB:a,bias:r?$M(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=Hp(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Hp(og(t,c),[u,-1]);const h=[...s,...l],p=!1,d=!1;return Hp(qf.matMul({a:e,b:t,transposeA:p,transposeB:d,bias:r?$M(e.rank,r,"channelsLast"):null,activation:n}),h)}}function CM(e,t,n){return Cf((()=>(t=Array.isArray(t)?im(t,"int32"):eh(t,"int32"),Dy(e,t,n))))}function EM(e){return Wp(e,e)}function $M(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new kO(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Hp(t,[1,r[0],1,1,1]):Hp(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Hp(t,[1,1,1,1,r[0]]):Hp(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Hp(t,[1,r[0],1,1]):Hp(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Hp(t,[1,1,1,r[0]]):Hp(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Hp(t,[1,r[0],1]):Hp(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Hp(t,[1,1,r[0]]):Hp(t,[1].concat(r))}else if(e<3)return t;throw new kO(`Unsupported input rank by biasAdd: ${t.rank}`)}function AM(e,t,n){return Cf((()=>(null==n&&(n="channelsLast"),nM(n),Kf(e,$M(e.rank,t,n)))))}function RM(e,t,n,r){return Cf((()=>vx(e,t,n,r)))}function FM(e,t,n=!1){return n?e():t()}const DM=["fanIn","fanOut","fanAvg"],_M=["normal","uniform","truncatedNormal"];class OM extends ep.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class MM extends OM{apply(e,t){return Pf(e,t)}}MM.className="Zeros",ep.registerClass(MM);class LM extends OM{apply(e,t){return fg(e,t)}}LM.className="Ones",ep.registerClass(LM);class zM extends OM{constructor(e){if(super(),"object"!=typeof e)throw new kO(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new kO(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Cf((()=>Wp(jf(this.value),fg(e,t))))}getConfig(){return{value:this.value}}}zM.className="Constant",ep.registerClass(zM);class PM extends OM{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Fb(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}PM.className="RandomUniform",ep.registerClass(PM);class BM extends OM{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new IO(`randomNormal does not support dType ${t}.`);return NM(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}BM.className="RandomNormal",ep.registerClass(BM);class VM extends OM{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new IO(`truncatedNormal does not support dType ${t}.`);return nx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}VM.className="TruncatedNormal",ep.registerClass(VM);class WM extends OM{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Cf((()=>{if(2!==e.length||e[0]!==e[1])throw new kO("Identity matrix initializer can only be used for 2D square matrices.");return Wp(this.gain,sg(e[0]))}))}getConfig(){return{gain:this.gain}}}WM.className="Identity",ep.registerClass(WM);class UM extends OM{constructor(e){if(super(),e.scale<0)throw new kO(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,VO(DM,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){VO(_M,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(nM(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=hM(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=hM(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=hM(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new IO(`${this.getClassName()} does not support dType ${t}.`);return nx(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Fb(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}UM.className="VarianceScaling",ep.registerClass(UM);class GM extends UM{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UM.className}}GM.className="GlorotUniform",ep.registerClass(GM);class jM extends UM{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UM.className}}jM.className="GlorotNormal",ep.registerClass(jM);class HM extends UM{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UM.className}}HM.className="HeNormal",ep.registerClass(HM);class qM extends UM{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UM.className}}qM.className="HeUniform",ep.registerClass(qM);class KM extends UM{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UM.className}}KM.className="LeCunNormal",ep.registerClass(KM);class XM extends UM{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UM.className}}XM.className="LeCunNormal",ep.registerClass(XM);class JM extends OM{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new IO("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Cf((()=>{if(e.length<2)throw new IO("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=NM(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Tx.gramSchmidt(t);return e[0]>e[1]&&(n=og(n)),Wp(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}JM.className="Orthogonal",ep.registerClass(JM);const YM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function QM(e,t={}){return LO(e,ep.SerializationMap.getMap().classNameMap,t,"initializer")}function ZM(e){return OO(e)}function eL(e){if("string"==typeof e){const t=e in YM?YM[e]:e;if("GlorotNormal"===t)return new jM;if("GlorotUniform"===t)return new GM;if("HeNormal"===t)return new HM;if("HeUniform"===t)return new qM;if("LeCunNormal"===t)return new KM;if("LeCunUniform"===t)return new XM;{const e={};return e.className=t,e.config={},QM(e)}}return e instanceof OM?e:QM(e)}function tL(e){return Array.isArray(e)&&Array.isArray(e[0])}function nL(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function rL(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new kO(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function sL(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new kO(`Expected exactly 1 Shape; got ${e.length}`)}return e}function aL(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class iL{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=qO(),n=null==n?"Variable":n,this.originalName=oM(n),this.name=uM(this.originalName),this.trainable_=r,this.constraint=s,this.val=ix(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function oL(e){return e.map((e=>e.read()))}function uL(e){e.forEach((e=>{e[0].write(e[1])}))}class lL{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class cL{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=qO(),null!=a&&(this.originalName=oM(a),this.name=uM(this.originalName)),this.rank=t.length}}let hL=0;class pL{constructor(e,t){this.callArgs=t,this.id=hL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dL=0;class fL extends ep.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=FO(e)+"_"+XO(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new wO(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new kO(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return AO(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return AO(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new vO(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new vO(`Layer ${this.name} is not connected, no input to return.`);return AO(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new vO(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new vO(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return AO(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=RO(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=RO(this.inputSpec);if(e.length!==t.length)throw new kO(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new kO(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new kO(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new kO(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new kO(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new kO(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new kO(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=RO(e);let r=!0;for(const e of n)if(!(e instanceof cL)){r=!1;break}let s=!0;for(const e of n)if(e instanceof cL){s=!1;break}if(r===s)throw new kO("Arguments to apply() must be all SymbolicTensors or all Tensors");return iM(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of RO(e))t.push(n.shape);this.build(AO(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=RO(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=AO(a),null!=this.activityRegularizer)throw new IO("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=RO(e);const t=[];for(const n of e)t.push(n.shape);return AO(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new cL(a,n,this,RO(e),t,this.name,r))):new cL(a,r,this,RO(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new IO("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new vO(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new vO(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new wO(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return aL(this.weights)}build(e){this.built=!0}getWeights(e=!1){return oL(e?this.trainableWeights:this.weights)}setWeights(e){Cf((()=>{const t=this.weights;if(t.length!==e.length)throw new kO(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=oL(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!so.arraysEqual(a.shape,o.shape))throw new kO(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}uL(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new kO(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():eL("zeros"));const u=r.apply(t,n),l=new iL(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=RO(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=RO(e);t=RO(t),n=RO(n),r=RO(r),s=nL(s),a=nL(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new pL({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function mL(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=mL(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class gL extends fL{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:XO("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new kO("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new kO("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new kO("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new cL(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new pL({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new kO(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function yL(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new kO("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new gL({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}gL.className="InputLayer",ep.registerClass(gL);class bL{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bL)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new kO(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return eh(t,e.dtype)}catch(n){throw new kO(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof cL){if(null==this.id2Value[e.id])throw new kO(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new kO(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof cL){if(null==this.id2Value[e.id])throw new kO(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new kO(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ef(this.id2Mask)}}const xL=new TO,vL=new TO;function wL(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=xL.get(c);if(null==p){const e=function(e,t){so.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=IL(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=IL(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:kL(r)}}(i,t);p=e.sorted,h=e.recipientCounts,xL.put(c,p),vL.put(c,h)}h={},s||Object.assign(h,vL.get(c));const d=new bL(t);for(let e=0;e<p.length;++e){if(null!=r){const e=Tf().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof gL)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=RO(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=SL(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||Ef(f)}return d.disposeMasks(),a?u:u[0]}function kL(e){const t={};for(const n in e)t[n]=e[n].size;return t}function IL(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function SL(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function NL(e,t){return Cf((()=>Ym(Xp(Wp(e,e),t,!0))))}Ci().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=xL&&xL.setMaxEntries(e),null!=vL&&vL.setMaxEntries(e)}));class TL extends ep.Serializable{getConfig(){return{}}}class CL extends TL{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Cf((()=>{const t=NL(e,this.axis),n=oy(t,0,this.maxValue);return Wp(e,Dm(n,Kf(gM(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}CL.className="MaxNorm",ep.registerClass(CL);class EL extends TL{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Cf((()=>Dm(e,Kf(gM(),NL(e,this.axis)))))}getConfig(){return{axis:this.axis}}}EL.className="UnitNorm",ep.registerClass(EL);class $L extends TL{apply(e){return Gp(e)}}$L.className="NonNeg",ep.registerClass($L);class AL extends TL{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Cf((()=>{const t=NL(e,this.axis),n=Kf(Wp(this.rate,oy(t,this.minValue,this.maxValue)),Wp(1-this.rate,t));return Wp(e,Dm(n,Kf(gM(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}AL.className="MinMaxNorm",ep.registerClass(AL);const RL={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function FL(e){return OO(e)}function DL(e,t={}){return LO(e,ep.SerializationMap.getMap().classNameMap,t,"constraint")}function _L(e){if(null==e)return null;if("string"==typeof e){return DL({className:e in RL?RL[e]:e,config:{}})}return e instanceof TL?e:DL(e)}async function OL(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Ef(r)}}function ML(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var LL,zL;(zL=LL||(LL={}))[zL.SILENT=0]="SILENT",zL[zL.VERBOSE=1]="VERBOSE";class PL{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class BL{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class VL extends PL{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Cf((()=>Kf(this.totals[e],Wp(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Cf((()=>{const n=Wp(Dm(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),$f(t[e])})))}}class WL extends PL{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class UL extends PL{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Vx,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");so.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():so.now();return(...a)=>{const i=null!=n?n():so.now();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await OL(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await OL(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await OL(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await OL(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await OL(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):so.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await OL(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await OL(e),await this.trainEnd(e))}}function GL(e,t){if(null==e&&(e={}),e instanceof PL)return[e];if(Array.isArray(e)&&e[0]instanceof PL)return e;return RO(e).map((e=>new UL(e,t)))}class jL{constructor(){}static registerCallbackConstructor(e,t){so.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),jL.checkForDuplicate(t),null==jL.constructors[e]&&(jL.constructors[e]=[]),jL.constructors[e].push(t)}static checkForDuplicate(e){for(const t in jL.constructors){jL.constructors[+t].forEach((t=>{if(t===e)throw new kO("Duplicate callback constructor.")}))}}static clear(){jL.constructors={}}static createCallbacks(e){const t=[];for(const n in jL.constructors){const r=+n;e>=r&&t.push(...jL.constructors[r])}return t.map((e=>new e))}}function HL(e,t,n,r,s,a,i,o,u){const l=new WL,c=[new VL,...jL.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new BL(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function qL(e,t={},n=!1){return LO(e,ep.SerializationMap.getMap().classNameMap,t,"layer",n)}function KL(e,t){return Cf((()=>{"float32"!==e.dtype&&(e=eh(e,"float32"));const n=Xp(EM(e),t,!0),r=hm(n.shape,gM()),s=Ym(Qy(n,r));return Dm(e,s)}))}function XL(e,t){return Cf((()=>pg(EM(_m(t,e)),-1)))}function JL(e,t){return Cf((()=>pg(qm(_m(t,e)),-1)))}function YL(e,t){return Cf((()=>{const n=_m(e,t),r=oy(qm(e),gM(),Number.MAX_VALUE),s=qm(Dm(n,r));return Wp(100,pg(s,-1))}))}function QL(e,t){return Cf((()=>{const n=oy(t,gM(),Number.MAX_VALUE),r=wg(Kf(1,n)),s=oy(e,gM(),Number.MAX_VALUE),a=wg(Kf(1,s));return pg(EM(_m(r,a)),-1)}))}function ZL(e,t,n=!1){return Cf((()=>{if(n)t=Xb(t);else{const e=Xp(t,t.shape.length-1,!0);t=Dm(t,e)}return t=oy(t,gM(),1-gM()),ag(Xp(Wp(eh(e,"float32"),wg(t)),t.shape.length-1))}))}function ez(e,t,n=!1){return Cf((()=>{const r=eh(Fy(function(e){const t=[hM(e.shape)];return Hp(e,t)}(e)),"int32"),s=(t=oy(t,gM(),1-gM())).shape;return ZL(Hp(ab(r,s[s.length-1]),s),t,n)}))}function tz(e,t){return Cf((()=>{let n;return n=oy(t,gM(),1-gM()),n=wg(Dm(n,_m(1,n))),pg(function(e,t){if(!so.arraysEqual(e.shape,t.shape))throw new kO(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Cf((()=>{const n=Gp(t),r=ag(qm(t));return Kf(_m(n,Wp(t,e)),Tg(Ng(r)))}))}(e,n),-1)}))}function nz(e,t){return Cf((()=>{const n=oy(e,gM(),1),r=oy(t,gM(),1);return Xp(Wp(e,wg(Dm(n,r))),-1)}))}function rz(e,t){return Cf((()=>{const n=KL(e,-1),r=KL(t,-1),s=Wp(n,r);return ag(Xp(s,-1))}))}jL.constructors={};const sz={meanSquaredError:XL,meanAbsoluteError:JL,meanAbsolutePercentageError:YL,meanSquaredLogarithmicError:QL,squaredHinge:function(e,t){return Cf((()=>{const n=Qy(0,_m(1,Wp(e,t)));return pg(EM(n),-1)}))},hinge:function(e,t){return Cf((()=>{const n=Qy(0,_m(1,Wp(e,t)));return pg(n,-1)}))},categoricalHinge:function(e,t){return Cf((()=>{const n=Xp(Wp(e,t),-1),r=Km(Wp(_m(1,e),t),-1);return Qy(0,Kf(1,_m(r,n)))}))},logcosh:function(e,t){return Cf((()=>{const n=Math.log(2),r=_m(t,e),s=_m(Kf(r,By(Wp(-2,r))),n);return pg(s,-1)}))},categoricalCrossentropy:ZL,sparseCategoricalCrossentropy:ez,binaryCrossentropy:tz,kullbackLeiblerDivergence:nz,poisson:function(e,t){return Cf((()=>{const n=wg(Kf(gM(),t));return pg(_m(t,Wp(e,n)),-1)}))},cosineProximity:rz};function az(e){if("string"==typeof e){if(e in sz)return sz[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new kO(t)}return e}function iz(e,t){return Cf((()=>{const n=Wp(.5,ib(t)),r=yM(Rm(t,n),e.dtype);return pg(Ny(e,r),-1)}))}function oz(e,t){return Cf((()=>yM(Ny(Wg(e,-1),Wg(t,-1)),"float32")))}function uz(e,t){return Cf((()=>eh(Xp(Wm(Ny(e,1),Ny(t,1))),"float32")))}function lz(e,t){return Cf((()=>{const n=uz(e,t),r=function(e,t){return Cf((()=>eh(Xp(Wm(Ny(e,0),Ny(t,1))),"float32")))}(e,t),s=Kf(n,r);return eh(Lm(Rm(s,0),Dm(n,s),0),"float32")}))}function cz(e,t){return tz(e,t)}function hz(e,t){return e.rank===t.rank&&(e=tg(e,[e.rank-1])),(t=Wg(t,-1)).dtype!==e.dtype&&(t=eh(t,e.dtype)),eh(Ny(e,t),"float32")}const pz=ZL,dz=ez,fz={binaryAccuracy:iz,categoricalAccuracy:oz,precision:lz,categoricalCrossentropy:pz,sparseCategoricalCrossentropy:dz,mse:XL,MSE:XL,mae:JL,MAE:JL,mape:YL,MAPE:YL,cosine:rz};function mz(e){if("string"==typeof e&&e in fz)return fz[e];if("string"!=typeof e&&null!=e)return e;throw new kO(`Unknown metric ${e}`)}function gz(e){if(EO(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(sz))if(sz[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(fz))if(fz[n]===e){t=n;break}return void 0!==t?t:e.name}}function yz(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bz(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bz(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!bz(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!bz(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xz(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),vz(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?wz(o[e],n,r):kz(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?aL(e.collectedTrainableWeights):aL(e.trainableWeights);return t}(e),l=aL(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function vz(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function wz(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}vz([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function kz(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];vz([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)vz(["","","","",i[e]],t,r)}function Iz(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Sz(e,t){if(null===e)return null;if("string"==typeof e)return DO(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Iz(t,s,r)?n.push(r):n.push(Sz(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=DO(n);t[e]=Sz(r,e)}}return t}}function Nz(e,t){if(null==e)return null;if("string"==typeof e)return FO(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Iz(t,s,r)?n.push(r):n.push(Nz(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=FO(n);t[s]="name"!==n&&"className"!==n||"string"!=typeof r?Nz(r,n):r}return t}}
/** @license See the LICENSE file. */class Tz extends fL{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=XO(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],PO(this.inputs).length!==this.inputs.length)throw new kO(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);PO(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;EO(0===n,"input layer has >1 nodes"),EO(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof gL))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new wO(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Tz.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(zO);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Tz&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(zO);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new wO(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new wO(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new pL({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new kO("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new kO(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new kO(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new kO(`${e.length} of ${r} weights are not set: ${e}`)}uL(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.20.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Nz(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Cf((()=>{e=RO(e);const n=new bL;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return wL(this.outputs,n,t)}))}computeMask(e,t){return Cf((()=>{let n;return e=RO(e),n=null==t?CO(null,e.length):RO(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=nL(e);if(t.length!==this.inputLayers.length)throw new kO(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zO);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=nL(t.computeOutputShape(AO(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n[`${t.name}_${a}_${e}`]=s[e]}}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];EO(t in n),s.push(n[t])}return AO(s)}runInternalGraph(e,t){null==t&&(t=CO(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zO);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=RO(t.call(e,l)),u=RO(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=RO(t.call(r,l)),u=RO(t.computeMask(r,i));if(t.activityRegularizer)throw new IO("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){EO(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Tz?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Tz.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new kO(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new kO("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new kO(`No such layer: ${e}`)}calculateLosses(){return Cf((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Tz.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Tz.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Tz.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Tz.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Tz.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(AO(n),r)}function u(e){const n=e.name,a=qL(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new kO(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!BO(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];EO(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];EO(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new kO("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Cf((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Cz(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Ez(e,t){return Cz(e,t,"classWeight")}async function $z(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Cf((()=>{if(1===e.shape.length)return th(e);if(2===e.shape.length){if(e.shape[1]>1){return Wg(e,1)}if(1===e.shape[1])return Hp(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Ef(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),im(s,"float32")}return null}function Az(e,t){return Wp(e,t)}function Rz(e,t){let n,r;const s=t;n=s.xs,r=s.ys,so.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Fz("input",e.inputNames,n),i=Fz("output",e.outputNames,r),o=a[0].shape[0];so.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),so.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)so.assert(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)so.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Fz(e,t,n){if(n instanceof hu)return[n];if(Array.isArray(n))return so.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new kO(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function Dz(e,t,n){const r=null!=n.batchesPerEpoch;if(so.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),so.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),so.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),so.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),so.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(_z(n.validationData))so.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new IO("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=GL(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=HL(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Rz(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Ez(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await $z(s[e],null,t[e]))}const l=r.concat(s).concat(i),d=o(l);Ef(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,$f(n)}await p.onBatchEnd(h,a),ML(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=_z(n.validationData)?RO(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):RO(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function _z(e){return"function"==typeof e.iterator}async function Oz(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new IO("Verbose mode is not implemented yet.");so.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=Cf((()=>{if(t.value){const{xs:n,ys:r}=Rz(e,t.value),i=n.concat(r),l=Cf((()=>s(i)));if(Ef(i),0===u)for(let e=0;e<l.length;++e)a.push(jf(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=Cf((()=>Kf(a[e],Wp(c,t)))),u>0&&Ef(n)}Ef(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Dm(a[e],o),Ef(t)}return AO(a)}function Mz(e){so.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Lz(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>xM(e,t,n-t))):xM(e,t,n-t)}function zz(e,t){return Cf((()=>null==e?null:Array.isArray(e)?e.map((e=>zz(e,t))):CM(e,"int32"===t.dtype?t:eh(t,"int32"))))}function Pz(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function Bz(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,l,c,h,p;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Mz(d);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,d);s=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new IO("validationData including sample weights is not supported yet."):new kO(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];c=Lz(s,e,t),i=s,s=Lz(s,0,e),h=Lz(a,e,t),o=a,a=Lz(a,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=s.concat(a).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const I=GL(r.callbacks,r.yieldEvery),S=await async function(e,t,n,r,s,a,i,o,u,l,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==d))throw new kO("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=fM(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=HL(o,i,a,p,g,d,s,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};if(null!=d)throw new IO("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new IO("batch shuffling is not implemneted yet");c&&so.shuffle(y);const i=im(y),o=Pz(g,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Cf((()=>{const p=o[c][0],d=o[c][1],f=xM(i,p,d-p);h.batch=c,h.size=d-p;const g=zz(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,$f(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];$f(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),ML(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,v,d,r.epochs,r.verbose,I,w,g,r.shuffle,k,r.initialEpoch,null,null);return S}finally{e.isTraining=!1,Wz(s,t),Wz(a,n),Wz(i,t),Wz(o,n),Wz(c,u),Wz(h,l),null!=p&&Ef(p)}}function Vz(e){const t=[];e instanceof hu&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(bM(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Wz(e,t){if(null==e)return;const n=[];if(t instanceof hu)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof hu)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Uz(e){return Array.isArray(e)}function Gz(e){return!function(e){return e instanceof hu}(e)&&!Uz(e)}function jz(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Uz(e)&&e.length>0)t=!0;else if(Gz(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new kO(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Gz(e)){a=[];for(const n of t){if(null==e[n])throw new kO(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Uz(e)){if(e.length!==t.length)throw new kO(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new kO(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Vz(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new kO(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new kO(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Hz(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new kO(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new kO(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new kO(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new kO(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class qz extends Tz{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new kO("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xz(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Px.adagrad(.01),Adadelta:()=>Px.adadelta(1,.95,gM()),Adam:()=>Px.adam(.001,.9,.999,gM()),Adamax:()=>Px.adamax(.002,.9,.999,gM(),0),RMSProp:()=>Px.rmsprop(.001,.9,0,gM()),SGD:()=>Px.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new kO(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ax))throw new kO("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new kO(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>az(e)))}else{const n=az(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new kO(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(az(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],iM("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};iM("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===tz?-1!==["accuracy","acc"].indexOf(i)?r=iz:-1!==["crossentropy","ce"].indexOf(i)&&(r=cz):this.lossFunctions[e]===ez?-1!==["accuracy","acc"].indexOf(i)?r=hz:-1!==["crossentropy","ce"].indexOf(i)&&(r=dz):-1!==["accuracy","acc"].indexOf(i)?r=oz:-1!==["crossentropy","ce"].indexOf(i)&&(r=pz),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=mz(i);a=e,n=""+gz(i)}let t;iM(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Mz(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return AO(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Wz(s[0],e),Wz(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),Oz(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new kO(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new kO(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new kO("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new bL;if(e instanceof hu&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new kO(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new kO(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=wL(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=CO(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new kO(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Cf((()=>{const r=this.checkNumSamples(e);if(n)throw new IO("Verbose predictLoop() is not implemented yet.");const s=Pz(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){Cf((()=>{const n=s[t][0],r=s[t][1],a=Lz(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new bL(i);return wL(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return AO(a.map((e=>_f(e,0))))}))}predict(e,t={}){const n=Vz(e);Hz(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Mz(r),this.predictLoop(n,r)}finally{Wz(n,e)}}predictOnBatch(e){Hz(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new wO("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ez?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=PO(e.map((e=>e.shape[0])));r.sort();const s=PO(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new kO(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new kO(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!so.arraysEqual(r,s))throw new kO(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=jz(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=jz(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[XL,tz,ZL];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===ZL&&1===a.shape[a.shape.length-1])throw new kO(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new kO(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new kO(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Ez(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await $z(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return Cf((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new IO("Verbose mode is not implemented yet.");if(null!=s)throw new IO("steps mode in testLoop() is not implemented yet");{const r=Pz(a,n),s=im(fM(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=xM(s,a,o-a),l=zz(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(jf(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Kf(i[e],Wp(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Dm(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if($O(e,r)>1){s+=`_${$O(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new bL(e),o=wL(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Az(n,s[e]));const a=pg(n);t.push(a),u=0===e?n:Kf(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=pg(t(r[s],o[s]))}$f(n),a.push(n)}return u=pg(u),this.calculateLosses().forEach((e=>{u=Kf(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Cf((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new bL(a),o=wL(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=pg(r(s[e],o[e]));n=0===e?a:Kf(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=pg(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return Bz(this,e,t,n)}async fitDataset(e,t){return Dz(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Ef(a),Wz(n[0],e),Wz(n[1],t),AO(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Tf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Tf().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=FO(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>FO(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=FO(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[FO(gz(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>FO(gz(e))));{const e={};for(const t in this.metrics)e[t]=FO(gz(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=qL(Sz(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=DO(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>DO(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=DO(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>DO(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=DO(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=rh.getSaveHandlers(e);if(0===t.length)throw new kO(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new kO(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new kO("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await rh.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.20.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await rh.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=rh.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;yz(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){yz(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}qz.className="Model",ep.registerClass(qz);class Kz extends qz{}Kz.className="Functional",ep.registerClass(Kz);class Xz extends qz{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:XO("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new kO(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Xz||e instanceof qz;let n;if(t){if(n=e,1!==n.outputs.length)throw new kO("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new kO("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new kO("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=yL({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new kO(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new kO("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=mL(this.outputs[0])}this.inboundNodes=[],new pL({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:CO(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(sL(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new qz({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new wO("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new wO("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new wO("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new wO("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new kO("Legacy serialization format not supported yet.");s=t}else so.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Xz))throw new IO(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=qL(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new kO("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new kO("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Xz.className="Sequential",ep.registerClass(Xz);class Jz extends ep.Serializable{getConfig(){return{}}}class Yz extends Jz{apply(e,t=1){return function(e,t=1){if(1!==t)throw new IO(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Bp(e)}(e,t)}}Yz.className="elu",ep.registerClass(Yz);class Qz extends Jz{apply(e){return Pb(e)}}Qz.className="selu",ep.registerClass(Qz);class Zz extends Jz{apply(e){return Gp(e)}}Zz.className="relu",ep.registerClass(Zz);class eP extends Jz{apply(e){return Cf((()=>xg(6,Gp(e))))}}eP.className="relu6",ep.registerClass(eP);class tP extends Jz{apply(e){return e}}tP.className="linear",ep.registerClass(tP);class nP extends Jz{apply(e){return qp(e)}}nP.className="sigmoid",ep.registerClass(nP);class rP extends Jz{apply(e){return function(e){return Cf((()=>{const t=Kf(.5,Wp(.2,e));return oy(t,0,1)}))}(e)}}rP.className="hardSigmoid",ep.registerClass(rP);class sP extends Jz{apply(e){return By(e)}}sP.className="softplus",ep.registerClass(sP);class aP extends Jz{apply(e){return function(e){return Cf((()=>Dm(e,Kf(qm(e),1))))}(e)}}aP.className="softsign",ep.registerClass(aP);class iP extends Jz{apply(e){return Yg(e)}}iP.className="tanh",ep.registerClass(iP);class oP extends Jz{apply(e,t=-1){return Xb(e,t)}}oP.className="softmax",ep.registerClass(oP);class uP extends Jz{apply(e,t=-1){return Wy(e,t)}}uP.className="logSoftmax",ep.registerClass(uP);class lP extends Jz{apply(e,t=1){return Cf((()=>Wp(qp(Wp(e,t)),e)))}}lP.className="swish",ep.registerClass(lP);class cP extends Jz{apply(e){return Cf((()=>Wp(e,Yg(By(e)))))}}function hP(e){return e.getClassName()}function pP(e,t={}){return LO(e,ep.SerializationMap.getMap().classNameMap,t,"activation")}function dP(e){if(null==e){const e={className:"linear",config:{}};return pP(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},pP(t)}return e instanceof Jz?e:pP(e)}function fP(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}cP.className="mish",ep.registerClass(cP);class mP extends ep.Serializable{}class gP extends mP{constructor(e){super(),fP(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Cf((()=>{let t=Pf([1]);return this.hasL1&&(t=Kf(t,Xp(Wp(this.l1,qm(e))))),this.hasL2&&(t=Kf(t,Xp(Wp(this.l2,EM(e))))),Hp(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}gP.className="L1L2",ep.registerClass(gP);const yP={l1l2:"L1L2"};function bP(e){return OO(e)}function xP(e,t={}){return LO(e,ep.SerializationMap.getMap().classNameMap,t,"regularizer")}function vP(e){if(null==e)return null;if("string"==typeof e){return xP({className:e in yP?yP[e]:e,config:{}})}return e instanceof mP?e:xP(e)}class wP extends fL{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=rL(e);let n=Gp(e);return null!=this.maxValue&&(n=oy(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}wP.className="ReLU",ep.registerClass(wP);class kP extends fL{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rL(e);return Vp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}kP.className="LeakyReLU",ep.registerClass(kP);class IP extends fL{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=eL(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vP(e.alphaRegularizer),this.alphaConstraint=_L(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new kO(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=sL(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new lL({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=rL(e),Up(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ZM(this.alphaInitializer),alphaRegularizer:bP(this.alphaRegularizer),alphaConstraint:FL(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}IP.className="PReLU",ep.registerClass(IP);class SP extends fL{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new IO(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rL(e);return Bp(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}SP.className="ELU",ep.registerClass(SP);class NP extends fL{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=rL(e);return Wp(n,eh(Rm(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}NP.className="ThresholdedReLU",ep.registerClass(NP);class TP extends fL{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new oP).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=rL(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function CP(e,t,n){if("number"==typeof e)return CO(e,t);if(e.length!==t)throw new kO(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new kO(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function EP(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function $P(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+dM([n-t,0]);else{if("same"!==r)throw new kO(`Unsupport padding mode: ${r}.`);e*=t}return e}function AP(e,t){return Cf((()=>(nM(t),"channelsFirst"===t?og(e,[0,2,3,1]):e)))}function RP(e,t){return Cf((()=>(nM(t),"channelsFirst"===t?og(e,[0,2,3,4,1]):e)))}function FP(e,t,n,r=1,s="valid",a,i=1){return Cf((()=>{if(null==a&&(a="channelsLast"),nM(a),3!==e.shape.length)throw new kO(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new kO(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new kO(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=og(e,[0,2,1])),"causal"===s)throw new IO("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=py(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=AM(o,n)),o}))}function DP(e,t,n,r=[1,1],s="valid",a,i,o=null){return Cf((()=>{if(null==a&&(a="channelsLast"),nM(a),3!==e.rank&&4!==e.rank)throw new kO(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new kO(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=AP(e,a);if("causal"===s)throw new IO("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=qf.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=og(u,[0,3,1,2])),u}))}function _P(e,t,n,r=[1,1,1],s="valid",a,i){return Cf((()=>{if(null==a&&(a="channelsLast"),nM(a),4!==e.rank&&5!==e.rank)throw new kO(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new kO(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=RP(e,a);if("causal"===s)throw new IO("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=fy(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=AM(o,n)),"channelsFirst"===a&&(o=og(o,[0,4,1,2,3])),o}))}TP.className="Softmax",ep.registerClass(TP);class OP extends fL{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",OP.verifyArgs(t),this.rank=e,UO(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new IO(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=CP(t.kernelSize,e,"kernelSize"),this.strides=CP(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,rM(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nM(this.dataFormat),this.activation=dP(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=eL(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_L(t.biasConstraint),this.biasRegularizer=vP(t.biasRegularizer),this.activityRegularizer=vP(t.activityRegularizer),this.dilationRate=CP(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new kO(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new kO(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new kO(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(EO("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!WO(e.kernelSize,"number",1,3))throw new kO(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:hP(this.activation),useBias:this.useBias,biasInitializer:ZM(this.biasInitializer),biasRegularizer:bP(this.biasRegularizer),activityRegularizer:bP(this.activityRegularizer),biasConstraint:FL(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class MP extends OP{constructor(e,t){super(e,t),this.kernel=null,MP.verifyArgs(t),this.filters=t.filters,UO(this.filters,"filters"),this.kernelInitializer=eL(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_L(t.kernelConstraint),this.kernelRegularizer=vP(t.kernelRegularizer)}build(e){e=sL(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kO(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Cf((()=>{let t;e=rL(e);const n=null==this.bias?null:this.bias.read(),r=jO(this.activation.getClassName());if(null!=r&&2===this.rank)t=DP(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=FP(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=DP(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new IO("convolutions greater than 3D are not implemented yet.");t=_P(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=sL(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=EP(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ZM(this.kernelInitializer),kernelRegularizer:bP(this.kernelRegularizer),kernelConstraint:FL(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new kO(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class LP extends MP{constructor(e){super(2,e),LP.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!WO(e.kernelSize,"number",1,2))throw new kO(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}LP.className="Conv2D",ep.registerClass(LP);class zP extends MP{constructor(e){super(3,e),zP.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new kO(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}zP.className="Conv3D",ep.registerClass(zP);class PP extends LP{constructor(e){if(super(e),this.inputSpec=[new lL({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new kO(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=sL(e)).length)throw new kO("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kO("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lL({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Cf((()=>{let t=rL(e);if(4!==t.shape.length)throw new kO(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,$P(i,c,u,this.padding),$P(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=og(t,[0,2,3,1]));let d=dy(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=og(d,[0,3,1,2])),null!=this.bias&&(d=AM(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=sL(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=$P(t[r],o,a,this.padding),t[s]=$P(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}PP.className="Conv2DTranspose",ep.registerClass(PP);class BP extends zP{constructor(e){if(super(e),this.inputSpec=[new lL({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new kO(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=sL(e)).length)throw new kO("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kO("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lL({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Cf((()=>{let t=rL(e);if(5!==t.shape.length)throw new kO(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,$P(o,d,c,this.padding),$P(u,f,h,this.padding),$P(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=og(t,[0,2,3,4,1]));let y=gy(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=og(y,[0,4,1,2,3])),null!==this.bias&&(y=AM(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=sL(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=$P(t[r],l,i,this.padding),t[s]=$P(t[s],c,o,this.padding),t[a]=$P(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}BP.className="Conv3DTranspose",ep.registerClass(BP);class VP extends MP{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new kO("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new kO("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new kO(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=eL(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vP(t.depthwiseRegularizer),this.depthwiseConstraint=_L(t.depthwiseConstraint),this.pointwiseInitializer=eL(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vP(t.pointwiseRegularizer),this.pointwiseConstraint=_L(t.pointwiseConstraint)}build(e){if((e=sL(e)).length<this.rank+2)throw new kO(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new kO(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new lL({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Cf((()=>{let t;if(e=rL(e),1===this.rank)throw new IO("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=og(e,[0,2,3,1])),t=Bb(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=AM(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=og(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ZM(this.depthwiseInitializer),e.pointwiseInitializer=ZM(this.pointwiseInitializer),e.depthwiseRegularizer=bP(this.depthwiseRegularizer),e.pointwiseRegularizer=bP(this.pointwiseRegularizer),e.depthwiseConstraint=FL(this.depthwiseConstraint),e.pointwiseConstraint=FL(this.pointwiseConstraint),e}}VP.className="SeparableConv";class WP extends VP{constructor(e){super(2,e)}}WP.className="SeparableConv2D",ep.registerClass(WP);class UP extends MP{constructor(e){super(1,e),UP.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!WO(e.kernelSize,"number",1,1))throw new kO(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}UP.className="Conv1D",ep.registerClass(UP);class GP extends fL{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Cf((()=>{if(e=rL(e),"channelsLast"===this.dataFormat){const t=wM(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wM(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=wM(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wM(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}GP.className="Cropping2D",ep.registerClass(GP);class jP extends fL{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nM(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,VO(YO,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Cf((()=>{let t=rL(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=og(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Nx.resizeNearestNeighbor(t,[e,r]):Nx.resizeBilinear(t,[e,r]);return og(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Nx.resizeNearestNeighbor(t,[e,r]):Nx.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}jP.className="UpSampling2D",ep.registerClass(jP);class HP extends OP{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=eL(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_L(e.depthwiseConstraint),this.depthwiseRegularizer=vP(e.depthwiseRegularizer)}build(e){if((e=sL(e)).length<4)throw new kO(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new kO(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Cf((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Cf((()=>{null==s&&(s="channelsLast"),nM(s);let i=AP(e,s);if(4!==e.rank)throw new kO(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new kO(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Zf(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=og(i,[0,3,1,2])),i}))}(e=rL(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=AM(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=sL(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=EP(t,this.kernelSize[0],this.padding,this.strides[0]),a=EP(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ZM(this.depthwiseInitializer),e.depthwiseRegularizer=bP(this.depthwiseRegularizer),e.depthwiseConstraint=FL(this.depthwiseRegularizer),e}}HP.className="DepthwiseConv2D",ep.registerClass(HP);var qP={};function KP(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new kO("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function XP(e,t,n,r=!1,s,a,i=!1,o=!1){return Cf((()=>{const u=t.shape.length;if(u<3)throw new kO(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(fM(2,u));if(t=og(t,l),null!=a)throw new IO("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=eh(eh(s,"bool"),"float32")).rank===u-1&&(s=rg(s,-1)),s=og(s,l)),r&&(t=Gf(t,0),null!=s&&(s=Gf(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=Gm(t);let m,g;null!=s&&(m=Gm(s));for(let t=0;t<d;++t){const n=f[t],r=Cf((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=Cf((()=>{const e=m[t],n=_m(ib(e),e);return{output:Kf(Wp(r[0],e),Wp(p[0],n)),newStates:p.map(((t,s)=>Kf(Wp(r[1][s],e),Wp(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}if(o){g=Um(c,1)}return[h,g,p]}))}e(qP,"ConvLSTM2DCell",(()=>uB),(e=>uB=e)),e(qP,"ConvLSTM2D",(()=>lB),(e=>lB=e));class JP extends fL{constructor(e){let t;if(super(e),null==e.cell)throw new kO("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new sB({cells:e.cell}):e.cell,null==t.stateSize)throw new kO("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new lL({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return fM(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){tL(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Cf((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new IO("Constants support is not implemented in RNN yet.");tL(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new lL({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!so.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new kO(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new lL({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Cf((()=>{if(!this.stateful)throw new vO("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new kO("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Pf([n,e]))):this.states_=[Pf([n,this.cell.stateSize])];else if(null==e)Ef(this.states_),null!=this.keptStates&&(Ef(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Pf([n,e]))):this.states_[0]=Pf([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new kO(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ef(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!so.arraysEqual(r.shape,a))throw new kO(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>$f(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=KP(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new lL({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof cL){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Cf((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=rL(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new kO(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=XP(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Cf((()=>{let t=Pf(e.shape);return t=Xp(t,[1,2]),t=bM(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?SM(t,[1,e]):t)):this.cell.stateSize>1?[SM(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===JP.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=qL(t.cell,n);return new e(Object.assign(t,{cell:r}))}}JP.className="RNN",ep.registerClass(JP);class YP extends fL{}class QP extends YP{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,UO(this.units,"units"),this.activation=dP(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eL(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eL(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eL(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vP(e.kernelRegularizer),this.recurrentRegularizer=vP(e.recurrentRegularizer),this.biasRegularizer=vP(e.biasRegularizer),this.kernelConstraint=_L(e.kernelConstraint),this.recurrentConstraint=_L(e.recurrentConstraint),this.biasConstraint=_L(e.biasConstraint),this.dropout=pM([1,dM([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pM([1,dM([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sL(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Cf((()=>{if(2!==e.length)throw new kO(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aB({ones:()=>ib(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aB({ones:()=>ib(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=TM(null!=a?Wp(e,a):e,this.kernel.read()),null!=this.bias&&(s=AM(s,this.bias.read())),null!=i&&(n=Wp(n,i));let o=Kf(s,TM(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hP(this.activation),useBias:this.useBias,kernelInitializer:ZM(this.kernelInitializer),recurrentInitializer:ZM(this.recurrentInitializer),biasInitializer:ZM(this.biasInitializer),kernelRegularizer:bP(this.kernelRegularizer),recurrentRegularizer:bP(this.recurrentRegularizer),biasRegularizer:bP(this.biasRegularizer),activityRegularizer:bP(this.activityRegularizer),kernelConstraint:FL(this.kernelConstraint),recurrentConstraint:FL(this.recurrentConstraint),biasConstraint:FL(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}QP.className="SimpleRNNCell",ep.registerClass(QP);class ZP extends JP{constructor(e){e.cell=new QP(e),super(e)}call(e,t){return Cf((()=>{null!=this.cell.dropoutMask&&(Ef(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ef(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}ZP.className="SimpleRNN",ep.registerClass(ZP);class eB extends YP{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new kO("GRUCell does not support reset_after parameter set to true.");this.units=e.units,UO(this.units,"units"),this.activation=dP(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dP(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eL(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eL(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eL(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vP(e.kernelRegularizer),this.recurrentRegularizer=vP(e.recurrentRegularizer),this.biasRegularizer=vP(e.biasRegularizer),this.kernelConstraint=_L(e.kernelConstraint),this.recurrentConstraint=_L(e.recurrentConstraint),this.biasConstraint=_L(e.biasConstraint),this.dropout=pM([1,dM([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pM([1,dM([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=sL(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Cf((()=>{if(2!==e.length)throw new kO(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aB({ones:()=>ib(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aB({ones:()=>ib(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Wp(e,s[0]));let l=TM(e,this.kernel.read());this.useBias&&(l=AM(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Wp(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=zf(c,[2*this.units,this.units],c.rank-1),d=TM(r,h),[f,m,g]=zf(l,3,l.rank-1),[y,b]=zf(d,2,d.rank-1);i=this.recurrentActivation.apply(Kf(f,y)),o=this.recurrentActivation.apply(Kf(m,b));const x=TM(Wp(o,r),p);u=this.activation.apply(Kf(g,x));const v=Kf(Wp(i,r),Wp(Kf(1,ag(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hP(this.activation),recurrentActivation:hP(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ZM(this.kernelInitializer),recurrentInitializer:ZM(this.recurrentInitializer),biasInitializer:ZM(this.biasInitializer),kernelRegularizer:bP(this.kernelRegularizer),recurrentRegularizer:bP(this.recurrentRegularizer),biasRegularizer:bP(this.biasRegularizer),activityRegularizer:bP(this.activityRegularizer),kernelConstraint:FL(this.kernelConstraint),recurrentConstraint:FL(this.recurrentConstraint),biasConstraint:FL(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}eB.className="GRUCell",ep.registerClass(eB);class tB extends JP{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new eB(e),super(e)}call(e,t){return Cf((()=>{null!=this.cell.dropoutMask&&(Ef(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ef(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}tB.className="GRU",ep.registerClass(tB);class nB extends YP{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,UO(this.units,"units"),this.activation=dP(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dP(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eL(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eL(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eL(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vP(e.kernelRegularizer),this.recurrentRegularizer=vP(e.recurrentRegularizer),this.biasRegularizer=vP(e.biasRegularizer),this.kernelConstraint=_L(e.kernelConstraint),this.recurrentConstraint=_L(e.recurrentConstraint),this.biasConstraint=_L(e.biasConstraint),this.dropout=pM([1,dM([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pM([1,dM([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=sL(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends OM{apply(t,r){const s=e.apply([n]),a=(new LM).apply([n]),i=e.apply([2*n]);return IM(IM(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Cf((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new kO(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aB({ones:()=>ib(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aB({ones:()=>ib(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Wp(e,a[0]));let h=TM(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Wp(r,i[0])),h=Kf(h,TM(r,this.recurrentKernel.read())),this.useBias&&(h=AM(h,this.bias.read()));const[p,d,f,m]=zf(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Kf(Wp(u,s),Wp(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Wp(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hP(this.activation),recurrentActivation:hP(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ZM(this.kernelInitializer),recurrentInitializer:ZM(this.recurrentInitializer),biasInitializer:ZM(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bP(this.kernelRegularizer),recurrentRegularizer:bP(this.recurrentRegularizer),biasRegularizer:bP(this.biasRegularizer),activityRegularizer:bP(this.activityRegularizer),kernelConstraint:FL(this.kernelConstraint),recurrentConstraint:FL(this.recurrentConstraint),biasConstraint:FL(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}nB.className="LSTMCell",ep.registerClass(nB);class rB extends JP{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new nB(e),super(e)}call(e,t){return Cf((()=>{null!=this.cell.dropoutMask&&(Ef(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ef(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}rB.className="LSTM",ep.registerClass(rB);class sB extends YP{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Cf((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;tL(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{iM(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(qL(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return oL(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}uL(t)}}function aB(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):RM(t(),n),o=()=>FM(i,t,r);if(!s||s<=1)return $f(o().clone());return Array(s).fill(void 0).map(o).map((e=>$f(e.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */sB.className="StackedRNNCells",ep.registerClass(sB);var iB=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class oB extends JP{constructor(e){if(e.unroll)throw new IO("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new IO("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new lL({ndim:5})]}call(e,t){return Cf((()=>{if(null!=this.cell.dropoutMask&&(Ef(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ef(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new kO("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Cf((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Pf([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Cf((()=>{if(!this.stateful)throw new vO("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new kO("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Pf(s))):this.states_=[Pf(s)];else if(null==e)Ef(this.states_),null!=this.keptStates&&(Ef(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Pf(s))):this.states_[0]=Pf(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new kO(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ef(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!so.arraysEqual(n.shape,r))throw new kO(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>$f(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=EP(u,r[0],s,a[0],i[0]),h=EP(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}oB.className="ConvRNN2D";class uB extends nB{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,UO(this.filters,"filters"),this.kernelSize=CP(n,2,"kernelSize"),this.kernelSize.forEach((e=>UO(e,"kernelSize"))),this.strides=CP(r||1,2,"strides"),this.strides.forEach((e=>UO(e,"strides"))),this.padding=s||"valid",rM(this.padding),this.dataFormat=a||"channelsLast",nM(this.dataFormat),this.dilationRate=CP(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>UO(e,"dilationRate")))}build(e){var t;e=sL(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new kO(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends OM{apply(e,t){return kM([n.apply([r]),fg([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Cf((()=>{if(3!==e.length)throw new kO(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=aB({ones:()=>ib(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Wp(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=aB({ones:()=>ib(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,v]=zf(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?zf(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,C,E]=zf(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(Kf(u,d)),A=this.recurrentActivation.apply(Kf(l,f)),R=Kf(Wp(A,a),Wp($,this.activation.apply(Kf(c,m)))),F=Wp(this.recurrentActivation.apply(Kf(h,g)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=iB(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Xf(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?AM(s,n,this.dataFormat):s}recurrentConv(e,t){return Xf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}uB.className="ConvLSTM2DCell",ep.registerClass(uB);class lB extends oB{constructor(e){const t=new uB(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}lB.className="ConvLSTM2D",ep.registerClass(lB);class cB extends fL{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return FM((()=>RM(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}cB.className="Dropout",ep.registerClass(cB);class hB extends cB{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}hB.className="SpatialDropout1D",ep.registerClass(hB);class pB extends fL{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,UO(this.units,"units"),this.activation=dP(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=eL(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=eL(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_L(e.kernelConstraint),this.biasConstraint=_L(e.biasConstraint),this.kernelRegularizer=vP(e.kernelRegularizer),this.biasRegularizer=vP(e.biasRegularizer),this.activityRegularizer=vP(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=sL(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=sL(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e),r=jO(this.activation.getClassName());let s;return null!=r?s=TM(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=TM(n,this.kernel.read()),null!=this.bias&&(s=AM(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:hP(this.activation),useBias:this.useBias,kernelInitializer:ZM(this.kernelInitializer),biasInitializer:ZM(this.biasInitializer),kernelRegularizer:bP(this.kernelRegularizer),biasRegularizer:bP(this.biasRegularizer),activityRegularizer:bP(this.activityRegularizer),kernelConstraint:FL(this.kernelConstraint),biasConstraint:FL(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}pB.className="Dense",ep.registerClass(pB);class dB extends fL{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=sL(e);for(const t of e.slice(1))if(null==t)throw new kO(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],hM(e,1)]}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);let n=rL(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=og(n,e)}return function(e){if(e.rank<=1)throw new kO(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],hM(e.shape,1)];return Hp(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}dB.className="Flatten",ep.registerClass(dB);class fB extends fL{constructor(e){super(e),this.supportsMasking=!0,this.activation=dP(e.activation)}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e);return this.activation.apply(n)}))}getConfig(){const e={activation:hP(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}fB.className="Activation",ep.registerClass(fB);class mB extends fL{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Cf((()=>{return e=rL(e),t=e,n=this.n,Cf((()=>{if(2!==t.shape.length)throw new kO(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return SM(bM(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}mB.className="RepeatVector",ep.registerClass(mB);class gB extends fL{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new kO("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=hM(e);if(null!==a){if(0===s||i%s!=0)throw new kO(n);r[a]=i/s}else if(i!==s)throw new kO(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Hp(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}gB.className="Reshape",ep.registerClass(gB);class yB extends fL{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=fM(1,e.dims.length+1);if(!so.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new lL({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=sL(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return og(rL(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}yB.className="Permute",ep.registerClass(yB);class bB extends fL{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=rL(e);return Vg(dg(n,this.maskValue),-1)}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e),r=Vg(dg(n,this.maskValue),-1,!0);return Wp(n,eh(r,n.dtype))}))}}bB.className="Masking",ep.registerClass(bB);class xB extends fL{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(RO(e.inputLength))}this.inputDim=e.inputDim,UO(this.inputDim,"inputDim"),this.outputDim=e.outputDim,UO(this.outputDim,"outputDim"),this.embeddingsInitializer=eL(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vP(e.embeddingsRegularizer),this.activityRegularizer=vP(e.activityRegularizer),this.embeddingsConstraint=_L(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Cf((()=>this.maskZero?(e=rL(e),dg(e,Bf(e))):null))}computeOutputShape(e){if(e=sL(e),null==this.inputLength)return[...e,this.outputDim];const t=RO(this.inputLength);if(t.length!==e.length-1)throw new kO(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new kO(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);let n=rL(e);"int32"!==n.dtype&&(n=yM(n,"int32"));const r=CM(this.embeddings.read(),Hp(n,[n.size]));return Hp(r,sL(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ZM(this.embeddingsInitializer),embeddingsRegularizer:bP(this.embeddingsRegularizer),activityRegularizer:bP(this.activityRegularizer),embeddingsConstraint:FL(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}xB.className="Embedding",ep.registerClass(xB);class vB extends fL{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new IO}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new kO("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[sL(e)]),e.length<2)throw new kO(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=PO(t),t.length>1)throw new kO(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===PO(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Cf((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=dM(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=bM(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Hp(r,[s].concat(hM(e.slice(1))));i=og(i,[1,0]),i=Hp(i,a),t.push(i),n=!0}else if(e>1){const s=fM(1,e).concat([0]);t.push(og(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Hp(og(Hp(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(fM(0,s-1));r=og(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=PO(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Cf((()=>{if(null==t)return null;if(!Array.isArray(t))throw new kO("`mask` should be an Array");if(!Array.isArray(e))throw new kO("`inputs` should be an Array");if(t.length!==e.length)throw new kO(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:rg(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Wm(n,t[e]);return n}))}}class wB extends vB{constructor(e){super(e)}mergeFunction(e){return Cf((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Kf(t,e[n]);return t}))}}wB.className="Add",ep.registerClass(wB);class kB extends vB{constructor(e){super(e)}mergeFunction(e){return Cf((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wp(t,e[n]);return t}))}}kB.className="Multiply",ep.registerClass(kB);class IB extends vB{constructor(e){super(e)}mergeFunction(e){return Cf((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Kf(t,e[n]);return Wp(1/e.length,t)}))}}IB.className="Average",ep.registerClass(IB);class SB extends vB{constructor(e){super(e)}mergeFunction(e){return Cf((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qy(t,e[n]);return t}))}}SB.className="Maximum",ep.registerClass(SB);class NB extends vB{constructor(e){super(e)}mergeFunction(e){return Cf((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=xg(t,e[n]);return t}))}}NB.className="Minimum",ep.registerClass(NB);class TB extends vB{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new kO("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(so.arraysEqual(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new kO("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Cf((()=>kM(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new kO("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new kO("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new kO("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new kO(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Cf((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(eh(ib(e[n]),"bool")):t[n].rank<e[n].rank?r.push(rg(t[n],-1)):r.push(t[n]);const s=_f(r,this.axis);return Bg(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function CB(e,t){for(;e<0;)e+=t;return e}TB.className="Concatenate",ep.registerClass(TB);class EB extends vB{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){so.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new IO("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new kO(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new kO(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>CB(t,e[n].shape.length))):[CB(this.axes,n.shape.length),CB(this.axes,r.shape.length)],this.normalize&&(n=KL(n,t[0]),r=KL(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new IO("batchDot is not implemented for tensors of 4D or higher rank yet");if(so.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),so.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new IO("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Cf((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Hp(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Hp(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Xp(Wp(e,t),a[0]):Xp(Wp(og(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=rm(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=tg(i,t)}return 1===i.shape.length&&(i=rg(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[CB(this.axes,e.length),CB(this.axes,t.length)],n}computeOutputShape(e){so.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new IO("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}EB.className="Dot",ep.registerClass(EB);class $B extends fL{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e);return FM((()=>Kf(NM(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}$B.className="GaussianNoise",ep.registerClass($B);class AB extends fL{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Cf((()=>{this.invokeCallHook(e,t);const n=rL(e);if(this.rate>0&&this.rate<1){return FM((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Wp(n,NM(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}AB.className="GaussianDropout",ep.registerClass(AB);class RB extends fL{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||rL(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Cf((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return FM((()=>{const t=rL(e),r=-1.7580993408473766;let s=Vm(Fb(n),this.rate);s=yM(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=Kf(Wp(t,s),Wp(Kf(s,-1),r));return Kf(Wp(o,a),i)}),(()=>rL(e)),t.training||!1)}return e}))}}function FB(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=ny(e,t,n,r,s,a);else if(3===e.rank)i=ry(e,t,n,r,s,a);else{if(4!==e.rank)throw new IO(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=sy(e,t,n,r,s,a)}return i}function DB(e,t,n,r,s=.001){return so.arraysEqual(r.slice().sort(),fM(0,e.rank-1))?function(e,t,n,r,s=.001){return Cf((()=>{const a=nb(e,r),i=a.mean,o=a.variance;return[FB(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Cf((()=>{const a=nb(e,r),i=a.mean,o=a.variance,u=[];for(const t of fM(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Hp(i,u),c=Hp(o,u),h=null==t?null:Hp(t,u),p=null==n?null:Hp(n,u);return[FB(e,l,c,p,h,s),i,o]}))}(e,t,n,r,s)}RB.className="AlphaDropout",ep.registerClass(RB);class _B extends fL{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=eL(e.betaInitializer||"zeros"),this.gammaInitializer=eL(e.gammaInitializer||"ones"),this.movingMeanInitializer=eL(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=eL(e.movingVarianceInitializer||"ones"),this.betaConstraint=_L(e.betaConstraint),this.gammaConstraint=_L(e.gammaConstraint),this.betaRegularizer=vP(e.betaRegularizer),this.gammaRegularizer=vP(e.gammaRegularizer)}build(e){e=sL(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new kO(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new lL({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Cf((()=>{const n=null!=t.training&&t.training,r=rL(e),s=r.shape,a=s.length,i=fM(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=CO(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!so.arraysEqual(l,fM(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Hp(this.movingMean.read(),u),t=Hp(this.movingVariance.read(),u),n=this.center?Hp(this.beta.read(),u):null,s=this.scale?Hp(this.gamma.read(),u):null;return FB(r,e,t,n,s,this.epsilon)}return FB(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=DB(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Cf((()=>{const r=1-n,s=e.read(),a=Wp(_m(s,t),r);e.write(_m(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ZM(this.betaInitializer),gammaInitializer:ZM(this.gammaInitializer),movingMeanInitializer:ZM(this.movingMeanInitializer),movingVarianceInitializer:ZM(this.movingVarianceInitializer),betaRegularizer:bP(this.betaRegularizer),gammaRegularizer:bP(this.gammaRegularizer),betaConstraint:FL(this.betaConstraint),gammaConstraint:FL(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}_B.className="BatchNormalization",ep.registerClass(_B);class OB extends fL{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=eL(e.betaInitializer||"zeros"),this.gammaInitializer=eL(e.gammaInitializer||"ones"),this.betaRegularizer=vP(e.betaRegularizer),this.gammaRegularizer=vP(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=sL(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==PO(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=rL(e),r=n.shape,s=r.length;return Cf((()=>{let{mean:e,variance:t}=nb(n,this.axis,!0);const a=CO(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Hp(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=ym(e,l),t=ym(t,l),null!=o&&(o=ym(o,c)),null!=u&&(u=ym(u,c)),FB(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ZM(this.betaInitializer),gammaInitializer:ZM(this.gammaInitializer),betaRegularizer:bP(this.betaRegularizer),gammaRegularizer:bP(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}OB.className="LayerNormalization",ep.registerClass(OB);class MB extends fL{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new kO(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new kO(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new kO(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new lL({ndim:4})]}computeOutputShape(e){let t,n;return e=sL(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Cf((()=>{return t=rL(e),n=this.padding,r=this.dataFormat,Cf((()=>{if(4!==t.rank)throw new kO(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new kO("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new kO(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ub(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function LB(e,t,n,r,s,a){return Cf((()=>{let i;nM(s),sM(a),rM(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=AP(e,s);const o="same"===r?"same":"valid";return i="max"===a?Xy(e,t,n,o):Xg(e,t,n,o),"channelsFirst"===s&&(i=og(i,[0,3,1,2])),i}))}function zB(e,t,n,r,s,a){return Cf((()=>{let i;nM(s),sM(a),rM(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=RP(e,s);const o="same"===r?"same":"valid";return i="max"===a?Jy(e,t,n,o):Jg(e,t,n,o),"channelsFirst"===s&&(i=og(i,[0,4,1,2,3])),i}))}MB.className="ZeroPadding2D",ep.registerClass(MB);class PB extends fL{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new kO(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(UO(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new kO(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}UO(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,rM(this.padding),this.inputSpec=[new lL({ndim:3})]}computeOutputShape(e){const t=EP((e=sL(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Cf((()=>{this.invokeCallHook(e,t),e=bM(rL(e),2);const n=this.poolingFunction(rL(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return tg(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class BB extends PB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),LB(e,t,n,r,s,"max")}}BB.className="MaxPooling1D",ep.registerClass(BB);class VB extends PB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),LB(e,t,n,r,s,"avg")}}VB.className="AveragePooling1D",ep.registerClass(VB);class WB extends fL{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new kO(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];UO(this.poolSize,"poolSize"),UO(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nM(this.dataFormat),rM(this.padding),this.inputSpec=[new lL({ndim:4})]}computeOutputShape(e){e=sL(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=EP(t,this.poolSize[0],this.padding,this.strides[0]),n=EP(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Cf((()=>(this.invokeCallHook(e,t),this.poolingFunction(rL(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class UB extends WB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),LB(e,t,n,r,s,"max")}}UB.className="MaxPooling2D",ep.registerClass(UB);class GB extends WB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),LB(e,t,n,r,s,"avg")}}GB.className="AveragePooling2D",ep.registerClass(GB);class jB extends fL{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new kO(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];UO(this.poolSize,"poolSize"),UO(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nM(this.dataFormat),rM(this.padding),this.inputSpec=[new lL({ndim:5})]}computeOutputShape(e){e=sL(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=EP(t,this.poolSize[0],this.padding,this.strides[0]),n=EP(n,this.poolSize[1],this.padding,this.strides[1]),r=EP(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Cf((()=>(this.invokeCallHook(e,t),this.poolingFunction(rL(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class HB extends jB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),zB(e,t,n,r,s,"max")}}HB.className="MaxPooling3D",ep.registerClass(HB);class qB extends jB{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return nM(s),rM(r),zB(e,t,n,r,s,"avg")}}qB.className="AveragePooling3D",ep.registerClass(qB);class KB extends fL{constructor(e){super(e),this.inputSpec=[new lL({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new IO}}class XB extends KB{constructor(e){super(e||{})}call(e,t){return Cf((()=>{const t=rL(e);return pg(t,1)}))}}XB.className="GlobalAveragePooling1D",ep.registerClass(XB);class JB extends KB{constructor(e){super(e||{})}call(e,t){return Cf((()=>{const t=rL(e);return Km(t,1)}))}}JB.className="GlobalMaxPooling1D",ep.registerClass(JB);class YB extends fL{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nM(this.dataFormat),this.inputSpec=[new lL({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new IO}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class QB extends YB{call(e,t){return Cf((()=>{const t=rL(e);return"channelsLast"===this.dataFormat?pg(t,[1,2]):pg(t,[2,3])}))}}QB.className="GlobalAveragePooling2D",ep.registerClass(QB);class ZB extends YB{call(e,t){return Cf((()=>{const t=rL(e);return"channelsLast"===this.dataFormat?Km(t,[1,2]):Km(t,[2,3])}))}}ZB.className="GlobalMaxPooling2D",ep.registerClass(ZB);class eV extends fL{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=qL(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class tV extends eV{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=sL(e)).length<3)throw new kO(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=sL(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Cf((()=>XP(((e,n)=>[rL(this.layer.call(e,t)),[]]),e=rL(e),[],!1,null,null,!1,!0)[1]))}}tV.className="TimeDistributed",ep.registerClass(tV);class nV extends eV{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=qL(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=qL(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,VO(eM,"BidirectionalMergeMode",s),e.weights)throw new IO("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):AO(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=KP(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new kO("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new lL({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new IO("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof cL;for(const e of a)if(e instanceof cL!==o)throw new kO("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Cf((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Gf(s,1)),"concat"===this.mergeMode?i=kM([r,s]):"sum"===this.mergeMode?i=Kf(r,s):"ave"===this.mergeMode?i=Wp(.5,Kf(r,s)):"mul"===this.mergeMode?i=Wp(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){iM(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),iM(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=qL(t.layer);if(delete t.layer,null!=t.numConstants)throw new IO("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}nV.className="Bidirectional",ep.registerClass(nV);var rV,sV,aV;Ci().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(sV=rV||(rV={}))[sV.DT_INVALID=0]="DT_INVALID",sV[sV.DT_FLOAT=1]="DT_FLOAT",sV[sV.DT_DOUBLE=2]="DT_DOUBLE",sV[sV.DT_INT32=3]="DT_INT32",sV[sV.DT_UINT8=4]="DT_UINT8",sV[sV.DT_INT16=5]="DT_INT16",sV[sV.DT_INT8=6]="DT_INT8",sV[sV.DT_STRING=7]="DT_STRING",sV[sV.DT_COMPLEX64=8]="DT_COMPLEX64",sV[sV.DT_INT64=9]="DT_INT64",sV[sV.DT_BOOL=10]="DT_BOOL",sV[sV.DT_QINT8=11]="DT_QINT8",sV[sV.DT_QUINT8=12]="DT_QUINT8",sV[sV.DT_QINT32=13]="DT_QINT32",sV[sV.DT_BFLOAT16=14]="DT_BFLOAT16",sV[sV.DT_QINT16=15]="DT_QINT16",sV[sV.DT_QUINT16=16]="DT_QUINT16",sV[sV.DT_UINT16=17]="DT_UINT16",sV[sV.DT_COMPLEX128=18]="DT_COMPLEX128",sV[sV.DT_HALF=19]="DT_HALF",sV[sV.DT_RESOURCE=20]="DT_RESOURCE",sV[sV.DT_VARIANT=21]="DT_VARIANT",sV[sV.DT_UINT32=22]="DT_UINT32",sV[sV.DT_UINT64=23]="DT_UINT64",sV[sV.DT_FLOAT_REF=101]="DT_FLOAT_REF",sV[sV.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",sV[sV.DT_INT32_REF=103]="DT_INT32_REF",sV[sV.DT_UINT8_REF=104]="DT_UINT8_REF",sV[sV.DT_INT16_REF=105]="DT_INT16_REF",sV[sV.DT_INT8_REF=106]="DT_INT8_REF",sV[sV.DT_STRING_REF=107]="DT_STRING_REF",sV[sV.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",sV[sV.DT_INT64_REF=109]="DT_INT64_REF",sV[sV.DT_BOOL_REF=110]="DT_BOOL_REF",sV[sV.DT_QINT8_REF=111]="DT_QINT8_REF",sV[sV.DT_QUINT8_REF=112]="DT_QUINT8_REF",sV[sV.DT_QINT32_REF=113]="DT_QINT32_REF",sV[sV.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",sV[sV.DT_QINT16_REF=115]="DT_QINT16_REF",sV[sV.DT_QUINT16_REF=116]="DT_QUINT16_REF",sV[sV.DT_UINT16_REF=117]="DT_UINT16_REF",sV[sV.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",sV[sV.DT_HALF_REF=119]="DT_HALF_REF",sV[sV.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",sV[sV.DT_VARIANT_REF=121]="DT_VARIANT_REF",sV[sV.DT_UINT32_REF=122]="DT_UINT32_REF",sV[sV.DT_UINT64_REF=123]="DT_UINT64_REF",function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(aV||(aV={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const iV={};function oV(e){return iV[e]}function uV(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return lV(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return t.inputNames.slice(e,i).map((e=>lV(e,n,r,s)))}const o=lV(t.inputNames.slice(e)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:so.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function lV(e,t,n,r){const[s,a]=dV(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[pV(s,e)]));return void 0!==i?t[pV(s,i)][a]:void 0}function cV(e,t,n){return t[pV(e,n.currentContextId)]}function hV(e,t){const[n,r,s]=dV(e);return[pV(n,t&&t.currentContextId),r,s]}function pV(e,t){return t?`${e}-${t}`:e}function dV(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function fV(e,t,n){let r=uV("pad",e,t,n);if("explicit"===r){r=uV("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function mV(e){return e.kept?e:th(e)}var gV={};e(gV,"json",(()=>yV));const yV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bV={};e(bV,"json",(()=>xV));const xV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var vV={};e(vV,"json",(()=>wV));const wV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var kV={};e(kV,"json",(()=>IV));const IV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var SV={};e(SV,"json",(()=>NV));const NV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var TV={};e(TV,"json",(()=>CV));const CV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var EV={};e(EV,"json",(()=>$V));const $V=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var AV={};e(AV,"json",(()=>RV));const RV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var FV={};e(FV,"json",(()=>DV));const DV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var _V={};e(_V,"json",(()=>OV));const OV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var MV={};e(MV,"json",(()=>LV));const LV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var zV={};e(zV,"json",(()=>PV));const PV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var BV={};e(BV,"json",(()=>VV));const VV=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var WV={};e(WV,"json",(()=>UV));const UV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var GV={};e(GV,"json",(()=>jV));const jV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var HV={};e(HV,"json",(()=>qV));const qV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var KV={};e(KV,"json",(()=>XV));const XV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var JV={};e(JV,"json",(()=>YV));const YV=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var QV={};e(QV,"json",(()=>ZV));const ZV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var eW=tl;class tW{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[gV,bV,vV,kV,SV,TV,EV,AV,FV,_V,MV,zV,BV,WV,GV,HV,KV,JV,QV].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=hV(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=hV(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=hV(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=oV(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=rW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=dW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=aW(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=aW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=pW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=sW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=mW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=hW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=fW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=uW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=lW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=oW(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=oW(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=hV(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:iW(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=hV(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=hV(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function nW(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ci().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==eW)return new eW(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function rW(e,t,n,r=!1){const s=e[t];return null!=s?nW(s.s,r):n}function sW(e,t,n){const r=e[t];return r?r.b:n}function aW(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function iW(e){switch("string"==typeof e&&(e=rV[e]),e){case rV.DT_FLOAT:case rV.DT_HALF:return"float32";case rV.DT_INT32:case rV.DT_INT64:case rV.DT_INT8:case rV.DT_UINT8:return"int32";case rV.DT_BOOL:return"bool";case rV.DT_DOUBLE:return"float32";case rV.DT_STRING:return"string";default:return null}}function oW(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function uW(e,t,n){const r=e[t];return r&&r.type?iW(r.type):n}function lW(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>iW(e))):n}function cW(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function hW(e,t,n){const r=e[t];return r&&r.shape?cW(r.shape):n}function pW(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function dW(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>nW(e,r))):n}function fW(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>cW(e))):n}function mW(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class gW{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return lV(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return lV(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return aW(this.node.rawAttrs,e,t);if(null!=n.s)return rW(this.node.rawAttrs,e,t);if(null!=n.b)return sW(this.node.rawAttrs,e,t);if(null!=n.shape)return hW(this.node.rawAttrs,e,t);if(null!=n.type)return uW(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pW(this.node.rawAttrs,e,t);if(null!=n.list.s)return dW(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fW(this.node.rawAttrs,e,t);if(null!=n.list.b)return mW(this.node.rawAttrs,e,t);if(null!=n.list.type)return lW(this.node.rawAttrs,e,t)}return t}}var yW={};n(yW,Df);function bW(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){so.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];so.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function xW(e){return"number"!=typeof e&&!e.some((e=>e<0))}function vW(e,t,n){let r=wW(e,n);const s=!xW(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=wW(e.shape,r)})),!xW(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function wW(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class kW{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=jf(0),$f(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),bW(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,$f(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Zu([],[0].concat(this.elementShape));const n=this.readMany(e);return bW(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Um(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Zu([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return bW(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),_f(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Gm(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Cf((()=>{t=Hp(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=Hp(Lf(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class IW{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);bW(t,e.shape,"TensorList shape mismatch: "),$f(e)})),this.idTensor=jf(0),this.maxNumElements=r,$f(this.idTensor)}get id(){return this.idTensor.id}copy(){return new IW([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);bW(e,this.elementShape,"TensorList shape mismatch: ");const r=vW(this.elementShape,this.tensors,e);return Cf((()=>{const e=this.tensors.map((e=>Hp(e,r)));return Um(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=vW(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,bW(r.shape,e,"TensorList shape mismatch: "),Hp(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(bW(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$f(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new IW([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);bW(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=vW(this.elementShape,this.tensors,t);return Hp(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);bW(this.elementShape,t.shape,"TensorList shape mismatch: "),$f(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);bW(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=vW(this.elementShape,this.tensors,n);return 0===e.length?Zu([],[0].concat(r)):Cf((()=>{const t=e.map((e=>Hp(this.tensors[e],r)));return Um(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);bW(this.elementShape,t,"TensorList shape mismatch: ");const n=vW(this.elementShape,this.tensors,t);return 0===this.size()?Zu([],[0].concat(n)):Cf((()=>{const e=this.tensors.map((e=>Hp(e,n)));return _f(e,0)}))}}function SW(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);bW(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=Gm(e);return new IW(s,t,r)}function NW(e,t,n,r){return new IW([],e,t,r)}function TW(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new IW([],n,e.dtype,r),i=Gm(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}function CW(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=wW(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Cf((()=>{const n=[];e=Hp(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=Hp(Lf(e,o,u),a)}return e.dispose(),n})),u=new IW([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}const EW=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=uV("thenBranch",e,t,n),s=uV("elseBranch",e,t,n),a=uV("cond",e,t,n),i=uV("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=uV("body",e,t,n),s=uV("cond",e,t,n),a=uV("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[mV(uV("pred",e,t,n))];case"Switch":{const r=uV("pred",e,t,n);let s=uV("data",e,t,n);return s.kept||(s=mV(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==lV(e,t,n)));if(r){return[mV(lV(r,t,n))]}return}case"Enter":{const r=uV("frameName",e,t,n),s=uV("tensor",e,t,n);return n.enterFrame(r),[mV(s)]}case"Exit":{const r=uV("tensor",e,t,n);return n.exitFrame(),[mV(r)]}case"NextIteration":{const r=uV("tensor",e,t,n);return n.nextIteration(),[mV(r)]}case"TensorArrayV3":{const r=uV("size",e,t,n),s=uV("dtype",e,t,n),a=uV("elementShape",e,t,n),i=uV("dynamicSize",e,t,n),o=uV("clearAfterRead",e,t,n),u=uV("identicalElementShapes",e,t,n),l=uV("name",e,t,n),c=new kW(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,jf(1)]}case"TensorArrayWriteV3":{const r=uV("tensorArrayId",e,t,n),s=uV("index",e,t,n),a=uV("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=uV("tensorArrayId",e,t,n),s=uV("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=uV("tensorArrayId",e,t,n),s=uV("indices",e,t,n),a=uV("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=uV("tensorArrayId",e,t,n),s=uV("indices",e,t,n),a=uV("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=uV("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=uV("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=uV("tensorArrayId",e,t,n),s=uV("tensor",e,t,n),a=uV("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=uV("tensorArrayId",e,t,n);return[jf(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=uV("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=uV("tensorListId",e,t,n),s=uV("index",e,t,n),a=uV("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=uV("tensorListId",e,t,n),s=uV("index",e,t,n),a=uV("elementShape",e,t,n),i=uV("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=uV("indices",e,t,n),s=TW(uV("tensor",e,t,n),r,uV("elementShape",e,t,n),uV("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=uV("elementShape",e,t,n),s=uV("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=uV(a,e,t,n),o=NW(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=uV("tensorListId",e,t,n),s=uV("indices",e,t,n),a=uV("elementShape",e,t,n),i=uV("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=uV("tensorListId",e,t,n),s=uV("elementShape",e,t,n),a=uV("elementDType",e,t,n),i=uV("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=SW(uV("tensor",e,t,n),uV("elementShape",e,t,n),uV("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=uV("tensorListId",e,t,n),s=n.getTensorList(r.id),a=uV("dtype",e,t,n),i=uV("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=uV("tensorListId",e,t,n),s=uV("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=uV("tensorListId",e,t,n),s=uV("elementShape",e,t,n),a=uV("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=uV("tensor",e,t,n),s=uV("elementShape",e,t,n),a=CW(r,uV("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=uV("tensorListId",e,t,n);return[jf(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=uV("tensorListId",e,t,n),s=uV("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function $W(e,t,n){const[r,s]=uV("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=uV("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=uV("strides",e,t,n),h=fV(e,t,n),p=uV("dataFormat",e,t,n).toUpperCase(),d=uV("dilations",e,t,n);let[f,m]=uV("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:uV("leakyreluAlpha",e,t,n)}}function AW(e,t,n){return{boxes:uV("boxes",e,t,n),scores:uV("scores",e,t,n),maxOutputSize:uV("maxOutputSize",e,t,n),iouThreshold:uV("iouThreshold",e,t,n),scoreThreshold:uV("scoreThreshold",e,t,n),softNmsSigma:uV("softNmsSigma",e,t,n)}}class RW{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=jf(0),this.tensorMap=new Map,$f(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return jf(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Cf((()=>{const e=Gm(t),r=n.length,s=e.length;so.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];$f(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Cf((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Um(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function FW(e,t,n,r,s=Cf){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(uV("a",e,t,n),uV("b",e,t,n))];case"AddN":return[r.addN(uV("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(uV("a",e,t,n),uV("b",e,t,n))];case"Mul":return[r.mul(uV("a",e,t,n),uV("b",e,t,n))];case"RealDiv":case"Div":return[r.div(uV("a",e,t,n),uV("b",e,t,n))];case"DivNoNan":return[r.divNoNan(uV("a",e,t,n),uV("b",e,t,n))];case"FloorDiv":return[r.floorDiv(uV("a",e,t,n),uV("b",e,t,n))];case"Sub":return[r.sub(uV("a",e,t,n),uV("b",e,t,n))];case"Minimum":return[r.minimum(uV("a",e,t,n),uV("b",e,t,n))];case"Maximum":return[r.maximum(uV("a",e,t,n),uV("b",e,t,n))];case"Pow":return[r.pow(uV("a",e,t,n),uV("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(uV("a",e,t,n),uV("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(uV("x",e,t,n))];case"Acos":return[r.acos(uV("x",e,t,n))];case"Acosh":return[r.acosh(uV("x",e,t,n))];case"Asin":return[r.asin(uV("x",e,t,n))];case"Asinh":return[r.asinh(uV("x",e,t,n))];case"Atan":return[r.atan(uV("x",e,t,n))];case"Atan2":return[r.atan2(uV("x",e,t,n),uV("y",e,t,n))];case"Atanh":return[r.atanh(uV("x",e,t,n))];case"Ceil":return[r.ceil(uV("x",e,t,n))];case"Complex":return[r.complex(uV("real",e,t,n),uV("imag",e,t,n))];case"Cos":return[r.cos(uV("x",e,t,n))];case"Cosh":return[r.cosh(uV("x",e,t,n))];case"Elu":return[r.elu(uV("x",e,t,n))];case"Erf":return[r.erf(uV("x",e,t,n))];case"Exp":return[r.exp(uV("x",e,t,n))];case"Expm1":return[r.expm1(uV("x",e,t,n))];case"Floor":return[r.floor(uV("x",e,t,n))];case"Log":return[r.log(uV("x",e,t,n))];case"Log1p":return[r.log1p(uV("x",e,t,n))];case"Imag":return[r.imag(uV("x",e,t,n))];case"Neg":return[r.neg(uV("x",e,t,n))];case"Reciprocal":return[r.reciprocal(uV("x",e,t,n))];case"Real":return[r.real(uV("x",e,t,n))];case"Relu":return[r.relu(uV("x",e,t,n))];case"Round":return[r.round(uV("x",e,t,n))];case"Selu":return[r.selu(uV("x",e,t,n))];case"Sigmoid":return[r.sigmoid(uV("x",e,t,n))];case"Sin":return[r.sin(uV("x",e,t,n))];case"Sign":return[r.sign(uV("x",e,t,n))];case"Sinh":return[r.sinh(uV("x",e,t,n))];case"Softplus":return[r.softplus(uV("x",e,t,n))];case"Sqrt":return[r.sqrt(uV("x",e,t,n))];case"Square":return[r.square(uV("x",e,t,n))];case"Tanh":return[r.tanh(uV("x",e,t,n))];case"Tan":return[r.tan(uV("x",e,t,n))];case"ClipByValue":return[r.clipByValue(uV("x",e,t,n),uV("clipValueMin",e,t,n),uV("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(uV("x",e,t,n))];case"Rsqrt":return[r.rsqrt(lV(e.inputNames[0],t,n))];case"Prod":return[r.prod(uV("x",e,t,n),uV("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(uV("x",e,t,n),uV("alpha",e,t,n))];case"Prelu":return[r.prelu(uV("x",e,t,n),uV("alpha",e,t,n))];case"IsNan":return[r.isNaN(lV(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return EW(e,t,n);case"convolution":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Conv1D":{const s=uV("stride",e,t,n),a=uV("pad",e,t,n),i=uV("dataFormat",e,t,n).toUpperCase(),o=uV("dilation",e,t,n);return[r.conv1d(uV("x",e,t,n),uV("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=uV("strides",e,t,n),a=fV(e,t,n),i=uV("dataFormat",e,t,n).toUpperCase(),o=uV("dilations",e,t,n);return[r.conv2d(uV("x",e,t,n),uV("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=$W(e,t,n);return[r.fused.conv2d({x:uV("x",e,t,n),filter:uV("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=$W(e,t,n);return[r.fused.depthwiseConv2d({x:uV("x",e,t,n),filter:uV("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=uV("outputShape",e,t,n),a=uV("strides",e,t,n),i=fV(e,t,n);return[r.conv2dTranspose(uV("x",e,t,n),uV("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=uV("strides",e,t,n),a=fV(e,t,n),i=uV("dilations",e,t,n),o=uV("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(uV("input",e,t,n),uV("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("dataFormat",e,t,n).toUpperCase(),o=uV("dilations",e,t,n);return[r.conv3d(uV("x",e,t,n),uV("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("kernelSize",e,t,n);return[r.avgPool(uV("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("kernelSize",e,t,n);return[r.maxPool(uV("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("kernelSize",e,t,n),o=uV("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(uV("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[u,l]}case"AvgPool3D":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("kernelSize",e,t,n);return[r.avgPool3d(uV("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("kernelSize",e,t,n);return[r.maxPool3d(uV("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=uV("strides",e,t,n),a=uV("pad",e,t,n),i=uV("dilations",e,t,n),o=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d(uV("x",e,t,n),uV("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Fill":{const s=uV("shape",e,t,n),a=uV("dtype",e,t,n),i=uV("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=uV("start",e,t,n),a=uV("stop",e,t,n),i=uV("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=uV("logits",e,t,n),a=uV("numSamples",e,t,n),i=uV("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=uV("indices",e,t,n),a=uV("depth",e,t,n),i=uV("onValue",e,t,n),o=uV("offValue",e,t,n),u=uV("dtype",e,t,n);return[r.oneHot(s,a,i,o,u)]}case"Ones":return[r.ones(uV("shape",e,t,n),uV("dtype",e,t,n))];case"OnesLike":return[r.onesLike(uV("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(uV("shape",e,t,n),uV("dtype",e,t,n),uV("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(uV("shape",e,t,n),uV("minval",e,t,n),uV("maxval",e,t,n),uV("dtype",e,t,n))];case"Range":{const s=uV("start",e,t,n),a=uV("stop",e,t,n),i=uV("step",e,t,n);return[r.range(s,a,i,uV("dtype",e,t,n))]}case"TruncatedNormal":{const s=uV("shape",e,t,n),a=uV("mean",e,t,n),i=uV("stdDev",e,t,n),o=uV("seed",e,t,n);return[r.truncatedNormal(s,a,i,uV("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(uV("shape",e,t,n),uV("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(uV("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=yW)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=AW(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=AW(e,t,n),l=uV("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=AW(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,u)]}case"Where":{const r=s.cast(uV("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(uV("x",e,t,n),uV("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"LowerBound":{const s=uV("sortedSequence",e,t,n),a=uV("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=uV("x",e,t,n),a=uV("k",e,t,n),i=uV("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=uV("sortedSequence",e,t,n),a=uV("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=uV("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=uV("x",e,t,n),a=uV("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"ResizeBilinear":{const s=uV("images",e,t,n),a=uV("size",e,t,n),i=uV("alignCorners",e,t,n),o=uV("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=uV("images",e,t,n),a=uV("size",e,t,n),i=uV("alignCorners",e,t,n),o=uV("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=uV("image",e,t,n),a=uV("boxes",e,t,n),i=uV("boxInd",e,t,n),o=uV("cropSize",e,t,n),u=uV("method",e,t,n),l=uV("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const s=uV("images",e,t,n),a=uV("transforms",e,t,n),i=uV("outputShape",e,t,n),o=uV("fillValue",e,t,n),u=uV("interpolation",e,t,n),l=uV("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=uV("default",e,t,n);return[lV(e.name,t,n)||s];case"Placeholder":return[lV(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[mV(uV("x",e,t,n))];case"IdentityN":return uV("x",e,t,n).map((e=>mV(e)));case"Shape":return[r.tensor1d(uV("x",e,t,n).shape,"int32")];case"ShapeN":return uV("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(uV("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(uV("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=uV("x",e,t,n),i=uV("data",e,t,n),o=uV("message",e,t,n),u=uV("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Equal":return[r.equal(uV("a",e,t,n),uV("b",e,t,n))];case"NotEqual":return[r.notEqual(uV("a",e,t,n),uV("b",e,t,n))];case"Greater":return[r.greater(uV("a",e,t,n),uV("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(uV("a",e,t,n),uV("b",e,t,n))];case"Less":return[r.less(uV("a",e,t,n),uV("b",e,t,n))];case"LessEqual":return[r.lessEqual(uV("a",e,t,n),uV("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(uV("a",e,t,n),uV("b",e,t,n))];case"LogicalNot":return[r.logicalNot(uV("a",e,t,n))];case"LogicalOr":return[r.logicalOr(uV("a",e,t,n),uV("b",e,t,n))];case"Select":case"SelectV2":return[r.where(uV("condition",e,t,n),uV("a",e,t,n),uV("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(uV("a",e,t,n),uV("b",e,t,n),uV("transposeA",e,t,n),uV("transposeB",e,t,n))];case"Einsum":return[r.einsum(uV("equation",e,t,n),...uV("tensors",e,t,n))];case"Transpose":return[r.transpose(uV("x",e,t,n),uV("perm",e,t,n))];case"_FusedMatMul":const[s,a]=uV("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,u=uV("numArgs",e,t,n),l=uV("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=uV("args",e,t,n);return[r.fused.matMul({a:uV("a",e,t,n),b:uV("b",e,t,n),transposeA:uV("transposeA",e,t,n),transposeB:uV("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(uV("x",e,t,n),uV("axis",e,t,n),uV("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(uV("x",e,t,n),uV("mean",e,t,n),uV("variance",e,t,n),uV("offset",e,t,n),uV("scale",e,t,n),uV("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(uV("x",e,t,n),uV("radius",e,t,n),uV("bias",e,t,n),uV("alpha",e,t,n),uV("beta",e,t,n))];case"Softmax":return[r.softmax(uV("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(uV("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(uV("sparseIndices",e,t,n),uV("outputShape",e,t,n),uV("sparseValues",e,t,n),uV("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Max":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.max(uV("x",e,t,n),s,a)]}case"Mean":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.mean(uV("x",e,t,n),s,a)]}case"Min":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.min(uV("x",e,t,n),s,a)]}case"Sum":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.sum(uV("x",e,t,n),s,a)]}case"All":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.all(uV("x",e,t,n),s,a)]}case"Any":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.any(uV("x",e,t,n),s,a)]}case"ArgMax":{const s=uV("axis",e,t,n);return[r.argMax(uV("x",e,t,n),s)]}case"ArgMin":{const s=uV("axis",e,t,n);return[r.argMin(uV("x",e,t,n),s)]}case"Prod":{const s=uV("axis",e,t,n),a=uV("keepDims",e,t,n);return[r.prod(uV("x",e,t,n),s,a)]}case"Cumprod":{const s=uV("axis",e,t,n),a=uV("exclusive",e,t,n),i=uV("reverse",e,t,n);return[r.cumprod(uV("x",e,t,n),s,a,i)]}case"Cumsum":{const s=uV("axis",e,t,n),a=uV("exclusive",e,t,n),i=uV("reverse",e,t,n);return[r.cumsum(uV("x",e,t,n),s,a,i)]}case"Bincount":const s=uV("x",e,t,n),a=uV("weights",e,t,n),i=uV("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=uV("x",e,t,n),a=uV("weights",e,t,n),i=uV("size",e,t,n),o=uV("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=uV("n",e,t,n),a=uV("axis",e,t,n);let i=uV("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=uV("x",e,t,n),a=uV("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=uV("axis",e,t,n),a=uV("batchDims",e,t,n),i=uV("x",e,t,n),o=uV("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=uV("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=uV("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=uV("axis",e,t,n),a=uV("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=uV("begin",e,t,n),a=uV("size",e,t,n);return[r.slice(uV("x",e,t,n),s,a)]}case"StridedSlice":{const s=uV("begin",e,t,n),a=uV("end",e,t,n),i=uV("strides",e,t,n),o=uV("beginMask",e,t,n),u=uV("endMask",e,t,n),l=uV("ellipsisMask",e,t,n),c=uV("newAxisMask",e,t,n),h=uV("shrinkAxisMask",e,t,n),p=uV("x",e,t,n);return[r.stridedSlice(p,s,a,i,o,u,l,c,h)]}case"Pack":return Cf((()=>{const s=uV("axis",e,t,n),a=uV("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,u=a.map((e=>{const t=so.arraysEqual(e.shape,i);if(!t&&!so.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(u,s)]}));case"Unpack":{const s=uV("axis",e,t,n),a=uV("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=uV("reps",e,t,n);return[r.tile(uV("x",e,t,n),s)]}case"Split":case"SplitV":{const s=uV("axis",e,t,n),a=uV("numOrSizeSplits",e,t,n),i=uV("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=uV("indices",e,t,n),a=uV("values",e,t,n),i=uV("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=uV("x",e,t,n),a=uV("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=uV("sparseIndices",e,t,n),a=uV("outputShape",e,t,n),i=uV("sparseValues",e,t,n),o=uV("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(uV("indices",e,t,n),uV("values",e,t,n),uV("denseShape",e,t,n),uV("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(uV("inputIndices",e,t,n),uV("inputShape",e,t,n),uV("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(uV("data",e,t,n),uV("indices",e,t,n),uV("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(uV("data",e,t,n),uV("indices",e,t,n),uV("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"FFT":return[r.fft(uV("x",e,t,n))];case"IFFT":return[r.ifft(uV("x",e,t,n))];case"RFFT":return[r.rfft(uV("x",e,t,n))];case"IRFFT":return[r.irfft(uV("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(uV("data",e,t,n),uV("dataSplits",e,t,n),uV("separator",e,t,n),uV("nGramWidths",e,t,n),uV("leftPad",e,t,n),uV("rightPad",e,t,n),uV("padWidth",e,t,n),uV("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(uV("input",e,t,n),uV("delimiter",e,t,n),uV("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(uV("input",e,t,n),uV("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=yW)=>{switch(e.op){case"Cast":return[r.cast(uV("x",e,t,n),uV("dtype",e,t,n))];case"ExpandDims":{const s=uV("axis",e,t,n);return[r.expandDims(uV("x",e,t,n),s)]}case"Squeeze":{const s=uV("axis",e,t,n);return[r.squeeze(uV("x",e,t,n),s)]}case"Reshape":return[r.reshape(uV("x",e,t,n),uV("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(uV("x",e,t,n),uV("padding",e,t,n),uV("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(uV("x",e,t,n),uV("padding",e,t,n),uV("constantValue",e,t,n))];case"SpaceToBatchND":{const s=uV("blockShape",e,t,n),a=uV("paddings",e,t,n);return[r.spaceToBatchND(uV("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=uV("blockShape",e,t,n),a=uV("crops",e,t,n);return[r.batchToSpaceND(uV("x",e,t,n),s,a)]}case"DepthToSpace":{const s=uV("blockSize",e,t,n),a=uV("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(uV("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(uV("x",e,t,n),uV("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(uV("s0",e,t,n),uV("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=uV("keyDType",e,t,n),a=uV("valueDType",e,t,n),i=new RW(s,a);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=uV("tableHandle",e,t,n,r),a=uV("keys",e,t,n),i=uV("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=uV("tableHandle",e,t,n,r),a=uV("keys",e,t,n),i=uV("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=uV("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=oV(e.op);if(a&&a.customExecutor)return a.customExecutor(new gW(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return so.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class DW{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function _W(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>dV(e)[0]));let c=[];null!=r&&(c=r.map((e=>dV(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(PW(e)||BW(e)||VW(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function OW(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((e=>dV(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}const MW=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],LW=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],zW=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function PW(e){return MW.indexOf(e.op)>=0}function BW(e){return LW.indexOf(e.op)>=0}function VW(e){return zW.indexOf(e.op)>=0}class WW{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new WW(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=_W(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return OW(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[dV(e)[0]])),s=t.map((e=>dV(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return Cf((()=>{const n=new DW(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=dV(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=FW(t,r,n,this._resourceManager);if(so.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),t.map((e=>lV(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=cV(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=hV(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ci().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new DW(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const i=t.map((e=>lV(e,this.tensorsMap,a))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[dV(e)[0]])),i=n.map((e=>dV(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=_W(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=dV(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!PW(e)&&!lV(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&uV("isConstant",e.node,r,n)&&([c]=hV(e.node.name,n)),null==r[e.node.name]){const h=FW(e.node,r,n,this._resourceManager);c||([c]=hV(e.node.name,n));const p=n.currentContext;so.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=hV(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!lV(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!lV(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=dV(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));so.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&so.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=dV(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=dV(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class UW{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class GW{constructor(e,t={},n=rh){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new UW}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return so.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new WW(tW.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=tW.Instance.transformGraph(e.modelInitializer);this.initializer=new WW(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){const n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const e={};return(n instanceof hu?[n]:n).forEach(((t,n)=>e[this.structuredOutputKeys[n]]=t)),e}return n}normalizeInputs(e){if(!(e instanceof hu||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function jW(e,t={},n=rh){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}model.json?tfjs-format=file`}
/** @license See the LICENSE file. */(e));const r=new GW(e,t,n);return await r.load(),r}const HW={0:"background",1:"tench, Tinca tinca",2:"goldfish, Carassius auratus",3:"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias",4:"tiger shark, Galeocerdo cuvieri",5:"hammerhead, hammerhead shark",6:"electric ray, crampfish, numbfish, torpedo",7:"stingray",8:"cock",9:"hen",10:"ostrich, Struthio camelus",11:"brambling, Fringilla montifringilla",12:"goldfinch, Carduelis carduelis",13:"house finch, linnet, Carpodacus mexicanus",14:"junco, snowbird",15:"indigo bunting, indigo finch, indigo bird, Passerina cyanea",16:"robin, American robin, Turdus migratorius",17:"bulbul",18:"jay",19:"magpie",20:"chickadee",21:"water ouzel, dipper",22:"kite",23:"bald eagle, American eagle, Haliaeetus leucocephalus",24:"vulture",25:"great grey owl, great gray owl, Strix nebulosa",26:"European fire salamander, Salamandra salamandra",27:"common newt, Triturus vulgaris",28:"eft",29:"spotted salamander, Ambystoma maculatum",30:"axolotl, mud puppy, Ambystoma mexicanum",31:"bullfrog, Rana catesbeiana",32:"tree frog, tree-frog",33:"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui",34:"loggerhead, loggerhead turtle, Caretta caretta",35:"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea",36:"mud turtle",37:"terrapin",38:"box turtle, box tortoise",39:"banded gecko",40:"common iguana, iguana, Iguana iguana",41:"American chameleon, anole, Anolis carolinensis",42:"whiptail, whiptail lizard",43:"agama",44:"frilled lizard, Chlamydosaurus kingi",45:"alligator lizard",46:"Gila monster, Heloderma suspectum",47:"green lizard, Lacerta viridis",48:"African chameleon, Chamaeleo chamaeleon",49:"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis",50:"African crocodile, Nile crocodile, Crocodylus niloticus",51:"American alligator, Alligator mississipiensis",52:"triceratops",53:"thunder snake, worm snake, Carphophis amoenus",54:"ringneck snake, ring-necked snake, ring snake",55:"hognose snake, puff adder, sand viper",56:"green snake, grass snake",57:"king snake, kingsnake",58:"garter snake, grass snake",59:"water snake",60:"vine snake",61:"night snake, Hypsiglena torquata",62:"boa constrictor, Constrictor constrictor",63:"rock python, rock snake, Python sebae",64:"Indian cobra, Naja naja",65:"green mamba",66:"sea snake",67:"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus",68:"diamondback, diamondback rattlesnake, Crotalus adamanteus",69:"sidewinder, horned rattlesnake, Crotalus cerastes",70:"trilobite",71:"harvestman, daddy longlegs, Phalangium opilio",72:"scorpion",73:"black and gold garden spider, Argiope aurantia",74:"barn spider, Araneus cavaticus",75:"garden spider, Aranea diademata",76:"black widow, Latrodectus mactans",77:"tarantula",78:"wolf spider, hunting spider",79:"tick",80:"centipede",81:"black grouse",82:"ptarmigan",83:"ruffed grouse, partridge, Bonasa umbellus",84:"prairie chicken, prairie grouse, prairie fowl",85:"peacock",86:"quail",87:"partridge",88:"African grey, African gray, Psittacus erithacus",89:"macaw",90:"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita",91:"lorikeet",92:"coucal",93:"bee eater",94:"hornbill",95:"hummingbird",96:"jacamar",97:"toucan",98:"drake",99:"red-breasted merganser, Mergus serrator",100:"goose",101:"black swan, Cygnus atratus",102:"tusker",103:"echidna, spiny anteater, anteater",104:"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus",105:"wallaby, brush kangaroo",106:"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus",107:"wombat",108:"jelly fish",109:"sea anemone, anemone",110:"brain coral",111:"flatworm, platyhelminth",112:"nematode, nematode worm, roundworm",113:"conch",114:"snail",115:"slug",116:"sea slug, nudibranch",117:"chiton, coat-of-mail shell, sea cradle, polyplacophore",118:"chambered nautilus, pearly nautilus, nautilus",119:"Dungeness crab, Cancer magister",120:"rock crab, Cancer irroratus",121:"fiddler crab",122:"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica",123:"American lobster, Northern lobster, Maine lobster, Homarus americanus",124:"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish",125:"crayfish, crawfish, crawdad, crawdaddy",126:"hermit crab",127:"isopod",128:"white stork, Ciconia ciconia",129:"black stork, Ciconia nigra",130:"spoonbill",131:"flamingo",132:"little blue heron, Egretta caerulea",133:"American egret, great white heron, Egretta albus",134:"bittern",135:"crane",136:"limpkin, Aramus pictus",137:"European gallinule, Porphyrio porphyrio",138:"American coot, marsh hen, mud hen, water hen, Fulica americana",139:"bustard",140:"ruddy turnstone, Arenaria interpres",141:"red-backed sandpiper, dunlin, Erolia alpina",142:"redshank, Tringa totanus",143:"dowitcher",144:"oystercatcher, oyster catcher",145:"pelican",146:"king penguin, Aptenodytes patagonica",147:"albatross, mollymawk",148:"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus",149:"killer whale, killer, orca, grampus, sea wolf, Orcinus orca",150:"dugong, Dugong dugon",151:"sea lion",152:"Chihuahua",153:"Japanese spaniel",154:"Maltese dog, Maltese terrier, Maltese",155:"Pekinese, Pekingese, Peke",156:"Shih-Tzu",157:"Blenheim spaniel",158:"papillon",159:"toy terrier",160:"Rhodesian ridgeback",161:"Afghan hound, Afghan",162:"basset, basset hound",163:"beagle",164:"bloodhound, sleuthhound",165:"bluetick",166:"black-and-tan coonhound",167:"Walker hound, Walker foxhound",168:"English foxhound",169:"redbone",170:"borzoi, Russian wolfhound",171:"Irish wolfhound",172:"Italian greyhound",173:"whippet",174:"Ibizan hound, Ibizan Podenco",175:"Norwegian elkhound, elkhound",176:"otterhound, otter hound",177:"Saluki, gazelle hound",178:"Scottish deerhound, deerhound",179:"Weimaraner",180:"Staffordshire bullterrier, Staffordshire bull terrier",181:"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier",182:"Bedlington terrier",183:"Border terrier",184:"Kerry blue terrier",185:"Irish terrier",186:"Norfolk terrier",187:"Norwich terrier",188:"Yorkshire terrier",189:"wire-haired fox terrier",190:"Lakeland terrier",191:"Sealyham terrier, Sealyham",192:"Airedale, Airedale terrier",193:"cairn, cairn terrier",194:"Australian terrier",195:"Dandie Dinmont, Dandie Dinmont terrier",196:"Boston bull, Boston terrier",197:"miniature schnauzer",198:"giant schnauzer",199:"standard schnauzer",200:"Scotch terrier, Scottish terrier, Scottie",201:"Tibetan terrier, chrysanthemum dog",202:"silky terrier, Sydney silky",203:"soft-coated wheaten terrier",204:"West Highland white terrier",205:"Lhasa, Lhasa apso",206:"flat-coated retriever",207:"curly-coated retriever",208:"golden retriever",209:"Labrador retriever",210:"Chesapeake Bay retriever",211:"German short-haired pointer",212:"vizsla, Hungarian pointer",213:"English setter",214:"Irish setter, red setter",215:"Gordon setter",216:"Brittany spaniel",217:"clumber, clumber spaniel",218:"English springer, English springer spaniel",219:"Welsh springer spaniel",220:"cocker spaniel, English cocker spaniel, cocker",221:"Sussex spaniel",222:"Irish water spaniel",223:"kuvasz",224:"schipperke",225:"groenendael",226:"malinois",227:"briard",228:"kelpie",229:"komondor",230:"Old English sheepdog, bobtail",231:"Shetland sheepdog, Shetland sheep dog, Shetland",232:"collie",233:"Border collie",234:"Bouvier des Flandres, Bouviers des Flandres",235:"Rottweiler",236:"German shepherd, German shepherd dog, German police dog, alsatian",237:"Doberman, Doberman pinscher",238:"miniature pinscher",239:"Greater Swiss Mountain dog",240:"Bernese mountain dog",241:"Appenzeller",242:"EntleBucher",243:"boxer",244:"bull mastiff",245:"Tibetan mastiff",246:"French bulldog",247:"Great Dane",248:"Saint Bernard, St Bernard",249:"Eskimo dog, husky",250:"malamute, malemute, Alaskan malamute",251:"Siberian husky",252:"dalmatian, coach dog, carriage dog",253:"affenpinscher, monkey pinscher, monkey dog",254:"basenji",255:"pug, pug-dog",256:"Leonberg",257:"Newfoundland, Newfoundland dog",258:"Great Pyrenees",259:"Samoyed, Samoyede",260:"Pomeranian",261:"chow, chow chow",262:"keeshond",263:"Brabancon griffon",264:"Pembroke, Pembroke Welsh corgi",265:"Cardigan, Cardigan Welsh corgi",266:"toy poodle",267:"miniature poodle",268:"standard poodle",269:"Mexican hairless",270:"timber wolf, grey wolf, gray wolf, Canis lupus",271:"white wolf, Arctic wolf, Canis lupus tundrarum",272:"red wolf, maned wolf, Canis rufus, Canis niger",273:"coyote, prairie wolf, brush wolf, Canis latrans",274:"dingo, warrigal, warragal, Canis dingo",275:"dhole, Cuon alpinus",276:"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus",277:"hyena, hyaena",278:"red fox, Vulpes vulpes",279:"kit fox, Vulpes macrotis",280:"Arctic fox, white fox, Alopex lagopus",281:"grey fox, gray fox, Urocyon cinereoargenteus",282:"tabby, tabby cat",283:"tiger cat",284:"Persian cat",285:"Siamese cat, Siamese",286:"Egyptian cat",287:"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor",288:"lynx, catamount",289:"leopard, Panthera pardus",290:"snow leopard, ounce, Panthera uncia",291:"jaguar, panther, Panthera onca, Felis onca",292:"lion, king of beasts, Panthera leo",293:"tiger, Panthera tigris",294:"cheetah, chetah, Acinonyx jubatus",295:"brown bear, bruin, Ursus arctos",296:"American black bear, black bear, Ursus americanus, Euarctos americanus",297:"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus",298:"sloth bear, Melursus ursinus, Ursus ursinus",299:"mongoose",300:"meerkat, mierkat",301:"tiger beetle",302:"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle",303:"ground beetle, carabid beetle",304:"long-horned beetle, longicorn, longicorn beetle",305:"leaf beetle, chrysomelid",306:"dung beetle",307:"rhinoceros beetle",308:"weevil",309:"fly",310:"bee",311:"ant, emmet, pismire",312:"grasshopper, hopper",313:"cricket",314:"walking stick, walkingstick, stick insect",315:"cockroach, roach",316:"mantis, mantid",317:"cicada, cicala",318:"leafhopper",319:"lacewing, lacewing fly",320:"dragonfly, darning needle, devil's darning needle, sewingneedle, snake feeder, snake doctor, mosquito hawk, skeeter hawk",321:"damselfly",322:"admiral",323:"ringlet, ringlet butterfly",324:"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus",325:"cabbage butterfly",326:"sulphur butterfly, sulfur butterfly",327:"lycaenid, lycaenid butterfly",328:"starfish, sea star",329:"sea urchin",330:"sea cucumber, holothurian",331:"wood rabbit, cottontail, cottontail rabbit",332:"hare",333:"Angora, Angora rabbit",334:"hamster",335:"porcupine, hedgehog",336:"fox squirrel, eastern fox squirrel, Sciurus niger",337:"marmot",338:"beaver",339:"guinea pig, Cavia cobaya",340:"sorrel",341:"zebra",342:"hog, pig, grunter, squealer, Sus scrofa",343:"wild boar, boar, Sus scrofa",344:"warthog",345:"hippopotamus, hippo, river horse, Hippopotamus amphibius",346:"ox",347:"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis",348:"bison",349:"ram, tup",350:"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis",351:"ibex, Capra ibex",352:"hartebeest",353:"impala, Aepyceros melampus",354:"gazelle",355:"Arabian camel, dromedary, Camelus dromedarius",356:"llama",357:"weasel",358:"mink",359:"polecat, fitch, foulmart, foumart, Mustela putorius",360:"black-footed ferret, ferret, Mustela nigripes",361:"otter",362:"skunk, polecat, wood pussy",363:"badger",364:"armadillo",365:"three-toed sloth, ai, Bradypus tridactylus",366:"orangutan, orang, orangutang, Pongo pygmaeus",367:"gorilla, Gorilla gorilla",368:"chimpanzee, chimp, Pan troglodytes",369:"gibbon, Hylobates lar",370:"siamang, Hylobates syndactylus, Symphalangus syndactylus",371:"guenon, guenon monkey",372:"patas, hussar monkey, Erythrocebus patas",373:"baboon",374:"macaque",375:"langur",376:"colobus, colobus monkey",377:"proboscis monkey, Nasalis larvatus",378:"marmoset",379:"capuchin, ringtail, Cebus capucinus",380:"howler monkey, howler",381:"titi, titi monkey",382:"spider monkey, Ateles geoffroyi",383:"squirrel monkey, Saimiri sciureus",384:"Madagascar cat, ring-tailed lemur, Lemur catta",385:"indri, indris, Indri indri, Indri brevicaudatus",386:"Indian elephant, Elephas maximus",387:"African elephant, Loxodonta africana",388:"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens",389:"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca",390:"barracouta, snoek",391:"eel",392:"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch",393:"rock beauty, Holocanthus tricolor",394:"anemone fish",395:"sturgeon",396:"gar, garfish, garpike, billfish, Lepisosteus osseus",397:"lionfish",398:"puffer, pufferfish, blowfish, globefish",399:"abacus",400:"abaya",401:"academic gown, academic robe, judge's robe",402:"accordion, piano accordion, squeeze box",403:"acoustic guitar",404:"aircraft carrier, carrier, flattop, attack aircraft carrier",405:"airliner",406:"airship, dirigible",407:"altar",408:"ambulance",409:"amphibian, amphibious vehicle",410:"analog clock",411:"apiary, bee house",412:"apron",413:"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",414:"assault rifle, assault gun",415:"backpack, back pack, knapsack, packsack, rucksack, haversack",416:"bakery, bakeshop, bakehouse",417:"balance beam, beam",418:"balloon",419:"ballpoint, ballpoint pen, ballpen, Biro",420:"Band Aid",421:"banjo",422:"bannister, banister, balustrade, balusters, handrail",423:"barbell",424:"barber chair",425:"barbershop",426:"barn",427:"barometer",428:"barrel, cask",429:"barrow, garden cart, lawn cart, wheelbarrow",430:"baseball",431:"basketball",432:"bassinet",433:"bassoon",434:"bathing cap, swimming cap",435:"bath towel",436:"bathtub, bathing tub, bath, tub",437:"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon",438:"beacon, lighthouse, beacon light, pharos",439:"beaker",440:"bearskin, busby, shako",441:"beer bottle",442:"beer glass",443:"bell cote, bell cot",444:"bib",445:"bicycle-built-for-two, tandem bicycle, tandem",446:"bikini, two-piece",447:"binder, ring-binder",448:"binoculars, field glasses, opera glasses",449:"birdhouse",450:"boathouse",451:"bobsled, bobsleigh, bob",452:"bolo tie, bolo, bola tie, bola",453:"bonnet, poke bonnet",454:"bookcase",455:"bookshop, bookstore, bookstall",456:"bottlecap",457:"bow",458:"bow tie, bow-tie, bowtie",459:"brass, memorial tablet, plaque",460:"brassiere, bra, bandeau",461:"breakwater, groin, groyne, mole, bulwark, seawall, jetty",462:"breastplate, aegis, egis",463:"broom",464:"bucket, pail",465:"buckle",466:"bulletproof vest",467:"bullet train, bullet",468:"butcher shop, meat market",469:"cab, hack, taxi, taxicab",470:"caldron, cauldron",471:"candle, taper, wax light",472:"cannon",473:"canoe",474:"can opener, tin opener",475:"cardigan",476:"car mirror",477:"carousel, carrousel, merry-go-round, roundabout, whirligig",478:"carpenter's kit, tool kit",479:"carton",480:"car wheel",481:"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM",482:"cassette",483:"cassette player",484:"castle",485:"catamaran",486:"CD player",487:"cello, violoncello",488:"cellular telephone, cellular phone, cellphone, cell, mobile phone",489:"chain",490:"chainlink fence",491:"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour",492:"chain saw, chainsaw",493:"chest",494:"chiffonier, commode",495:"chime, bell, gong",496:"china cabinet, china closet",497:"Christmas stocking",498:"church, church building",499:"cinema, movie theater, movie theatre, movie house, picture palace",500:"cleaver, meat cleaver, chopper",501:"cliff dwelling",502:"cloak",503:"clog, geta, patten, sabot",504:"cocktail shaker",505:"coffee mug",506:"coffeepot",507:"coil, spiral, volute, whorl, helix",508:"combination lock",509:"computer keyboard, keypad",510:"confectionery, confectionary, candy store",511:"container ship, containership, container vessel",512:"convertible",513:"corkscrew, bottle screw",514:"cornet, horn, trumpet, trump",515:"cowboy boot",516:"cowboy hat, ten-gallon hat",517:"cradle",518:"crane",519:"crash helmet",520:"crate",521:"crib, cot",522:"Crock Pot",523:"croquet ball",524:"crutch",525:"cuirass",526:"dam, dike, dyke",527:"desk",528:"desktop computer",529:"dial telephone, dial phone",530:"diaper, nappy, napkin",531:"digital clock",532:"digital watch",533:"dining table, board",534:"dishrag, dishcloth",535:"dishwasher, dish washer, dishwashing machine",536:"disk brake, disc brake",537:"dock, dockage, docking facility",538:"dogsled, dog sled, dog sleigh",539:"dome",540:"doormat, welcome mat",541:"drilling platform, offshore rig",542:"drum, membranophone, tympan",543:"drumstick",544:"dumbbell",545:"Dutch oven",546:"electric fan, blower",547:"electric guitar",548:"electric locomotive",549:"entertainment center",550:"envelope",551:"espresso maker",552:"face powder",553:"feather boa, boa",554:"file, file cabinet, filing cabinet",555:"fireboat",556:"fire engine, fire truck",557:"fire screen, fireguard",558:"flagpole, flagstaff",559:"flute, transverse flute",560:"folding chair",561:"football helmet",562:"forklift",563:"fountain",564:"fountain pen",565:"four-poster",566:"freight car",567:"French horn, horn",568:"frying pan, frypan, skillet",569:"fur coat",570:"garbage truck, dustcart",571:"gasmask, respirator, gas helmet",572:"gas pump, gasoline pump, petrol pump, island dispenser",573:"goblet",574:"go-kart",575:"golf ball",576:"golfcart, golf cart",577:"gondola",578:"gong, tam-tam",579:"gown",580:"grand piano, grand",581:"greenhouse, nursery, glasshouse",582:"grille, radiator grille",583:"grocery store, grocery, food market, market",584:"guillotine",585:"hair slide",586:"hair spray",587:"half track",588:"hammer",589:"hamper",590:"hand blower, blow dryer, blow drier, hair dryer, hair drier",591:"hand-held computer, hand-held microcomputer",592:"handkerchief, hankie, hanky, hankey",593:"hard disc, hard disk, fixed disk",594:"harmonica, mouth organ, harp, mouth harp",595:"harp",596:"harvester, reaper",597:"hatchet",598:"holster",599:"home theater, home theatre",600:"honeycomb",601:"hook, claw",602:"hoopskirt, crinoline",603:"horizontal bar, high bar",604:"horse cart, horse-cart",605:"hourglass",606:"iPod",607:"iron, smoothing iron",608:"jack-o'-lantern",609:"jean, blue jean, denim",610:"jeep, landrover",611:"jersey, T-shirt, tee shirt",612:"jigsaw puzzle",613:"jinrikisha, ricksha, rickshaw",614:"joystick",615:"kimono",616:"knee pad",617:"knot",618:"lab coat, laboratory coat",619:"ladle",620:"lampshade, lamp shade",621:"laptop, laptop computer",622:"lawn mower, mower",623:"lens cap, lens cover",624:"letter opener, paper knife, paperknife",625:"library",626:"lifeboat",627:"lighter, light, igniter, ignitor",628:"limousine, limo",629:"liner, ocean liner",630:"lipstick, lip rouge",631:"Loafer",632:"lotion",633:"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system",634:"loupe, jeweler's loupe",635:"lumbermill, sawmill",636:"magnetic compass",637:"mailbag, postbag",638:"mailbox, letter box",639:"maillot",640:"maillot, tank suit",641:"manhole cover",642:"maraca",643:"marimba, xylophone",644:"mask",645:"matchstick",646:"maypole",647:"maze, labyrinth",648:"measuring cup",649:"medicine chest, medicine cabinet",650:"megalith, megalithic structure",651:"microphone, mike",652:"microwave, microwave oven",653:"military uniform",654:"milk can",655:"minibus",656:"miniskirt, mini",657:"minivan",658:"missile",659:"mitten",660:"mixing bowl",661:"mobile home, manufactured home",662:"Model T",663:"modem",664:"monastery",665:"monitor",666:"moped",667:"mortar",668:"mortarboard",669:"mosque",670:"mosquito net",671:"motor scooter, scooter",672:"mountain bike, all-terrain bike, off-roader",673:"mountain tent",674:"mouse, computer mouse",675:"mousetrap",676:"moving van",677:"muzzle",678:"nail",679:"neck brace",680:"necklace",681:"nipple",682:"notebook, notebook computer",683:"obelisk",684:"oboe, hautboy, hautbois",685:"ocarina, sweet potato",686:"odometer, hodometer, mileometer, milometer",687:"oil filter",688:"organ, pipe organ",689:"oscilloscope, scope, cathode-ray oscilloscope, CRO",690:"overskirt",691:"oxcart",692:"oxygen mask",693:"packet",694:"paddle, boat paddle",695:"paddlewheel, paddle wheel",696:"padlock",697:"paintbrush",698:"pajama, pyjama, pj's, jammies",699:"palace",700:"panpipe, pandean pipe, syrinx",701:"paper towel",702:"parachute, chute",703:"parallel bars, bars",704:"park bench",705:"parking meter",706:"passenger car, coach, carriage",707:"patio, terrace",708:"pay-phone, pay-station",709:"pedestal, plinth, footstall",710:"pencil box, pencil case",711:"pencil sharpener",712:"perfume, essence",713:"Petri dish",714:"photocopier",715:"pick, plectrum, plectron",716:"pickelhaube",717:"picket fence, paling",718:"pickup, pickup truck",719:"pier",720:"piggy bank, penny bank",721:"pill bottle",722:"pillow",723:"ping-pong ball",724:"pinwheel",725:"pirate, pirate ship",726:"pitcher, ewer",727:"plane, carpenter's plane, woodworking plane",728:"planetarium",729:"plastic bag",730:"plate rack",731:"plow, plough",732:"plunger, plumber's helper",733:"Polaroid camera, Polaroid Land camera",734:"pole",735:"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria",736:"poncho",737:"pool table, billiard table, snooker table",738:"pop bottle, soda bottle",739:"pot, flowerpot",740:"potter's wheel",741:"power drill",742:"prayer rug, prayer mat",743:"printer",744:"prison, prison house",745:"projectile, missile",746:"projector",747:"puck, hockey puck",748:"punching bag, punch bag, punching ball, punchball",749:"purse",750:"quill, quill pen",751:"quilt, comforter, comfort, puff",752:"racer, race car, racing car",753:"racket, racquet",754:"radiator",755:"radio, wireless",756:"radio telescope, radio reflector",757:"rain barrel",758:"recreational vehicle, RV, R.V.",759:"reel",760:"reflex camera",761:"refrigerator, icebox",762:"remote control, remote",763:"restaurant, eating house, eating place, eatery",764:"revolver, six-gun, six-shooter",765:"rifle",766:"rocking chair, rocker",767:"rotisserie",768:"rubber eraser, rubber, pencil eraser",769:"rugby ball",770:"rule, ruler",771:"running shoe",772:"safe",773:"safety pin",774:"saltshaker, salt shaker",775:"sandal",776:"sarong",777:"sax, saxophone",778:"scabbard",779:"scale, weighing machine",780:"school bus",781:"schooner",782:"scoreboard",783:"screen, CRT screen",784:"screw",785:"screwdriver",786:"seat belt, seatbelt",787:"sewing machine",788:"shield, buckler",789:"shoe shop, shoe-shop, shoe store",790:"shoji",791:"shopping basket",792:"shopping cart",793:"shovel",794:"shower cap",795:"shower curtain",796:"ski",797:"ski mask",798:"sleeping bag",799:"slide rule, slipstick",800:"sliding door",801:"slot, one-armed bandit",802:"snorkel",803:"snowmobile",804:"snowplow, snowplough",805:"soap dispenser",806:"soccer ball",807:"sock",808:"solar dish, solar collector, solar furnace",809:"sombrero",810:"soup bowl",811:"space bar",812:"space heater",813:"space shuttle",814:"spatula",815:"speedboat",816:"spider web, spider's web",817:"spindle",818:"sports car, sport car",819:"spotlight, spot",820:"stage",821:"steam locomotive",822:"steel arch bridge",823:"steel drum",824:"stethoscope",825:"stole",826:"stone wall",827:"stopwatch, stop watch",828:"stove",829:"strainer",830:"streetcar, tram, tramcar, trolley, trolley car",831:"stretcher",832:"studio couch, day bed",833:"stupa, tope",834:"submarine, pigboat, sub, U-boat",835:"suit, suit of clothes",836:"sundial",837:"sunglass",838:"sunglasses, dark glasses, shades",839:"sunscreen, sunblock, sun blocker",840:"suspension bridge",841:"swab, swob, mop",842:"sweatshirt",843:"swimming trunks, bathing trunks",844:"swing",845:"switch, electric switch, electrical switch",846:"syringe",847:"table lamp",848:"tank, army tank, armored combat vehicle, armoured combat vehicle",849:"tape player",850:"teapot",851:"teddy, teddy bear",852:"television, television system",853:"tennis ball",854:"thatch, thatched roof",855:"theater curtain, theatre curtain",856:"thimble",857:"thresher, thrasher, threshing machine",858:"throne",859:"tile roof",860:"toaster",861:"tobacco shop, tobacconist shop, tobacconist",862:"toilet seat",863:"torch",864:"totem pole",865:"tow truck, tow car, wrecker",866:"toyshop",867:"tractor",868:"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi",869:"tray",870:"trench coat",871:"tricycle, trike, velocipede",872:"trimaran",873:"tripod",874:"triumphal arch",875:"trolleybus, trolley coach, trackless trolley",876:"trombone",877:"tub, vat",878:"turnstile",879:"typewriter keyboard",880:"umbrella",881:"unicycle, monocycle",882:"upright, upright piano",883:"vacuum, vacuum cleaner",884:"vase",885:"vault",886:"velvet",887:"vending machine",888:"vestment",889:"viaduct",890:"violin, fiddle",891:"volleyball",892:"waffle iron",893:"wall clock",894:"wallet, billfold, notecase, pocketbook",895:"wardrobe, closet, press",896:"warplane, military plane",897:"washbasin, handbasin, washbowl, lavabo, wash-hand basin",898:"washer, automatic washer, washing machine",899:"water bottle",900:"water jug",901:"water tower",902:"whiskey jug",903:"whistle",904:"wig",905:"window screen",906:"window shade",907:"Windsor tie",908:"wine bottle",909:"wing",910:"wok",911:"wooden spoon",912:"wool, woolen, woollen",913:"worm fence, snake fence, snake-rail fence, Virginia fence",914:"wreck",915:"yawl",916:"yurt",917:"web site, website, internet site, site",918:"comic book",919:"crossword puzzle, crossword",920:"street sign",921:"traffic light, traffic signal, stoplight",922:"book jacket, dust cover, dust jacket, dust wrapper",923:"menu",924:"plate",925:"guacamole",926:"consomme",927:"hot pot, hotpot",928:"trifle",929:"ice cream, icecream",930:"ice lolly, lolly, lollipop, popsicle",931:"French loaf",932:"bagel, beigel",933:"pretzel",934:"cheeseburger",935:"hotdog, hot dog, red hot",936:"mashed potato",937:"head cabbage",938:"broccoli",939:"cauliflower",940:"zucchini, courgette",941:"spaghetti squash",942:"acorn squash",943:"butternut squash",944:"cucumber, cuke",945:"artichoke, globe artichoke",946:"bell pepper",947:"cardoon",948:"mushroom",949:"Granny Smith",950:"strawberry",951:"orange",952:"lemon",953:"fig",954:"pineapple, ananas",955:"banana",956:"jackfruit, jak, jack",957:"custard apple",958:"pomegranate",959:"hay",960:"carbonara",961:"chocolate sauce, chocolate syrup",962:"dough",963:"meat loaf, meatloaf",964:"pizza, pizza pie",965:"potpie",966:"burrito",967:"red wine",968:"espresso",969:"cup",970:"eggnog",971:"alp",972:"bubble",973:"cliff, drop, drop-off",974:"coral reef",975:"geyser",976:"lakeside, lakeshore",977:"promontory, headland, head, foreland",978:"sandbar, sand bar",979:"seashore, coast, seacoast, sea-coast",980:"valley, vale",981:"volcano",982:"ballplayer, baseball player",983:"groom, bridegroom",984:"scuba diver",985:"rapeseed",986:"daisy",987:"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum",988:"corn",989:"acorn",990:"hip, rose hip, rosehip",991:"buckeye, horse chestnut, conker",992:"coral fungus",993:"agaric",994:"gyromitra",995:"stinkhorn, carrion fungus",996:"earthstar",997:"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa",998:"bolete",999:"ear, spike, capitulum",1e3:"toilet tissue, toilet paper, bathroom tissue"},qW=jf(127.5);
/** @license See the LICENSE file. */async function KW(){return jW("./tfjs/model.json")}class XW{constructor(e,t,n,r){this.model=e,this.img=t,this.height=n,this.width=r,this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.scaleX=this.canvas.width/this.width,this.scaleY=this.canvas.height/this.height,this.ctx.clearRect(0,0,640,640),this.canvas.height=this.scaleX*this.height,this.ctx.drawImage(t,0,0,this.scaleX*this.width,this.canvas.height),this.font="16px sans-serif",this.ctx.font=this.font,this.ctx.textBaseline="top"}async load(){this.model=await jW("./tfjs/model.json")}dispose(){this.model&&this.model.dispose()}async predict(e){Dm(_m(e.asType("float32"),qW),qW);const t=e.reshape([1,...e.shape]);try{const e=await this.model.executeAsync(t),n=e[3].arraySync()[0],r=Math.max(...n);n.indexOf(r);let s=[];for(let e=0;e<n.length;e++){n[e]>.6&&s.push(e)}for(let t=0;t<e.length;t++){const r=e[t].arraySync();1===t&&s.forEach((e=>{this.renderBox(r[0][e],n[e])}))}return e}catch(e){return console.error(e),null}}renderBox(e,t,n,r){const s=e[0]*this.height*this.scaleY,a=e[1]*this.width*this.scaleX,i=e[2]*this.height*this.scaleY,o=a,u=s,l=e[3]*this.width*this.scaleX-a,c=i-s;this.ctx.strokeStyle="#00FFFF",this.ctx.lineWidth=4,this.ctx.strokeRect(o,u,l,c),this.ctx.fillStyle="#00FFFF";const h=this.ctx.measureText("Sock "+(100*t).toFixed(2)+"%").width,p=parseInt(this.font,10);this.ctx.fillRect(o,u,h+4,p+4),this.ctx.fillStyle="#000000",this.ctx.fillText("Sock "+(100*t).toFixed(2)+"%",o,u)}getTopKClasses(e,t){const n=Cf((()=>Xb(e))),r=n.dataSync();n.dispose();let s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});return s=s.sort(((e,t)=>t.value-e.value)).slice(0,t),console.log("Prediction List: ",s),s.map((e=>({label:HW[e.index],value:e.value})))}}let JW,YW,QW,ZW,eU,tU,nU,rU,sU=new Image;function aU(e){e.preventDefault();const t=`/tfjs/${this.id}.jpg`;console.log("Setting new img src: ",t),eU.classList.remove("hidden"),eU.classList.add("flex"),sU.src=t}sU.onload=async()=>{const e=new XW(JW,sU,sU.height,sU.width);void 0===JW&&await e.load();const t=Eh.fromPixels(sU);let n=Date.now();console.time("First prediction");try{await e.predict(t);let r=Date.now();console.timeEnd("First prediction"),eU.classList.remove("flex"),eU.classList.add("hidden"),rU.innerText="Prediction / Drawing boxes: "+(r-n)/1e3+"secs"}catch(e){console.error(e)}},window.onload=async function(){document.getElementById("debugshow").onclick=function(){tU.classList.remove("hidden")},tU=document.getElementById("debugmodal"),document.getElementById("debugclose").onclick=function(){tU.classList.add("hidden")},nU=document.getElementById("debugmodel"),rU=document.getElementById("debugprediction"),eU=document.getElementById("loading"),console.log("Onload"),console.time("Loading of model");let e=Date.now();JW=await KW();let t=Date.now();nU.innerText="Loading of model: "+(t-e)/1e3+"secs",console.timeEnd("Loading of model"),sU.src="/tfjs/socks0.jpg",function(){const e=document.getElementById("buttons");for(let t=0;t<15;t++){const n=document.createElement("button");n.type="button",n.className="btn-socks",n.id="socks"+t,n.innerHTML=`\n    <span class="pl-2 font-semibold">Image</span>\n    ${t}${t>12?'<span class="pl-1">untrained</span>':""}`,n.onclick=aU,e.appendChild(n)}}(),ZW=document.getElementById("image-input"),ZW.addEventListener("change",(function(){const e=new FileReader;e.addEventListener("load",(()=>{const t=e.result;sU.src=t})),e.readAsDataURL(this.files[0])})),YW=document.getElementById("canvas"),QW=YW.getContext("2d")};
//# sourceMappingURL=index.54ab9713.js.map
